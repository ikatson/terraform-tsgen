import {rstring, rboolean, rnumber, Reference, Data, Resource, HasID, Provider} from "./core"

export interface _aws_provider__assume_role {
    /**
     * The external ID to use when assuming the role. If omitted, no external ID is passed to the AssumeRole call.    
     */
    external_id?: rstring
    /**
     * The permissions applied when assuming a role. You cannot use, this policy to grant further permissions that are in excess to those of the,  role that is being assumed.    
     */
    policy?: rstring
    /**
     * The ARN of an IAM role to assume prior to making API calls.    
     */
    role_arn?: rstring
    /**
     * The session name to use when assuming the role. If omitted, no session name is passed to the AssumeRole call.    
     */
    session_name?: rstring
}

export interface _aws_provider__endpoints {
    acm?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    apigateway?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    autoscaling?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    cloudformation?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    cloudwatch?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    cloudwatchevents?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    cloudwatchlogs?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    devicefarm?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.
It's typically used to connect to dynamodb-local.    
     */
    dynamodb?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    ec2?: rstring
    ecr?: rstring
    ecs?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    efs?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    elb?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    es?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    iam?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.
It's typically used to connect to kinesalite.    
     */
    kinesis?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    kinesis_analytics?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    kms?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`    
     */
    lambda?: rstring
    r53?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    rds?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    s3?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    s3control?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    sns?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    sqs?: rstring
    /**
     * Use this to override the default endpoint URL constructed from the `region`.    
     */
    ssm?: rstring
    sts?: rstring
}

export interface aws_provider_config {
    /**
     * The access key for API operations. You can retrieve this
from the 'Security & Credentials' section of the AWS console.    
     */
    access_key?: rstring
    allowed_account_ids?: rstring[]
    assume_role?: _aws_provider__assume_role[]
    /**
     * Use this to override the default endpoint URL constructed from the `region`.
It's typically used to connect to dynamodb-local.    
     */
    dynamodb_endpoint?: rstring
    endpoints?: _aws_provider__endpoints[]
    forbidden_account_ids?: rstring[]
    /**
     * Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`    
     */
    insecure?: rboolean
    /**
     * Use this to override the default endpoint URL constructed from the `region`.
It's typically used to connect to kinesalite.    
     */
    kinesis_endpoint?: rstring
    /**
     * The maximum number of times an AWS API request is
being executed. If the API request still fails, an error is
thrown.    
     */
    max_retries?: rnumber
    /**
     * The profile for API operations. If not set, the default profile
created with `aws configure` will be used.    
     */
    profile?: rstring
    /**
     * The region where AWS operations will take place. Examples
are us-east-1, us-west-2, etc.    
     */
    region: rstring
    /**
     * Set this to true to force the request to use path-style addressing,
i.e., http://s3.amazonaws.com/BUCKET/KEY. By default, the S3 client will
use virtual hosted bucket addressing when possible
(http://BUCKET.s3.amazonaws.com/KEY). Specific to the Amazon S3 service.    
     */
    s3_force_path_style?: rboolean
    /**
     * The secret key for API operations. You can retrieve this
from the 'Security & Credentials' section of the AWS console.    
     */
    secret_key?: rstring
    /**
     * The path to the shared credentials file. If not set
this defaults to ~/.aws/credentials.    
     */
    shared_credentials_file?: rstring
    /**
     * Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS available/implemented.    
     */
    skip_credentials_validation?: rboolean
    /**
     * Skip getting the supported EC2 platforms. Used by users that don't have ec2:DescribeAccountAttributes permissions.    
     */
    skip_get_ec2_platforms?: rboolean
    skip_metadata_api_check?: rboolean
    /**
     * Skip static validation of region name. Used by users of alternative AWS-like APIs or users w/ access to regions that are not public (yet).    
     */
    skip_region_validation?: rboolean
    /**
     * Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.    
     */
    skip_requesting_account_id?: rboolean
    /**
     * session token. A session token is only required if you are
using temporary security credentials.    
     */
    token?: rstring
}

export class aws_provider implements Provider {
    config: aws_provider_config
    constructor(config: aws_provider_config) {
      this.config = config;
    }
    toJSON() {
      return {
          aws: [this.config]
      }
    }
    
}

export interface _aws_acm_certificate__domain_validation_options {
    domain_name?: rstring
    resource_record_name?: rstring
    resource_record_type?: rstring
    resource_record_value?: rstring
}

export interface aws_acm_certificate_config {
    arn?: rstring
    certificate_body?: rstring
    certificate_chain?: rstring
    domain_name?: rstring
    domain_validation_options?: _aws_acm_certificate__domain_validation_options[]
    private_key?: rstring
    subject_alternative_names?: rstring[]
    tags?: {[propName: string]: rstring}
    validation_emails?: rstring[]
    validation_method?: rstring
}

export class aws_acm_certificate implements Resource {
    config: aws_acm_certificate_config
    private _is_data: boolean = false
    private _name: string = "aws_acm_certificate"
    private _id: string;
    constructor(id: string, config: aws_acm_certificate_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_certificate_body(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_body`)
    }
    get ref_certificate_chain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_chain`)
    }
    get ref_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name`)
    }
    get ref_domain_validation_options(): Reference<_aws_acm_certificate__domain_validation_options[]> {
        return new Reference(`${this._name}.${this._id}.domain_validation_options`)
    }
    get ref_private_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_key`)
    }
    get ref_subject_alternative_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subject_alternative_names`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_validation_emails(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.validation_emails`)
    }
    get ref_validation_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.validation_method`)
    }
}

export interface aws_acm_certificate_validation_config {
    certificate_arn: rstring
    validation_record_fqdns?: rstring[]
}

export class aws_acm_certificate_validation implements Resource {
    config: aws_acm_certificate_validation_config
    private _is_data: boolean = false
    private _name: string = "aws_acm_certificate_validation"
    private _id: string;
    constructor(id: string, config: aws_acm_certificate_validation_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_arn`)
    }
    get ref_validation_record_fqdns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.validation_record_fqdns`)
    }
}

export interface __aws_acmpca_certificate_authority__certificate_authority_configuration__subject {
    common_name?: rstring
    country?: rstring
    distinguished_name_qualifier?: rstring
    generation_qualifier?: rstring
    given_name?: rstring
    initials?: rstring
    locality?: rstring
    organization?: rstring
    organizational_unit?: rstring
    pseudonym?: rstring
    state?: rstring
    surname?: rstring
    title?: rstring
}

export interface _aws_acmpca_certificate_authority__certificate_authority_configuration {
    key_algorithm: rstring
    signing_algorithm: rstring
    subject: __aws_acmpca_certificate_authority__certificate_authority_configuration__subject[]
}

export interface __aws_acmpca_certificate_authority__revocation_configuration__crl_configuration {
    custom_cname?: rstring
    enabled?: rboolean
    expiration_in_days: rnumber
    s3_bucket_name?: rstring
}

export interface _aws_acmpca_certificate_authority__revocation_configuration {
    crl_configuration?: __aws_acmpca_certificate_authority__revocation_configuration__crl_configuration[]
}

export interface aws_acmpca_certificate_authority_config {
    arn?: rstring
    certificate?: rstring
    certificate_authority_configuration: _aws_acmpca_certificate_authority__certificate_authority_configuration[]
    certificate_chain?: rstring
    certificate_signing_request?: rstring
    enabled?: rboolean
    not_after?: rstring
    not_before?: rstring
    revocation_configuration?: _aws_acmpca_certificate_authority__revocation_configuration[]
    serial?: rstring
    status?: rstring
    tags?: {[propName: string]: rstring}
    type?: rstring
}

export class aws_acmpca_certificate_authority implements Resource {
    config: aws_acmpca_certificate_authority_config
    private _is_data: boolean = false
    private _name: string = "aws_acmpca_certificate_authority"
    private _id: string;
    constructor(id: string, config: aws_acmpca_certificate_authority_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_certificate(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate`)
    }
    get ref_certificate_authority_configuration(): Reference<_aws_acmpca_certificate_authority__certificate_authority_configuration[]> {
        return new Reference(`${this._name}.${this._id}.certificate_authority_configuration`)
    }
    get ref_certificate_chain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_chain`)
    }
    get ref_certificate_signing_request(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_signing_request`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_not_after(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.not_after`)
    }
    get ref_not_before(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.not_before`)
    }
    get ref_revocation_configuration(): Reference<_aws_acmpca_certificate_authority__revocation_configuration[]> {
        return new Reference(`${this._name}.${this._id}.revocation_configuration`)
    }
    get ref_serial(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.serial`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface _aws_alb__access_logs {
    bucket: rstring
    enabled?: rboolean
    prefix?: rstring
}

export interface _aws_alb__subnet_mapping {
    allocation_id?: rstring
    subnet_id: rstring
}

export interface aws_alb_config {
    access_logs?: _aws_alb__access_logs[]
    arn?: rstring
    arn_suffix?: rstring
    dns_name?: rstring
    enable_cross_zone_load_balancing?: rboolean
    enable_deletion_protection?: rboolean
    enable_http2?: rboolean
    idle_timeout?: rnumber
    internal?: rboolean
    ip_address_type?: rstring
    load_balancer_type?: rstring
    name?: rstring
    name_prefix?: rstring
    security_groups?: rstring[]
    subnet_mapping?: _aws_alb__subnet_mapping[]
    subnets?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
    zone_id?: rstring
}

export class aws_alb implements Resource {
    config: aws_alb_config
    private _is_data: boolean = false
    private _name: string = "aws_alb"
    private _id: string;
    constructor(id: string, config: aws_alb_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_logs(): Reference<_aws_alb__access_logs[]> {
        return new Reference(`${this._name}.${this._id}.access_logs`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_arn_suffix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn_suffix`)
    }
    get ref_dns_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dns_name`)
    }
    get ref_enable_cross_zone_load_balancing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_cross_zone_load_balancing`)
    }
    get ref_enable_deletion_protection(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_deletion_protection`)
    }
    get ref_enable_http2(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_http2`)
    }
    get ref_idle_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.idle_timeout`)
    }
    get ref_internal(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.internal`)
    }
    get ref_ip_address_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ip_address_type`)
    }
    get ref_load_balancer_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer_type`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_subnet_mapping(): Reference<_aws_alb__subnet_mapping[]> {
        return new Reference(`${this._name}.${this._id}.subnet_mapping`)
    }
    get ref_subnets(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnets`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
    get ref_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.zone_id`)
    }
}

export interface __aws_alb_listener__default_action__authenticate_cognito {
    authentication_request_extra_params?: {[propName: string]: rstring}
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    user_pool_arn: rstring
    user_pool_client_id: rstring
    user_pool_domain: rstring
}

export interface __aws_alb_listener__default_action__authenticate_oidc {
    authentication_request_extra_params?: {[propName: string]: rstring}
    authorization_endpoint: rstring
    client_id: rstring
    client_secret: rstring
    issuer: rstring
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    token_endpoint: rstring
    user_info_endpoint: rstring
}

export interface __aws_alb_listener__default_action__fixed_response {
    content_type: rstring
    message_body?: rstring
    status_code?: rstring
}

export interface __aws_alb_listener__default_action__redirect {
    host?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    query?: rstring
    status_code: rstring
}

export interface _aws_alb_listener__default_action {
    authenticate_cognito?: __aws_alb_listener__default_action__authenticate_cognito[]
    authenticate_oidc?: __aws_alb_listener__default_action__authenticate_oidc[]
    fixed_response?: __aws_alb_listener__default_action__fixed_response[]
    order?: rnumber
    redirect?: __aws_alb_listener__default_action__redirect[]
    target_group_arn?: rstring
    type: rstring
}

export interface aws_alb_listener_config {
    arn?: rstring
    certificate_arn?: rstring
    default_action: _aws_alb_listener__default_action[]
    load_balancer_arn: rstring
    port: rnumber
    protocol?: rstring
    ssl_policy?: rstring
}

export class aws_alb_listener implements Resource {
    config: aws_alb_listener_config
    private _is_data: boolean = false
    private _name: string = "aws_alb_listener"
    private _id: string;
    constructor(id: string, config: aws_alb_listener_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_arn`)
    }
    get ref_default_action(): Reference<_aws_alb_listener__default_action[]> {
        return new Reference(`${this._name}.${this._id}.default_action`)
    }
    get ref_load_balancer_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer_arn`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_protocol(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.protocol`)
    }
    get ref_ssl_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ssl_policy`)
    }
}

export interface aws_alb_listener_certificate_config {
    certificate_arn: rstring
    listener_arn: rstring
}

export class aws_alb_listener_certificate implements Resource {
    config: aws_alb_listener_certificate_config
    private _is_data: boolean = false
    private _name: string = "aws_alb_listener_certificate"
    private _id: string;
    constructor(id: string, config: aws_alb_listener_certificate_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_arn`)
    }
    get ref_listener_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.listener_arn`)
    }
}

export interface __aws_alb_listener_rule__action__authenticate_cognito {
    authentication_request_extra_params?: {[propName: string]: rstring}
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    user_pool_arn: rstring
    user_pool_client_id: rstring
    user_pool_domain: rstring
}

export interface __aws_alb_listener_rule__action__authenticate_oidc {
    authentication_request_extra_params?: {[propName: string]: rstring}
    authorization_endpoint: rstring
    client_id: rstring
    client_secret: rstring
    issuer: rstring
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    token_endpoint: rstring
    user_info_endpoint: rstring
}

export interface __aws_alb_listener_rule__action__fixed_response {
    content_type: rstring
    message_body?: rstring
    status_code?: rstring
}

export interface __aws_alb_listener_rule__action__redirect {
    host?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    query?: rstring
    status_code: rstring
}

export interface _aws_alb_listener_rule__action {
    authenticate_cognito?: __aws_alb_listener_rule__action__authenticate_cognito[]
    authenticate_oidc?: __aws_alb_listener_rule__action__authenticate_oidc[]
    fixed_response?: __aws_alb_listener_rule__action__fixed_response[]
    order?: rnumber
    redirect?: __aws_alb_listener_rule__action__redirect[]
    target_group_arn?: rstring
    type: rstring
}

export interface _aws_alb_listener_rule__condition {
    field?: rstring
    values?: rstring[]
}

export interface aws_alb_listener_rule_config {
    action: _aws_alb_listener_rule__action[]
    arn?: rstring
    condition: _aws_alb_listener_rule__condition[]
    listener_arn: rstring
    priority?: rnumber
}

export class aws_alb_listener_rule implements Resource {
    config: aws_alb_listener_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_alb_listener_rule"
    private _id: string;
    constructor(id: string, config: aws_alb_listener_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_action(): Reference<_aws_alb_listener_rule__action[]> {
        return new Reference(`${this._name}.${this._id}.action`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_condition(): Reference<_aws_alb_listener_rule__condition[]> {
        return new Reference(`${this._name}.${this._id}.condition`)
    }
    get ref_listener_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.listener_arn`)
    }
    get ref_priority(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.priority`)
    }
}

export interface _aws_alb_target_group__health_check {
    healthy_threshold?: rnumber
    interval?: rnumber
    matcher?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    timeout?: rnumber
    unhealthy_threshold?: rnumber
}

export interface _aws_alb_target_group__stickiness {
    cookie_duration?: rnumber
    enabled?: rboolean
    type: rstring
}

export interface aws_alb_target_group_config {
    arn?: rstring
    arn_suffix?: rstring
    deregistration_delay?: rnumber
    health_check?: _aws_alb_target_group__health_check[]
    name?: rstring
    name_prefix?: rstring
    port?: rnumber
    protocol?: rstring
    proxy_protocol_v2?: rboolean
    slow_start?: rnumber
    stickiness?: _aws_alb_target_group__stickiness[]
    tags?: {[propName: string]: rstring}
    target_type?: rstring
    vpc_id?: rstring
}

export class aws_alb_target_group implements Resource {
    config: aws_alb_target_group_config
    private _is_data: boolean = false
    private _name: string = "aws_alb_target_group"
    private _id: string;
    constructor(id: string, config: aws_alb_target_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_arn_suffix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn_suffix`)
    }
    get ref_deregistration_delay(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.deregistration_delay`)
    }
    get ref_health_check(): Reference<_aws_alb_target_group__health_check[]> {
        return new Reference(`${this._name}.${this._id}.health_check`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_protocol(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.protocol`)
    }
    get ref_proxy_protocol_v2(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.proxy_protocol_v2`)
    }
    get ref_slow_start(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.slow_start`)
    }
    get ref_stickiness(): Reference<_aws_alb_target_group__stickiness[]> {
        return new Reference(`${this._name}.${this._id}.stickiness`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_target_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_type`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_alb_target_group_attachment_config {
    availability_zone?: rstring
    port?: rnumber
    target_group_arn: rstring
    target_id: rstring
}

export class aws_alb_target_group_attachment implements Resource {
    config: aws_alb_target_group_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_alb_target_group_attachment"
    private _id: string;
    constructor(id: string, config: aws_alb_target_group_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_target_group_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_group_arn`)
    }
    get ref_target_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_id`)
    }
}

export interface _aws_ami__ebs_block_device {
    delete_on_termination?: rboolean
    device_name: rstring
    encrypted?: rboolean
    iops?: rnumber
    snapshot_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_ami__ephemeral_block_device {
    device_name: rstring
    virtual_name: rstring
}

export interface aws_ami_config {
    architecture?: rstring
    description?: rstring
    ebs_block_device?: _aws_ami__ebs_block_device[]
    ena_support?: rboolean
    ephemeral_block_device?: _aws_ami__ephemeral_block_device[]
    image_location?: rstring
    kernel_id?: rstring
    manage_ebs_snapshots?: rboolean
    name: rstring
    ramdisk_id?: rstring
    root_device_name?: rstring
    root_snapshot_id?: rstring
    sriov_net_support?: rstring
    tags?: {[propName: string]: rstring}
    virtualization_type?: rstring
}

export class aws_ami implements Resource {
    config: aws_ami_config
    private _is_data: boolean = false
    private _name: string = "aws_ami"
    private _id: string;
    constructor(id: string, config: aws_ami_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_architecture(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.architecture`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_ebs_block_device(): Reference<_aws_ami__ebs_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ebs_block_device`)
    }
    get ref_ena_support(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ena_support`)
    }
    get ref_ephemeral_block_device(): Reference<_aws_ami__ephemeral_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ephemeral_block_device`)
    }
    get ref_image_location(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.image_location`)
    }
    get ref_kernel_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kernel_id`)
    }
    get ref_manage_ebs_snapshots(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.manage_ebs_snapshots`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_ramdisk_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ramdisk_id`)
    }
    get ref_root_device_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_device_name`)
    }
    get ref_root_snapshot_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_snapshot_id`)
    }
    get ref_sriov_net_support(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sriov_net_support`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_virtualization_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.virtualization_type`)
    }
}

export interface _aws_ami_copy__ebs_block_device {
    delete_on_termination?: rboolean
    device_name?: rstring
    encrypted?: rboolean
    iops?: rnumber
    snapshot_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_ami_copy__ephemeral_block_device {
    device_name?: rstring
    virtual_name?: rstring
}

export interface aws_ami_copy_config {
    architecture?: rstring
    description?: rstring
    ebs_block_device?: _aws_ami_copy__ebs_block_device[]
    ena_support?: rboolean
    encrypted?: rboolean
    ephemeral_block_device?: _aws_ami_copy__ephemeral_block_device[]
    image_location?: rstring
    kernel_id?: rstring
    kms_key_id?: rstring
    manage_ebs_snapshots?: rboolean
    name: rstring
    ramdisk_id?: rstring
    root_device_name?: rstring
    root_snapshot_id?: rstring
    source_ami_id: rstring
    source_ami_region: rstring
    sriov_net_support?: rstring
    tags?: {[propName: string]: rstring}
    virtualization_type?: rstring
}

export class aws_ami_copy implements Resource {
    config: aws_ami_copy_config
    private _is_data: boolean = false
    private _name: string = "aws_ami_copy"
    private _id: string;
    constructor(id: string, config: aws_ami_copy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_architecture(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.architecture`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_ebs_block_device(): Reference<_aws_ami_copy__ebs_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ebs_block_device`)
    }
    get ref_ena_support(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ena_support`)
    }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.encrypted`)
    }
    get ref_ephemeral_block_device(): Reference<_aws_ami_copy__ephemeral_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ephemeral_block_device`)
    }
    get ref_image_location(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.image_location`)
    }
    get ref_kernel_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kernel_id`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_manage_ebs_snapshots(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.manage_ebs_snapshots`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_ramdisk_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ramdisk_id`)
    }
    get ref_root_device_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_device_name`)
    }
    get ref_root_snapshot_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_snapshot_id`)
    }
    get ref_source_ami_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_ami_id`)
    }
    get ref_source_ami_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_ami_region`)
    }
    get ref_sriov_net_support(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sriov_net_support`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_virtualization_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.virtualization_type`)
    }
}

export interface _aws_ami_from_instance__ebs_block_device {
    delete_on_termination?: rboolean
    device_name?: rstring
    encrypted?: rboolean
    iops?: rnumber
    snapshot_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_ami_from_instance__ephemeral_block_device {
    device_name?: rstring
    virtual_name?: rstring
}

export interface aws_ami_from_instance_config {
    architecture?: rstring
    description?: rstring
    ebs_block_device?: _aws_ami_from_instance__ebs_block_device[]
    ena_support?: rboolean
    ephemeral_block_device?: _aws_ami_from_instance__ephemeral_block_device[]
    image_location?: rstring
    kernel_id?: rstring
    manage_ebs_snapshots?: rboolean
    name: rstring
    ramdisk_id?: rstring
    root_device_name?: rstring
    root_snapshot_id?: rstring
    snapshot_without_reboot?: rboolean
    source_instance_id: rstring
    sriov_net_support?: rstring
    tags?: {[propName: string]: rstring}
    virtualization_type?: rstring
}

export class aws_ami_from_instance implements Resource {
    config: aws_ami_from_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_ami_from_instance"
    private _id: string;
    constructor(id: string, config: aws_ami_from_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_architecture(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.architecture`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_ebs_block_device(): Reference<_aws_ami_from_instance__ebs_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ebs_block_device`)
    }
    get ref_ena_support(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ena_support`)
    }
    get ref_ephemeral_block_device(): Reference<_aws_ami_from_instance__ephemeral_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ephemeral_block_device`)
    }
    get ref_image_location(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.image_location`)
    }
    get ref_kernel_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kernel_id`)
    }
    get ref_manage_ebs_snapshots(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.manage_ebs_snapshots`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_ramdisk_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ramdisk_id`)
    }
    get ref_root_device_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_device_name`)
    }
    get ref_root_snapshot_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_snapshot_id`)
    }
    get ref_snapshot_without_reboot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.snapshot_without_reboot`)
    }
    get ref_source_instance_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_instance_id`)
    }
    get ref_sriov_net_support(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sriov_net_support`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_virtualization_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.virtualization_type`)
    }
}

export interface aws_ami_launch_permission_config {
    account_id: rstring
    image_id: rstring
}

export class aws_ami_launch_permission implements Resource {
    config: aws_ami_launch_permission_config
    private _is_data: boolean = false
    private _name: string = "aws_ami_launch_permission"
    private _id: string;
    constructor(id: string, config: aws_ami_launch_permission_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.account_id`)
    }
    get ref_image_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.image_id`)
    }
}

export interface _aws_api_gateway_account__throttle_settings {
    burst_limit?: rnumber
    rate_limit?: rnumber
}

export interface aws_api_gateway_account_config {
    cloudwatch_role_arn?: rstring
    throttle_settings?: _aws_api_gateway_account__throttle_settings[]
}

export class aws_api_gateway_account implements Resource {
    config: aws_api_gateway_account_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_account"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_account_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cloudwatch_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloudwatch_role_arn`)
    }
    get ref_throttle_settings(): Reference<_aws_api_gateway_account__throttle_settings[]> {
        return new Reference(`${this._name}.${this._id}.throttle_settings`)
    }
}

export interface _aws_api_gateway_api_key__stage_key {
    rest_api_id: rstring
    stage_name: rstring
}

export interface aws_api_gateway_api_key_config {
    created_date?: rstring
    description?: rstring
    enabled?: rboolean
    last_updated_date?: rstring
    name: rstring
    stage_key?: _aws_api_gateway_api_key__stage_key[]
    value?: rstring
}

export class aws_api_gateway_api_key implements Resource {
    config: aws_api_gateway_api_key_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_api_key"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_api_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_last_updated_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_updated_date`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_stage_key(): Reference<_aws_api_gateway_api_key__stage_key[]> {
        return new Reference(`${this._name}.${this._id}.stage_key`)
    }
    get ref_value(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.value`)
    }
}

export interface aws_api_gateway_authorizer_config {
    authorizer_credentials?: rstring
    authorizer_result_ttl_in_seconds?: rnumber
    authorizer_uri?: rstring
    identity_source?: rstring
    identity_validation_expression?: rstring
    name: rstring
    provider_arns?: rstring[]
    rest_api_id: rstring
    type?: rstring
}

export class aws_api_gateway_authorizer implements Resource {
    config: aws_api_gateway_authorizer_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_authorizer"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_authorizer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_authorizer_credentials(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.authorizer_credentials`)
    }
    get ref_authorizer_result_ttl_in_seconds(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.authorizer_result_ttl_in_seconds`)
    }
    get ref_authorizer_uri(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.authorizer_uri`)
    }
    get ref_identity_source(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identity_source`)
    }
    get ref_identity_validation_expression(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identity_validation_expression`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_provider_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.provider_arns`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_api_gateway_base_path_mapping_config {
    api_id: rstring
    base_path?: rstring
    domain_name: rstring
    stage_name?: rstring
}

export class aws_api_gateway_base_path_mapping implements Resource {
    config: aws_api_gateway_base_path_mapping_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_base_path_mapping"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_base_path_mapping_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.api_id`)
    }
    get ref_base_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.base_path`)
    }
    get ref_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name`)
    }
    get ref_stage_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stage_name`)
    }
}

export interface aws_api_gateway_client_certificate_config {
    created_date?: rstring
    description?: rstring
    expiration_date?: rstring
    pem_encoded_certificate?: rstring
}

export class aws_api_gateway_client_certificate implements Resource {
    config: aws_api_gateway_client_certificate_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_client_certificate"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_client_certificate_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_expiration_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.expiration_date`)
    }
    get ref_pem_encoded_certificate(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.pem_encoded_certificate`)
    }
}

export interface aws_api_gateway_deployment_config {
    created_date?: rstring
    description?: rstring
    execution_arn?: rstring
    invoke_url?: rstring
    rest_api_id: rstring
    stage_description?: rstring
    stage_name: rstring
    variables?: {[propName: string]: rstring}
}

export class aws_api_gateway_deployment implements Resource {
    config: aws_api_gateway_deployment_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_deployment"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_deployment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_execution_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.execution_arn`)
    }
    get ref_invoke_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.invoke_url`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_stage_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stage_description`)
    }
    get ref_stage_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stage_name`)
    }
    get ref_variables(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.variables`)
    }
}

export interface _aws_api_gateway_documentation_part__location {
    method?: rstring
    name?: rstring
    path?: rstring
    status_code?: rstring
    type: rstring
}

export interface aws_api_gateway_documentation_part_config {
    location: _aws_api_gateway_documentation_part__location[]
    properties: rstring
    rest_api_id: rstring
}

export class aws_api_gateway_documentation_part implements Resource {
    config: aws_api_gateway_documentation_part_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_documentation_part"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_documentation_part_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_location(): Reference<_aws_api_gateway_documentation_part__location[]> {
        return new Reference(`${this._name}.${this._id}.location`)
    }
    get ref_properties(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.properties`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
}

export interface aws_api_gateway_documentation_version_config {
    description?: rstring
    rest_api_id: rstring
    version: rstring
}

export class aws_api_gateway_documentation_version implements Resource {
    config: aws_api_gateway_documentation_version_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_documentation_version"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_documentation_version_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version`)
    }
}

export interface _aws_api_gateway_domain_name__endpoint_configuration {
    types: rstring[]
}

export interface aws_api_gateway_domain_name_config {
    certificate_arn?: rstring
    certificate_body?: rstring
    certificate_chain?: rstring
    certificate_name?: rstring
    certificate_private_key?: rstring
    certificate_upload_date?: rstring
    cloudfront_domain_name?: rstring
    cloudfront_zone_id?: rstring
    domain_name: rstring
    endpoint_configuration?: _aws_api_gateway_domain_name__endpoint_configuration[]
    regional_certificate_arn?: rstring
    regional_certificate_name?: rstring
    regional_domain_name?: rstring
    regional_zone_id?: rstring
}

export class aws_api_gateway_domain_name implements Resource {
    config: aws_api_gateway_domain_name_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_domain_name"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_domain_name_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_arn`)
    }
    get ref_certificate_body(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_body`)
    }
    get ref_certificate_chain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_chain`)
    }
    get ref_certificate_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_name`)
    }
    get ref_certificate_private_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_private_key`)
    }
    get ref_certificate_upload_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_upload_date`)
    }
    get ref_cloudfront_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloudfront_domain_name`)
    }
    get ref_cloudfront_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloudfront_zone_id`)
    }
    get ref_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name`)
    }
    get ref_endpoint_configuration(): Reference<_aws_api_gateway_domain_name__endpoint_configuration[]> {
        return new Reference(`${this._name}.${this._id}.endpoint_configuration`)
    }
    get ref_regional_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.regional_certificate_arn`)
    }
    get ref_regional_certificate_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.regional_certificate_name`)
    }
    get ref_regional_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.regional_domain_name`)
    }
    get ref_regional_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.regional_zone_id`)
    }
}

export interface aws_api_gateway_gateway_response_config {
    response_parameters?: {[propName: string]: rstring}
    response_templates?: {[propName: string]: rstring}
    response_type: rstring
    rest_api_id: rstring
    status_code?: rstring
}

export class aws_api_gateway_gateway_response implements Resource {
    config: aws_api_gateway_gateway_response_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_gateway_response"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_gateway_response_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_response_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.response_parameters`)
    }
    get ref_response_templates(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.response_templates`)
    }
    get ref_response_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.response_type`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_status_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status_code`)
    }
}

export interface aws_api_gateway_integration_config {
    cache_key_parameters?: rstring[]
    cache_namespace?: rstring
    connection_id?: rstring
    connection_type?: rstring
    content_handling?: rstring
    credentials?: rstring
    http_method: rstring
    integration_http_method?: rstring
    passthrough_behavior?: rstring
    request_parameters?: {[propName: string]: rstring}
    request_parameters_in_json?: rstring
    request_templates?: {[propName: string]: rstring}
    resource_id: rstring
    rest_api_id: rstring
    timeout_milliseconds?: rnumber
    type: rstring
    uri?: rstring
}

export class aws_api_gateway_integration implements Resource {
    config: aws_api_gateway_integration_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_integration"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_integration_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cache_key_parameters(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.cache_key_parameters`)
    }
    get ref_cache_namespace(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cache_namespace`)
    }
    get ref_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connection_id`)
    }
    get ref_connection_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connection_type`)
    }
    get ref_content_handling(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content_handling`)
    }
    get ref_credentials(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.credentials`)
    }
    get ref_http_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.http_method`)
    }
    get ref_integration_http_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.integration_http_method`)
    }
    get ref_passthrough_behavior(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.passthrough_behavior`)
    }
    get ref_request_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.request_parameters`)
    }
    get ref_request_parameters_in_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.request_parameters_in_json`)
    }
    get ref_request_templates(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.request_templates`)
    }
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_timeout_milliseconds(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.timeout_milliseconds`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
    get ref_uri(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.uri`)
    }
}

export interface aws_api_gateway_integration_response_config {
    content_handling?: rstring
    http_method: rstring
    resource_id: rstring
    response_parameters?: {[propName: string]: rstring}
    response_parameters_in_json?: rstring
    response_templates?: {[propName: string]: rstring}
    rest_api_id: rstring
    selection_pattern?: rstring
    status_code: rstring
}

export class aws_api_gateway_integration_response implements Resource {
    config: aws_api_gateway_integration_response_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_integration_response"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_integration_response_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_content_handling(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content_handling`)
    }
    get ref_http_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.http_method`)
    }
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_response_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.response_parameters`)
    }
    get ref_response_parameters_in_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.response_parameters_in_json`)
    }
    get ref_response_templates(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.response_templates`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_selection_pattern(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.selection_pattern`)
    }
    get ref_status_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status_code`)
    }
}

export interface aws_api_gateway_method_config {
    api_key_required?: rboolean
    authorization: rstring
    authorization_scopes?: rstring[]
    authorizer_id?: rstring
    http_method: rstring
    request_models?: {[propName: string]: rstring}
    request_parameters?: {[propName: string]: rstring}
    request_parameters_in_json?: rstring
    request_validator_id?: rstring
    resource_id: rstring
    rest_api_id: rstring
}

export class aws_api_gateway_method implements Resource {
    config: aws_api_gateway_method_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_method"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_method_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_api_key_required(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.api_key_required`)
    }
    get ref_authorization(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.authorization`)
    }
    get ref_authorization_scopes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.authorization_scopes`)
    }
    get ref_authorizer_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.authorizer_id`)
    }
    get ref_http_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.http_method`)
    }
    get ref_request_models(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.request_models`)
    }
    get ref_request_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.request_parameters`)
    }
    get ref_request_parameters_in_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.request_parameters_in_json`)
    }
    get ref_request_validator_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.request_validator_id`)
    }
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
}

export interface aws_api_gateway_method_response_config {
    http_method: rstring
    resource_id: rstring
    response_models?: {[propName: string]: rstring}
    response_parameters?: {[propName: string]: rstring}
    response_parameters_in_json?: rstring
    rest_api_id: rstring
    status_code: rstring
}

export class aws_api_gateway_method_response implements Resource {
    config: aws_api_gateway_method_response_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_method_response"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_method_response_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_http_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.http_method`)
    }
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_response_models(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.response_models`)
    }
    get ref_response_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.response_parameters`)
    }
    get ref_response_parameters_in_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.response_parameters_in_json`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_status_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status_code`)
    }
}

export interface _aws_api_gateway_method_settings__settings {
    cache_data_encrypted?: rboolean
    cache_ttl_in_seconds?: rnumber
    caching_enabled?: rboolean
    data_trace_enabled?: rboolean
    logging_level?: rstring
    metrics_enabled?: rboolean
    require_authorization_for_cache_control?: rboolean
    throttling_burst_limit?: rnumber
    throttling_rate_limit?: rnumber
    unauthorized_cache_control_header_strategy?: rstring
}

export interface aws_api_gateway_method_settings_config {
    method_path: rstring
    rest_api_id: rstring
    settings: _aws_api_gateway_method_settings__settings[]
    stage_name: rstring
}

export class aws_api_gateway_method_settings implements Resource {
    config: aws_api_gateway_method_settings_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_method_settings"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_method_settings_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_method_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.method_path`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_settings(): Reference<_aws_api_gateway_method_settings__settings[]> {
        return new Reference(`${this._name}.${this._id}.settings`)
    }
    get ref_stage_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stage_name`)
    }
}

export interface aws_api_gateway_model_config {
    content_type: rstring
    description?: rstring
    name: rstring
    rest_api_id: rstring
    schema?: rstring
}

export class aws_api_gateway_model implements Resource {
    config: aws_api_gateway_model_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_model"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_model_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_content_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content_type`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_schema(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.schema`)
    }
}

export interface aws_api_gateway_request_validator_config {
    name: rstring
    rest_api_id: rstring
    validate_request_body?: rboolean
    validate_request_parameters?: rboolean
}

export class aws_api_gateway_request_validator implements Resource {
    config: aws_api_gateway_request_validator_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_request_validator"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_request_validator_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_validate_request_body(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.validate_request_body`)
    }
    get ref_validate_request_parameters(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.validate_request_parameters`)
    }
}

export interface aws_api_gateway_resource_config {
    parent_id: rstring
    path?: rstring
    path_part: rstring
    rest_api_id: rstring
}

export class aws_api_gateway_resource implements Resource {
    config: aws_api_gateway_resource_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_resource"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_resource_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_parent_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.parent_id`)
    }
    get ref_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.path`)
    }
    get ref_path_part(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.path_part`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
}

export interface _aws_api_gateway_rest_api__endpoint_configuration {
    types: rstring[]
}

export interface aws_api_gateway_rest_api_config {
    api_key_source?: rstring
    binary_media_types?: rstring[]
    body?: rstring
    created_date?: rstring
    description?: rstring
    endpoint_configuration?: _aws_api_gateway_rest_api__endpoint_configuration[]
    execution_arn?: rstring
    minimum_compression_size?: rnumber
    name: rstring
    policy?: rstring
    root_resource_id?: rstring
}

export class aws_api_gateway_rest_api implements Resource {
    config: aws_api_gateway_rest_api_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_rest_api"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_rest_api_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_api_key_source(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.api_key_source`)
    }
    get ref_binary_media_types(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.binary_media_types`)
    }
    get ref_body(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.body`)
    }
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_endpoint_configuration(): Reference<_aws_api_gateway_rest_api__endpoint_configuration[]> {
        return new Reference(`${this._name}.${this._id}.endpoint_configuration`)
    }
    get ref_execution_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.execution_arn`)
    }
    get ref_minimum_compression_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.minimum_compression_size`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_root_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_resource_id`)
    }
}

export interface _aws_api_gateway_stage__access_log_settings {
    destination_arn: rstring
    format: rstring
}

export interface aws_api_gateway_stage_config {
    access_log_settings?: _aws_api_gateway_stage__access_log_settings[]
    cache_cluster_enabled?: rboolean
    cache_cluster_size?: rstring
    client_certificate_id?: rstring
    deployment_id: rstring
    description?: rstring
    documentation_version?: rstring
    execution_arn?: rstring
    invoke_url?: rstring
    rest_api_id: rstring
    stage_name: rstring
    tags?: {[propName: string]: rstring}
    variables?: {[propName: string]: rstring}
    xray_tracing_enabled?: rboolean
}

export class aws_api_gateway_stage implements Resource {
    config: aws_api_gateway_stage_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_stage"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_stage_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_log_settings(): Reference<_aws_api_gateway_stage__access_log_settings[]> {
        return new Reference(`${this._name}.${this._id}.access_log_settings`)
    }
    get ref_cache_cluster_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.cache_cluster_enabled`)
    }
    get ref_cache_cluster_size(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cache_cluster_size`)
    }
    get ref_client_certificate_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.client_certificate_id`)
    }
    get ref_deployment_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.deployment_id`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_documentation_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.documentation_version`)
    }
    get ref_execution_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.execution_arn`)
    }
    get ref_invoke_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.invoke_url`)
    }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rest_api_id`)
    }
    get ref_stage_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stage_name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_variables(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.variables`)
    }
    get ref_xray_tracing_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.xray_tracing_enabled`)
    }
}

export interface _aws_api_gateway_usage_plan__api_stages {
    api_id: rstring
    stage: rstring
}

export interface _aws_api_gateway_usage_plan__quota_settings {
    limit: rnumber
    offset?: rnumber
    period: rstring
}

export interface _aws_api_gateway_usage_plan__throttle_settings {
    burst_limit?: rnumber
    rate_limit?: rnumber
}

export interface aws_api_gateway_usage_plan_config {
    api_stages?: _aws_api_gateway_usage_plan__api_stages[]
    description?: rstring
    name: rstring
    product_code?: rstring
    quota_settings?: _aws_api_gateway_usage_plan__quota_settings[]
    throttle_settings?: _aws_api_gateway_usage_plan__throttle_settings[]
}

export class aws_api_gateway_usage_plan implements Resource {
    config: aws_api_gateway_usage_plan_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_usage_plan"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_usage_plan_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_api_stages(): Reference<_aws_api_gateway_usage_plan__api_stages[]> {
        return new Reference(`${this._name}.${this._id}.api_stages`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_product_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.product_code`)
    }
    get ref_quota_settings(): Reference<_aws_api_gateway_usage_plan__quota_settings[]> {
        return new Reference(`${this._name}.${this._id}.quota_settings`)
    }
    get ref_throttle_settings(): Reference<_aws_api_gateway_usage_plan__throttle_settings[]> {
        return new Reference(`${this._name}.${this._id}.throttle_settings`)
    }
}

export interface aws_api_gateway_usage_plan_key_config {
    key_id: rstring
    key_type: rstring
    name?: rstring
    usage_plan_id: rstring
    value?: rstring
}

export class aws_api_gateway_usage_plan_key implements Resource {
    config: aws_api_gateway_usage_plan_key_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_usage_plan_key"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_usage_plan_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_id`)
    }
    get ref_key_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_type`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_usage_plan_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.usage_plan_id`)
    }
    get ref_value(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.value`)
    }
}

export interface aws_api_gateway_vpc_link_config {
    description?: rstring
    name: rstring
    target_arns: rstring[]
}

export class aws_api_gateway_vpc_link implements Resource {
    config: aws_api_gateway_vpc_link_config
    private _is_data: boolean = false
    private _name: string = "aws_api_gateway_vpc_link"
    private _id: string;
    constructor(id: string, config: aws_api_gateway_vpc_link_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_target_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.target_arns`)
    }
}

export interface aws_app_cookie_stickiness_policy_config {
    cookie_name: rstring
    lb_port: rnumber
    load_balancer: rstring
    name: rstring
}

export class aws_app_cookie_stickiness_policy implements Resource {
    config: aws_app_cookie_stickiness_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_app_cookie_stickiness_policy"
    private _id: string;
    constructor(id: string, config: aws_app_cookie_stickiness_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cookie_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cookie_name`)
    }
    get ref_lb_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.lb_port`)
    }
    get ref_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_appautoscaling_policy__step_adjustment {
    metric_interval_lower_bound?: rstring
    metric_interval_upper_bound?: rstring
    scaling_adjustment: rnumber
}

export interface __aws_appautoscaling_policy__step_scaling_policy_configuration__step_adjustment {
    metric_interval_lower_bound?: rstring
    metric_interval_upper_bound?: rstring
    scaling_adjustment: rnumber
}

export interface _aws_appautoscaling_policy__step_scaling_policy_configuration {
    adjustment_type?: rstring
    cooldown?: rnumber
    metric_aggregation_type?: rstring
    min_adjustment_magnitude?: rnumber
    step_adjustment?: __aws_appautoscaling_policy__step_scaling_policy_configuration__step_adjustment[]
}

export interface __aws_appautoscaling_policy__target_tracking_scaling_policy_configuration__customized_metric_specification__dimensions {
    name: rstring
    value: rstring
}

export interface __aws_appautoscaling_policy__target_tracking_scaling_policy_configuration__customized_metric_specification {
    dimensions?: __aws_appautoscaling_policy__target_tracking_scaling_policy_configuration__customized_metric_specification__dimensions[]
    metric_name: rstring
    namespace: rstring
    statistic: rstring
    unit?: rstring
}

export interface __aws_appautoscaling_policy__target_tracking_scaling_policy_configuration__predefined_metric_specification {
    predefined_metric_type: rstring
    resource_label?: rstring
}

export interface _aws_appautoscaling_policy__target_tracking_scaling_policy_configuration {
    customized_metric_specification?: __aws_appautoscaling_policy__target_tracking_scaling_policy_configuration__customized_metric_specification[]
    disable_scale_in?: rboolean
    predefined_metric_specification?: __aws_appautoscaling_policy__target_tracking_scaling_policy_configuration__predefined_metric_specification[]
    scale_in_cooldown?: rnumber
    scale_out_cooldown?: rnumber
    target_value: rnumber
}

export interface aws_appautoscaling_policy_config {
    adjustment_type?: rstring
    alarms?: rstring[]
    arn?: rstring
    cooldown?: rnumber
    metric_aggregation_type?: rstring
    min_adjustment_magnitude?: rnumber
    name: rstring
    policy_type?: rstring
    resource_id: rstring
    scalable_dimension: rstring
    service_namespace: rstring
    step_adjustment?: _aws_appautoscaling_policy__step_adjustment[]
    step_scaling_policy_configuration?: _aws_appautoscaling_policy__step_scaling_policy_configuration[]
    target_tracking_scaling_policy_configuration?: _aws_appautoscaling_policy__target_tracking_scaling_policy_configuration[]
}

export class aws_appautoscaling_policy implements Resource {
    config: aws_appautoscaling_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_appautoscaling_policy"
    private _id: string;
    constructor(id: string, config: aws_appautoscaling_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_adjustment_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.adjustment_type`)
    }
    get ref_alarms(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.alarms`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_cooldown(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.cooldown`)
    }
    get ref_metric_aggregation_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_aggregation_type`)
    }
    get ref_min_adjustment_magnitude(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.min_adjustment_magnitude`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_policy_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_type`)
    }
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_scalable_dimension(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.scalable_dimension`)
    }
    get ref_service_namespace(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_namespace`)
    }
    get ref_step_adjustment(): Reference<_aws_appautoscaling_policy__step_adjustment[]> {
        return new Reference(`${this._name}.${this._id}.step_adjustment`)
    }
    get ref_step_scaling_policy_configuration(): Reference<_aws_appautoscaling_policy__step_scaling_policy_configuration[]> {
        return new Reference(`${this._name}.${this._id}.step_scaling_policy_configuration`)
    }
    get ref_target_tracking_scaling_policy_configuration(): Reference<_aws_appautoscaling_policy__target_tracking_scaling_policy_configuration[]> {
        return new Reference(`${this._name}.${this._id}.target_tracking_scaling_policy_configuration`)
    }
}

export interface _aws_appautoscaling_scheduled_action__scalable_target_action {
    max_capacity?: rnumber
    min_capacity?: rnumber
}

export interface aws_appautoscaling_scheduled_action_config {
    arn?: rstring
    end_time?: rstring
    name: rstring
    resource_id: rstring
    scalable_dimension?: rstring
    scalable_target_action?: _aws_appautoscaling_scheduled_action__scalable_target_action[]
    schedule?: rstring
    service_namespace: rstring
    start_time?: rstring
}

export class aws_appautoscaling_scheduled_action implements Resource {
    config: aws_appautoscaling_scheduled_action_config
    private _is_data: boolean = false
    private _name: string = "aws_appautoscaling_scheduled_action"
    private _id: string;
    constructor(id: string, config: aws_appautoscaling_scheduled_action_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_end_time(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.end_time`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_scalable_dimension(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.scalable_dimension`)
    }
    get ref_scalable_target_action(): Reference<_aws_appautoscaling_scheduled_action__scalable_target_action[]> {
        return new Reference(`${this._name}.${this._id}.scalable_target_action`)
    }
    get ref_schedule(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.schedule`)
    }
    get ref_service_namespace(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_namespace`)
    }
    get ref_start_time(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.start_time`)
    }
}

export interface aws_appautoscaling_target_config {
    max_capacity: rnumber
    min_capacity: rnumber
    resource_id: rstring
    role_arn?: rstring
    scalable_dimension: rstring
    service_namespace: rstring
}

export class aws_appautoscaling_target implements Resource {
    config: aws_appautoscaling_target_config
    private _is_data: boolean = false
    private _name: string = "aws_appautoscaling_target"
    private _id: string;
    constructor(id: string, config: aws_appautoscaling_target_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_max_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.max_capacity`)
    }
    get ref_min_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.min_capacity`)
    }
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_scalable_dimension(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.scalable_dimension`)
    }
    get ref_service_namespace(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_namespace`)
    }
}

export interface aws_appmesh_mesh_config {
    arn?: rstring
    created_date?: rstring
    last_updated_date?: rstring
    name: rstring
}

export class aws_appmesh_mesh implements Resource {
    config: aws_appmesh_mesh_config
    private _is_data: boolean = false
    private _name: string = "aws_appmesh_mesh"
    private _id: string;
    constructor(id: string, config: aws_appmesh_mesh_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_last_updated_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_updated_date`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface __aws_appmesh_route__spec__http_route__action__weighted_target {
    virtual_node: rstring
    weight: rnumber
}

export interface __aws_appmesh_route__spec__http_route__action {
    weighted_target: __aws_appmesh_route__spec__http_route__action__weighted_target[]
}

export interface __aws_appmesh_route__spec__http_route__match {
    prefix: rstring
}

export interface __aws_appmesh_route__spec__http_route {
    action: __aws_appmesh_route__spec__http_route__action[]
    match: __aws_appmesh_route__spec__http_route__match[]
}

export interface _aws_appmesh_route__spec {
    http_route?: __aws_appmesh_route__spec__http_route[]
}

export interface aws_appmesh_route_config {
    arn?: rstring
    created_date?: rstring
    last_updated_date?: rstring
    mesh_name: rstring
    name: rstring
    spec: _aws_appmesh_route__spec[]
    virtual_router_name: rstring
}

export class aws_appmesh_route implements Resource {
    config: aws_appmesh_route_config
    private _is_data: boolean = false
    private _name: string = "aws_appmesh_route"
    private _id: string;
    constructor(id: string, config: aws_appmesh_route_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_last_updated_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_updated_date`)
    }
    get ref_mesh_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.mesh_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_spec(): Reference<_aws_appmesh_route__spec[]> {
        return new Reference(`${this._name}.${this._id}.spec`)
    }
    get ref_virtual_router_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.virtual_router_name`)
    }
}

export interface __aws_appmesh_virtual_node__spec__listener__health_check {
    healthy_threshold: rnumber
    interval_millis: rnumber
    path?: rstring
    port?: rnumber
    protocol: rstring
    timeout_millis: rnumber
    unhealthy_threshold: rnumber
}

export interface __aws_appmesh_virtual_node__spec__listener__port_mapping {
    port: rnumber
    protocol: rstring
}

export interface __aws_appmesh_virtual_node__spec__listener {
    health_check?: __aws_appmesh_virtual_node__spec__listener__health_check[]
    port_mapping: __aws_appmesh_virtual_node__spec__listener__port_mapping[]
}

export interface __aws_appmesh_virtual_node__spec__service_discovery__dns {
    service_name: rstring
}

export interface __aws_appmesh_virtual_node__spec__service_discovery {
    dns: __aws_appmesh_virtual_node__spec__service_discovery__dns[]
}

export interface _aws_appmesh_virtual_node__spec {
    backends?: rstring[]
    listener?: __aws_appmesh_virtual_node__spec__listener[]
    service_discovery?: __aws_appmesh_virtual_node__spec__service_discovery[]
}

export interface aws_appmesh_virtual_node_config {
    arn?: rstring
    created_date?: rstring
    last_updated_date?: rstring
    mesh_name: rstring
    name: rstring
    spec: _aws_appmesh_virtual_node__spec[]
}

export class aws_appmesh_virtual_node implements Resource {
    config: aws_appmesh_virtual_node_config
    private _is_data: boolean = false
    private _name: string = "aws_appmesh_virtual_node"
    private _id: string;
    constructor(id: string, config: aws_appmesh_virtual_node_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_last_updated_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_updated_date`)
    }
    get ref_mesh_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.mesh_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_spec(): Reference<_aws_appmesh_virtual_node__spec[]> {
        return new Reference(`${this._name}.${this._id}.spec`)
    }
}

export interface _aws_appmesh_virtual_router__spec {
    service_names: rstring[]
}

export interface aws_appmesh_virtual_router_config {
    arn?: rstring
    created_date?: rstring
    last_updated_date?: rstring
    mesh_name: rstring
    name: rstring
    spec: _aws_appmesh_virtual_router__spec[]
}

export class aws_appmesh_virtual_router implements Resource {
    config: aws_appmesh_virtual_router_config
    private _is_data: boolean = false
    private _name: string = "aws_appmesh_virtual_router"
    private _id: string;
    constructor(id: string, config: aws_appmesh_virtual_router_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_last_updated_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_updated_date`)
    }
    get ref_mesh_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.mesh_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_spec(): Reference<_aws_appmesh_virtual_router__spec[]> {
        return new Reference(`${this._name}.${this._id}.spec`)
    }
}

export interface aws_appsync_api_key_config {
    api_id: rstring
    description?: rstring
    expires?: rstring
    key?: rstring
}

export class aws_appsync_api_key implements Resource {
    config: aws_appsync_api_key_config
    private _is_data: boolean = false
    private _name: string = "aws_appsync_api_key"
    private _id: string;
    constructor(id: string, config: aws_appsync_api_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.api_id`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_expires(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.expires`)
    }
    get ref_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key`)
    }
}

export interface _aws_appsync_datasource__dynamodb_config {
    region?: rstring
    table_name: rstring
    use_caller_credentials?: rboolean
}

export interface _aws_appsync_datasource__elasticsearch_config {
    endpoint: rstring
    region?: rstring
}

export interface _aws_appsync_datasource__http_config {
    endpoint: rstring
}

export interface _aws_appsync_datasource__lambda_config {
    function_arn: rstring
}

export interface aws_appsync_datasource_config {
    api_id: rstring
    arn?: rstring
    description?: rstring
    dynamodb_config?: _aws_appsync_datasource__dynamodb_config[]
    elasticsearch_config?: _aws_appsync_datasource__elasticsearch_config[]
    http_config?: _aws_appsync_datasource__http_config[]
    lambda_config?: _aws_appsync_datasource__lambda_config[]
    name: rstring
    service_role_arn?: rstring
    type: rstring
}

export class aws_appsync_datasource implements Resource {
    config: aws_appsync_datasource_config
    private _is_data: boolean = false
    private _name: string = "aws_appsync_datasource"
    private _id: string;
    constructor(id: string, config: aws_appsync_datasource_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_api_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.api_id`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_dynamodb_config(): Reference<_aws_appsync_datasource__dynamodb_config[]> {
        return new Reference(`${this._name}.${this._id}.dynamodb_config`)
    }
    get ref_elasticsearch_config(): Reference<_aws_appsync_datasource__elasticsearch_config[]> {
        return new Reference(`${this._name}.${this._id}.elasticsearch_config`)
    }
    get ref_http_config(): Reference<_aws_appsync_datasource__http_config[]> {
        return new Reference(`${this._name}.${this._id}.http_config`)
    }
    get ref_lambda_config(): Reference<_aws_appsync_datasource__lambda_config[]> {
        return new Reference(`${this._name}.${this._id}.lambda_config`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_service_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_role_arn`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface _aws_appsync_graphql_api__log_config {
    cloudwatch_logs_role_arn: rstring
    field_log_level: rstring
}

export interface _aws_appsync_graphql_api__openid_connect_config {
    auth_ttl?: rnumber
    client_id?: rstring
    iat_ttl?: rnumber
    issuer: rstring
}

export interface _aws_appsync_graphql_api__user_pool_config {
    app_id_client_regex?: rstring
    aws_region?: rstring
    default_action: rstring
    user_pool_id: rstring
}

export interface aws_appsync_graphql_api_config {
    arn?: rstring
    authentication_type: rstring
    log_config?: _aws_appsync_graphql_api__log_config[]
    name: rstring
    openid_connect_config?: _aws_appsync_graphql_api__openid_connect_config[]
    uris?: {[propName: string]: rstring}
    user_pool_config?: _aws_appsync_graphql_api__user_pool_config[]
}

export class aws_appsync_graphql_api implements Resource {
    config: aws_appsync_graphql_api_config
    private _is_data: boolean = false
    private _name: string = "aws_appsync_graphql_api"
    private _id: string;
    constructor(id: string, config: aws_appsync_graphql_api_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_authentication_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.authentication_type`)
    }
    get ref_log_config(): Reference<_aws_appsync_graphql_api__log_config[]> {
        return new Reference(`${this._name}.${this._id}.log_config`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_openid_connect_config(): Reference<_aws_appsync_graphql_api__openid_connect_config[]> {
        return new Reference(`${this._name}.${this._id}.openid_connect_config`)
    }
    get ref_uris(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.uris`)
    }
    get ref_user_pool_config(): Reference<_aws_appsync_graphql_api__user_pool_config[]> {
        return new Reference(`${this._name}.${this._id}.user_pool_config`)
    }
}

export interface _aws_athena_database__encryption_configuration {
    encryption_option: rstring
    kms_key?: rstring
}

export interface aws_athena_database_config {
    bucket: rstring
    encryption_configuration?: _aws_athena_database__encryption_configuration[]
    force_destroy?: rboolean
    name: rstring
}

export class aws_athena_database implements Resource {
    config: aws_athena_database_config
    private _is_data: boolean = false
    private _name: string = "aws_athena_database"
    private _id: string;
    constructor(id: string, config: aws_athena_database_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_encryption_configuration(): Reference<_aws_athena_database__encryption_configuration[]> {
        return new Reference(`${this._name}.${this._id}.encryption_configuration`)
    }
    get ref_force_destroy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_destroy`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_athena_named_query_config {
    database: rstring
    description?: rstring
    name: rstring
    query: rstring
}

export class aws_athena_named_query implements Resource {
    config: aws_athena_named_query_config
    private _is_data: boolean = false
    private _name: string = "aws_athena_named_query"
    private _id: string;
    constructor(id: string, config: aws_athena_named_query_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_database(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.database`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_query(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.query`)
    }
}

export interface aws_autoscaling_attachment_config {
    alb_target_group_arn?: rstring
    autoscaling_group_name: rstring
    elb?: rstring
}

export class aws_autoscaling_attachment implements Resource {
    config: aws_autoscaling_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_autoscaling_attachment"
    private _id: string;
    constructor(id: string, config: aws_autoscaling_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_alb_target_group_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.alb_target_group_arn`)
    }
    get ref_autoscaling_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.autoscaling_group_name`)
    }
    get ref_elb(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elb`)
    }
}

export interface _aws_autoscaling_group__initial_lifecycle_hook {
    default_result?: rstring
    heartbeat_timeout?: rnumber
    lifecycle_transition: rstring
    name: rstring
    notification_metadata?: rstring
    notification_target_arn?: rstring
    role_arn?: rstring
}

export interface _aws_autoscaling_group__launch_template {
    id?: rstring
    name?: rstring
    version?: rstring
}

export interface __aws_autoscaling_group__mixed_instances_policy__instances_distribution {
    on_demand_allocation_strategy?: rstring
    on_demand_base_capacity?: rnumber
    on_demand_percentage_above_base_capacity?: rnumber
    spot_allocation_strategy?: rstring
    spot_instance_pools?: rnumber
    spot_max_price?: rstring
}

export interface __aws_autoscaling_group__mixed_instances_policy__launch_template__launch_template_specification {
    launch_template_id?: rstring
    launch_template_name?: rstring
    version?: rstring
}

export interface __aws_autoscaling_group__mixed_instances_policy__launch_template__override {
    instance_type?: rstring
}

export interface __aws_autoscaling_group__mixed_instances_policy__launch_template {
    launch_template_specification: __aws_autoscaling_group__mixed_instances_policy__launch_template__launch_template_specification[]
    override?: __aws_autoscaling_group__mixed_instances_policy__launch_template__override[]
}

export interface _aws_autoscaling_group__mixed_instances_policy {
    instances_distribution?: __aws_autoscaling_group__mixed_instances_policy__instances_distribution[]
    launch_template: __aws_autoscaling_group__mixed_instances_policy__launch_template[]
}

export interface _aws_autoscaling_group__tag {
    key: rstring
    propagate_at_launch: rboolean
    value: rstring
}

export interface aws_autoscaling_group_config {
    arn?: rstring
    availability_zones?: rstring[]
    default_cooldown?: rnumber
    desired_capacity?: rnumber
    enabled_metrics?: rstring[]
    force_delete?: rboolean
    health_check_grace_period?: rnumber
    health_check_type?: rstring
    initial_lifecycle_hook?: _aws_autoscaling_group__initial_lifecycle_hook[]
    launch_configuration?: rstring
    launch_template?: _aws_autoscaling_group__launch_template[]
    load_balancers?: rstring[]
    max_size: rnumber
    metrics_granularity?: rstring
    min_elb_capacity?: rnumber
    min_size: rnumber
    mixed_instances_policy?: _aws_autoscaling_group__mixed_instances_policy[]
    name?: rstring
    name_prefix?: rstring
    placement_group?: rstring
    protect_from_scale_in?: rboolean
    service_linked_role_arn?: rstring
    suspended_processes?: rstring[]
    tag?: _aws_autoscaling_group__tag[]
    tags?: {[propName: string]: rstring}[]
    target_group_arns?: rstring[]
    termination_policies?: rstring[]
    vpc_zone_identifier?: rstring[]
    wait_for_capacity_timeout?: rstring
    wait_for_elb_capacity?: rnumber
}

export class aws_autoscaling_group implements Resource {
    config: aws_autoscaling_group_config
    private _is_data: boolean = false
    private _name: string = "aws_autoscaling_group"
    private _id: string;
    constructor(id: string, config: aws_autoscaling_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_default_cooldown(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.default_cooldown`)
    }
    get ref_desired_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.desired_capacity`)
    }
    get ref_enabled_metrics(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.enabled_metrics`)
    }
    get ref_force_delete(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_delete`)
    }
    get ref_health_check_grace_period(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.health_check_grace_period`)
    }
    get ref_health_check_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.health_check_type`)
    }
    get ref_initial_lifecycle_hook(): Reference<_aws_autoscaling_group__initial_lifecycle_hook[]> {
        return new Reference(`${this._name}.${this._id}.initial_lifecycle_hook`)
    }
    get ref_launch_configuration(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.launch_configuration`)
    }
    get ref_launch_template(): Reference<_aws_autoscaling_group__launch_template[]> {
        return new Reference(`${this._name}.${this._id}.launch_template`)
    }
    get ref_load_balancers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.load_balancers`)
    }
    get ref_max_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.max_size`)
    }
    get ref_metrics_granularity(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metrics_granularity`)
    }
    get ref_min_elb_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.min_elb_capacity`)
    }
    get ref_min_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.min_size`)
    }
    get ref_mixed_instances_policy(): Reference<_aws_autoscaling_group__mixed_instances_policy[]> {
        return new Reference(`${this._name}.${this._id}.mixed_instances_policy`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_placement_group(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.placement_group`)
    }
    get ref_protect_from_scale_in(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.protect_from_scale_in`)
    }
    get ref_service_linked_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_linked_role_arn`)
    }
    get ref_suspended_processes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.suspended_processes`)
    }
    get ref_tag(): Reference<_aws_autoscaling_group__tag[]> {
        return new Reference(`${this._name}.${this._id}.tag`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}[]> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_target_group_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.target_group_arns`)
    }
    get ref_termination_policies(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.termination_policies`)
    }
    get ref_vpc_zone_identifier(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_zone_identifier`)
    }
    get ref_wait_for_capacity_timeout(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.wait_for_capacity_timeout`)
    }
    get ref_wait_for_elb_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.wait_for_elb_capacity`)
    }
}

export interface aws_autoscaling_lifecycle_hook_config {
    autoscaling_group_name: rstring
    default_result?: rstring
    heartbeat_timeout?: rnumber
    lifecycle_transition: rstring
    name: rstring
    notification_metadata?: rstring
    notification_target_arn?: rstring
    role_arn?: rstring
}

export class aws_autoscaling_lifecycle_hook implements Resource {
    config: aws_autoscaling_lifecycle_hook_config
    private _is_data: boolean = false
    private _name: string = "aws_autoscaling_lifecycle_hook"
    private _id: string;
    constructor(id: string, config: aws_autoscaling_lifecycle_hook_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_autoscaling_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.autoscaling_group_name`)
    }
    get ref_default_result(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_result`)
    }
    get ref_heartbeat_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.heartbeat_timeout`)
    }
    get ref_lifecycle_transition(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.lifecycle_transition`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_notification_metadata(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.notification_metadata`)
    }
    get ref_notification_target_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.notification_target_arn`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
}

export interface aws_autoscaling_notification_config {
    group_names: rstring[]
    notifications: rstring[]
    topic_arn: rstring
}

export class aws_autoscaling_notification implements Resource {
    config: aws_autoscaling_notification_config
    private _is_data: boolean = false
    private _name: string = "aws_autoscaling_notification"
    private _id: string;
    constructor(id: string, config: aws_autoscaling_notification_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_group_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.group_names`)
    }
    get ref_notifications(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.notifications`)
    }
    get ref_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.topic_arn`)
    }
}

export interface _aws_autoscaling_policy__step_adjustment {
    metric_interval_lower_bound?: rstring
    metric_interval_upper_bound?: rstring
    scaling_adjustment: rnumber
}

export interface __aws_autoscaling_policy__target_tracking_configuration__customized_metric_specification__metric_dimension {
    name: rstring
    value: rstring
}

export interface __aws_autoscaling_policy__target_tracking_configuration__customized_metric_specification {
    metric_dimension?: __aws_autoscaling_policy__target_tracking_configuration__customized_metric_specification__metric_dimension[]
    metric_name: rstring
    namespace: rstring
    statistic: rstring
    unit?: rstring
}

export interface __aws_autoscaling_policy__target_tracking_configuration__predefined_metric_specification {
    predefined_metric_type: rstring
    resource_label?: rstring
}

export interface _aws_autoscaling_policy__target_tracking_configuration {
    customized_metric_specification?: __aws_autoscaling_policy__target_tracking_configuration__customized_metric_specification[]
    disable_scale_in?: rboolean
    predefined_metric_specification?: __aws_autoscaling_policy__target_tracking_configuration__predefined_metric_specification[]
    target_value: rnumber
}

export interface aws_autoscaling_policy_config {
    adjustment_type?: rstring
    arn?: rstring
    autoscaling_group_name: rstring
    cooldown?: rnumber
    estimated_instance_warmup?: rnumber
    metric_aggregation_type?: rstring
    min_adjustment_magnitude?: rnumber
    min_adjustment_step?: rnumber
    name: rstring
    policy_type?: rstring
    scaling_adjustment?: rnumber
    step_adjustment?: _aws_autoscaling_policy__step_adjustment[]
    target_tracking_configuration?: _aws_autoscaling_policy__target_tracking_configuration[]
}

export class aws_autoscaling_policy implements Resource {
    config: aws_autoscaling_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_autoscaling_policy"
    private _id: string;
    constructor(id: string, config: aws_autoscaling_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_adjustment_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.adjustment_type`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_autoscaling_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.autoscaling_group_name`)
    }
    get ref_cooldown(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.cooldown`)
    }
    get ref_estimated_instance_warmup(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.estimated_instance_warmup`)
    }
    get ref_metric_aggregation_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_aggregation_type`)
    }
    get ref_min_adjustment_magnitude(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.min_adjustment_magnitude`)
    }
    get ref_min_adjustment_step(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.min_adjustment_step`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_policy_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_type`)
    }
    get ref_scaling_adjustment(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.scaling_adjustment`)
    }
    get ref_step_adjustment(): Reference<_aws_autoscaling_policy__step_adjustment[]> {
        return new Reference(`${this._name}.${this._id}.step_adjustment`)
    }
    get ref_target_tracking_configuration(): Reference<_aws_autoscaling_policy__target_tracking_configuration[]> {
        return new Reference(`${this._name}.${this._id}.target_tracking_configuration`)
    }
}

export interface aws_autoscaling_schedule_config {
    arn?: rstring
    autoscaling_group_name: rstring
    desired_capacity?: rnumber
    end_time?: rstring
    max_size?: rnumber
    min_size?: rnumber
    recurrence?: rstring
    scheduled_action_name: rstring
    start_time?: rstring
}

export class aws_autoscaling_schedule implements Resource {
    config: aws_autoscaling_schedule_config
    private _is_data: boolean = false
    private _name: string = "aws_autoscaling_schedule"
    private _id: string;
    constructor(id: string, config: aws_autoscaling_schedule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_autoscaling_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.autoscaling_group_name`)
    }
    get ref_desired_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.desired_capacity`)
    }
    get ref_end_time(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.end_time`)
    }
    get ref_max_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.max_size`)
    }
    get ref_min_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.min_size`)
    }
    get ref_recurrence(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.recurrence`)
    }
    get ref_scheduled_action_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.scheduled_action_name`)
    }
    get ref_start_time(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.start_time`)
    }
}

export interface aws_backup_vault_config {
    arn?: rstring
    kms_key_arn?: rstring
    name: rstring
    recovery_points?: rnumber
    tags?: {[propName: string]: rstring}
}

export class aws_backup_vault implements Resource {
    config: aws_backup_vault_config
    private _is_data: boolean = false
    private _name: string = "aws_backup_vault"
    private _id: string;
    constructor(id: string, config: aws_backup_vault_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_kms_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_recovery_points(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.recovery_points`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_batch_compute_environment__compute_resources {
    bid_percentage?: rnumber
    desired_vcpus?: rnumber
    ec2_key_pair?: rstring
    image_id?: rstring
    instance_role: rstring
    instance_type: rstring[]
    max_vcpus: rnumber
    min_vcpus: rnumber
    security_group_ids: rstring[]
    spot_iam_fleet_role?: rstring
    subnets: rstring[]
    tags?: {[propName: string]: rstring}
    type: rstring
}

export interface aws_batch_compute_environment_config {
    arn?: rstring
    compute_environment_name: rstring
    compute_resources?: _aws_batch_compute_environment__compute_resources[]
    ecc_cluster_arn?: rstring
    ecs_cluster_arn?: rstring
    service_role: rstring
    state?: rstring
    status?: rstring
    status_reason?: rstring
    type: rstring
}

export class aws_batch_compute_environment implements Resource {
    config: aws_batch_compute_environment_config
    private _is_data: boolean = false
    private _name: string = "aws_batch_compute_environment"
    private _id: string;
    constructor(id: string, config: aws_batch_compute_environment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_compute_environment_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.compute_environment_name`)
    }
    get ref_compute_resources(): Reference<_aws_batch_compute_environment__compute_resources[]> {
        return new Reference(`${this._name}.${this._id}.compute_resources`)
    }
    get ref_ecc_cluster_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ecc_cluster_arn`)
    }
    get ref_ecs_cluster_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ecs_cluster_arn`)
    }
    get ref_service_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_role`)
    }
    get ref_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_status_reason(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status_reason`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface _aws_batch_job_definition__retry_strategy {
    attempts?: rnumber
}

export interface _aws_batch_job_definition__timeout {
    attempt_duration_seconds?: rnumber
}

export interface aws_batch_job_definition_config {
    arn?: rstring
    container_properties?: rstring
    name: rstring
    parameters?: {[propName: string]: rstring}
    retry_strategy?: _aws_batch_job_definition__retry_strategy[]
    revision?: rnumber
    timeout?: _aws_batch_job_definition__timeout[]
    type: rstring
}

export class aws_batch_job_definition implements Resource {
    config: aws_batch_job_definition_config
    private _is_data: boolean = false
    private _name: string = "aws_batch_job_definition"
    private _id: string;
    constructor(id: string, config: aws_batch_job_definition_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_container_properties(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.container_properties`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.parameters`)
    }
    get ref_retry_strategy(): Reference<_aws_batch_job_definition__retry_strategy[]> {
        return new Reference(`${this._name}.${this._id}.retry_strategy`)
    }
    get ref_revision(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.revision`)
    }
    get ref_timeout(): Reference<_aws_batch_job_definition__timeout[]> {
        return new Reference(`${this._name}.${this._id}.timeout`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_batch_job_queue_config {
    arn?: rstring
    compute_environments: rstring[]
    name: rstring
    priority: rnumber
    state: rstring
}

export class aws_batch_job_queue implements Resource {
    config: aws_batch_job_queue_config
    private _is_data: boolean = false
    private _name: string = "aws_batch_job_queue"
    private _id: string;
    constructor(id: string, config: aws_batch_job_queue_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_compute_environments(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.compute_environments`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_priority(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.priority`)
    }
    get ref_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state`)
    }
}

export interface _aws_budgets_budget__cost_types {
    include_credit?: rboolean
    include_discount?: rboolean
    include_other_subscription?: rboolean
    include_recurring?: rboolean
    include_refund?: rboolean
    include_subscription?: rboolean
    include_support?: rboolean
    include_tax?: rboolean
    include_upfront?: rboolean
    use_amortized?: rboolean
    use_blended?: rboolean
}

export interface aws_budgets_budget_config {
    account_id?: rstring
    budget_type: rstring
    cost_filters?: {[propName: string]: rstring}
    cost_types?: _aws_budgets_budget__cost_types[]
    limit_amount: rstring
    limit_unit: rstring
    name?: rstring
    name_prefix?: rstring
    time_period_end?: rstring
    time_period_start: rstring
    time_unit: rstring
}

export class aws_budgets_budget implements Resource {
    config: aws_budgets_budget_config
    private _is_data: boolean = false
    private _name: string = "aws_budgets_budget"
    private _id: string;
    constructor(id: string, config: aws_budgets_budget_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.account_id`)
    }
    get ref_budget_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.budget_type`)
    }
    get ref_cost_filters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.cost_filters`)
    }
    get ref_cost_types(): Reference<_aws_budgets_budget__cost_types[]> {
        return new Reference(`${this._name}.${this._id}.cost_types`)
    }
    get ref_limit_amount(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.limit_amount`)
    }
    get ref_limit_unit(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.limit_unit`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_time_period_end(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.time_period_end`)
    }
    get ref_time_period_start(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.time_period_start`)
    }
    get ref_time_unit(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.time_unit`)
    }
}

export interface aws_cloud9_environment_ec2_config {
    arn?: rstring
    automatic_stop_time_minutes?: rnumber
    description?: rstring
    instance_type: rstring
    name: rstring
    owner_arn?: rstring
    subnet_id?: rstring
    type?: rstring
}

export class aws_cloud9_environment_ec2 implements Resource {
    config: aws_cloud9_environment_ec2_config
    private _is_data: boolean = false
    private _name: string = "aws_cloud9_environment_ec2"
    private _id: string;
    constructor(id: string, config: aws_cloud9_environment_ec2_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_automatic_stop_time_minutes(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.automatic_stop_time_minutes`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_type`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_owner_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_arn`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_cloudformation_stack_config {
    capabilities?: rstring[]
    disable_rollback?: rboolean
    iam_role_arn?: rstring
    name: rstring
    notification_arns?: rstring[]
    on_failure?: rstring
    outputs?: {[propName: string]: rstring}
    parameters?: {[propName: string]: rstring}
    policy_body?: rstring
    policy_url?: rstring
    tags?: {[propName: string]: rstring}
    template_body?: rstring
    template_url?: rstring
    timeout_in_minutes?: rnumber
}

export class aws_cloudformation_stack implements Resource {
    config: aws_cloudformation_stack_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudformation_stack"
    private _id: string;
    constructor(id: string, config: aws_cloudformation_stack_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_capabilities(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.capabilities`)
    }
    get ref_disable_rollback(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.disable_rollback`)
    }
    get ref_iam_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_role_arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_notification_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.notification_arns`)
    }
    get ref_on_failure(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.on_failure`)
    }
    get ref_outputs(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.outputs`)
    }
    get ref_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.parameters`)
    }
    get ref_policy_body(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_body`)
    }
    get ref_policy_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_url`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_template_body(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.template_body`)
    }
    get ref_template_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.template_url`)
    }
    get ref_timeout_in_minutes(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.timeout_in_minutes`)
    }
}

export interface __aws_cloudfront_distribution__cache_behavior__forwarded_values__cookies {
    forward: rstring
    whitelisted_names?: rstring[]
}

export interface __aws_cloudfront_distribution__cache_behavior__forwarded_values {
    cookies: __aws_cloudfront_distribution__cache_behavior__forwarded_values__cookies[]
    headers?: rstring[]
    query_string: rboolean
    query_string_cache_keys?: rstring[]
}

export interface __aws_cloudfront_distribution__cache_behavior__lambda_function_association {
    event_type: rstring
    include_body?: rboolean
    lambda_arn: rstring
}

export interface _aws_cloudfront_distribution__cache_behavior {
    allowed_methods: rstring[]
    cached_methods: rstring[]
    compress?: rboolean
    default_ttl?: rnumber
    field_level_encryption_id?: rstring
    forwarded_values: __aws_cloudfront_distribution__cache_behavior__forwarded_values[]
    lambda_function_association?: __aws_cloudfront_distribution__cache_behavior__lambda_function_association[]
    max_ttl?: rnumber
    min_ttl?: rnumber
    path_pattern: rstring
    smooth_streaming?: rboolean
    target_origin_id: rstring
    trusted_signers?: rstring[]
    viewer_protocol_policy: rstring
}

export interface _aws_cloudfront_distribution__custom_error_response {
    error_caching_min_ttl?: rnumber
    error_code: rnumber
    response_code?: rnumber
    response_page_path?: rstring
}

export interface __aws_cloudfront_distribution__default_cache_behavior__forwarded_values__cookies {
    forward: rstring
    whitelisted_names?: rstring[]
}

export interface __aws_cloudfront_distribution__default_cache_behavior__forwarded_values {
    cookies: __aws_cloudfront_distribution__default_cache_behavior__forwarded_values__cookies[]
    headers?: rstring[]
    query_string: rboolean
    query_string_cache_keys?: rstring[]
}

export interface __aws_cloudfront_distribution__default_cache_behavior__lambda_function_association {
    event_type: rstring
    include_body?: rboolean
    lambda_arn: rstring
}

export interface _aws_cloudfront_distribution__default_cache_behavior {
    allowed_methods: rstring[]
    cached_methods: rstring[]
    compress?: rboolean
    default_ttl?: rnumber
    field_level_encryption_id?: rstring
    forwarded_values: __aws_cloudfront_distribution__default_cache_behavior__forwarded_values[]
    lambda_function_association?: __aws_cloudfront_distribution__default_cache_behavior__lambda_function_association[]
    max_ttl?: rnumber
    min_ttl?: rnumber
    smooth_streaming?: rboolean
    target_origin_id: rstring
    trusted_signers?: rstring[]
    viewer_protocol_policy: rstring
}

export interface _aws_cloudfront_distribution__logging_config {
    bucket: rstring
    include_cookies?: rboolean
    prefix?: rstring
}

export interface __aws_cloudfront_distribution__ordered_cache_behavior__forwarded_values__cookies {
    forward: rstring
    whitelisted_names?: rstring[]
}

export interface __aws_cloudfront_distribution__ordered_cache_behavior__forwarded_values {
    cookies: __aws_cloudfront_distribution__ordered_cache_behavior__forwarded_values__cookies[]
    headers?: rstring[]
    query_string: rboolean
    query_string_cache_keys?: rstring[]
}

export interface __aws_cloudfront_distribution__ordered_cache_behavior__lambda_function_association {
    event_type: rstring
    include_body?: rboolean
    lambda_arn: rstring
}

export interface _aws_cloudfront_distribution__ordered_cache_behavior {
    allowed_methods: rstring[]
    cached_methods: rstring[]
    compress?: rboolean
    default_ttl?: rnumber
    field_level_encryption_id?: rstring
    forwarded_values: __aws_cloudfront_distribution__ordered_cache_behavior__forwarded_values[]
    lambda_function_association?: __aws_cloudfront_distribution__ordered_cache_behavior__lambda_function_association[]
    max_ttl?: rnumber
    min_ttl?: rnumber
    path_pattern: rstring
    smooth_streaming?: rboolean
    target_origin_id: rstring
    trusted_signers?: rstring[]
    viewer_protocol_policy: rstring
}

export interface __aws_cloudfront_distribution__origin__custom_header {
    name: rstring
    value: rstring
}

export interface __aws_cloudfront_distribution__origin__custom_origin_config {
    http_port: rnumber
    https_port: rnumber
    origin_keepalive_timeout?: rnumber
    origin_protocol_policy: rstring
    origin_read_timeout?: rnumber
    origin_ssl_protocols: rstring[]
}

export interface __aws_cloudfront_distribution__origin__s3_origin_config {
    origin_access_identity: rstring
}

export interface _aws_cloudfront_distribution__origin {
    custom_header?: __aws_cloudfront_distribution__origin__custom_header[]
    custom_origin_config?: __aws_cloudfront_distribution__origin__custom_origin_config[]
    domain_name: rstring
    origin_id: rstring
    origin_path?: rstring
    s3_origin_config?: __aws_cloudfront_distribution__origin__s3_origin_config[]
}

export interface __aws_cloudfront_distribution__restrictions__geo_restriction {
    locations?: rstring[]
    restriction_type: rstring
}

export interface _aws_cloudfront_distribution__restrictions {
    geo_restriction: __aws_cloudfront_distribution__restrictions__geo_restriction[]
}

export interface _aws_cloudfront_distribution__viewer_certificate {
    acm_certificate_arn?: rstring
    cloudfront_default_certificate?: rboolean
    iam_certificate_id?: rstring
    minimum_protocol_version?: rstring
    ssl_support_method?: rstring
}

export interface aws_cloudfront_distribution_config {
    active_trusted_signers?: {[propName: string]: rstring}
    aliases?: rstring[]
    arn?: rstring
    cache_behavior?: _aws_cloudfront_distribution__cache_behavior[]
    caller_reference?: rstring
    comment?: rstring
    custom_error_response?: _aws_cloudfront_distribution__custom_error_response[]
    default_cache_behavior: _aws_cloudfront_distribution__default_cache_behavior[]
    default_root_object?: rstring
    domain_name?: rstring
    enabled: rboolean
    etag?: rstring
    hosted_zone_id?: rstring
    http_version?: rstring
    in_progress_validation_batches?: rnumber
    is_ipv6_enabled?: rboolean
    last_modified_time?: rstring
    logging_config?: _aws_cloudfront_distribution__logging_config[]
    ordered_cache_behavior?: _aws_cloudfront_distribution__ordered_cache_behavior[]
    origin: _aws_cloudfront_distribution__origin[]
    price_class?: rstring
    restrictions: _aws_cloudfront_distribution__restrictions[]
    retain_on_delete?: rboolean
    status?: rstring
    tags?: {[propName: string]: rstring}
    viewer_certificate: _aws_cloudfront_distribution__viewer_certificate[]
    web_acl_id?: rstring
}

export class aws_cloudfront_distribution implements Resource {
    config: aws_cloudfront_distribution_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudfront_distribution"
    private _id: string;
    constructor(id: string, config: aws_cloudfront_distribution_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_active_trusted_signers(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.active_trusted_signers`)
    }
    get ref_aliases(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.aliases`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_cache_behavior(): Reference<_aws_cloudfront_distribution__cache_behavior[]> {
        return new Reference(`${this._name}.${this._id}.cache_behavior`)
    }
    get ref_caller_reference(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.caller_reference`)
    }
    get ref_comment(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.comment`)
    }
    get ref_custom_error_response(): Reference<_aws_cloudfront_distribution__custom_error_response[]> {
        return new Reference(`${this._name}.${this._id}.custom_error_response`)
    }
    get ref_default_cache_behavior(): Reference<_aws_cloudfront_distribution__default_cache_behavior[]> {
        return new Reference(`${this._name}.${this._id}.default_cache_behavior`)
    }
    get ref_default_root_object(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_root_object`)
    }
    get ref_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_etag(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.etag`)
    }
    get ref_hosted_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hosted_zone_id`)
    }
    get ref_http_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.http_version`)
    }
    get ref_in_progress_validation_batches(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.in_progress_validation_batches`)
    }
    get ref_is_ipv6_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.is_ipv6_enabled`)
    }
    get ref_last_modified_time(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_modified_time`)
    }
    get ref_logging_config(): Reference<_aws_cloudfront_distribution__logging_config[]> {
        return new Reference(`${this._name}.${this._id}.logging_config`)
    }
    get ref_ordered_cache_behavior(): Reference<_aws_cloudfront_distribution__ordered_cache_behavior[]> {
        return new Reference(`${this._name}.${this._id}.ordered_cache_behavior`)
    }
    get ref_origin(): Reference<_aws_cloudfront_distribution__origin[]> {
        return new Reference(`${this._name}.${this._id}.origin`)
    }
    get ref_price_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.price_class`)
    }
    get ref_restrictions(): Reference<_aws_cloudfront_distribution__restrictions[]> {
        return new Reference(`${this._name}.${this._id}.restrictions`)
    }
    get ref_retain_on_delete(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.retain_on_delete`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_viewer_certificate(): Reference<_aws_cloudfront_distribution__viewer_certificate[]> {
        return new Reference(`${this._name}.${this._id}.viewer_certificate`)
    }
    get ref_web_acl_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.web_acl_id`)
    }
}

export interface aws_cloudfront_origin_access_identity_config {
    caller_reference?: rstring
    cloudfront_access_identity_path?: rstring
    comment?: rstring
    etag?: rstring
    iam_arn?: rstring
    s3_canonical_user_id?: rstring
}

export class aws_cloudfront_origin_access_identity implements Resource {
    config: aws_cloudfront_origin_access_identity_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudfront_origin_access_identity"
    private _id: string;
    constructor(id: string, config: aws_cloudfront_origin_access_identity_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_caller_reference(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.caller_reference`)
    }
    get ref_cloudfront_access_identity_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloudfront_access_identity_path`)
    }
    get ref_comment(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.comment`)
    }
    get ref_etag(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.etag`)
    }
    get ref_iam_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_arn`)
    }
    get ref_s3_canonical_user_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_canonical_user_id`)
    }
}

export interface aws_cloudfront_public_key_config {
    caller_reference?: rstring
    comment?: rstring
    encoded_key: rstring
    etag?: rstring
    name?: rstring
    name_prefix?: rstring
}

export class aws_cloudfront_public_key implements Resource {
    config: aws_cloudfront_public_key_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudfront_public_key"
    private _id: string;
    constructor(id: string, config: aws_cloudfront_public_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_caller_reference(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.caller_reference`)
    }
    get ref_comment(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.comment`)
    }
    get ref_encoded_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.encoded_key`)
    }
    get ref_etag(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.etag`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
}

export interface _aws_cloudhsm_v2_cluster__cluster_certificates {
    aws_hardware_certificate?: rstring
    cluster_certificate?: rstring
    cluster_csr?: rstring
    hsm_certificate?: rstring
    manufacturer_hardware_certificate?: rstring
}

export interface aws_cloudhsm_v2_cluster_config {
    cluster_certificates?: _aws_cloudhsm_v2_cluster__cluster_certificates[]
    cluster_id?: rstring
    cluster_state?: rstring
    hsm_type: rstring
    security_group_id?: rstring
    source_backup_identifier?: rstring
    subnet_ids: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_cloudhsm_v2_cluster implements Resource {
    config: aws_cloudhsm_v2_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudhsm_v2_cluster"
    private _id: string;
    constructor(id: string, config: aws_cloudhsm_v2_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cluster_certificates(): Reference<_aws_cloudhsm_v2_cluster__cluster_certificates[]> {
        return new Reference(`${this._name}.${this._id}.cluster_certificates`)
    }
    get ref_cluster_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_id`)
    }
    get ref_cluster_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_state`)
    }
    get ref_hsm_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hsm_type`)
    }
    get ref_security_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.security_group_id`)
    }
    get ref_source_backup_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_backup_identifier`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_cloudhsm_v2_hsm_config {
    availability_zone?: rstring
    cluster_id: rstring
    hsm_eni_id?: rstring
    hsm_id?: rstring
    hsm_state?: rstring
    ip_address?: rstring
    subnet_id?: rstring
}

export class aws_cloudhsm_v2_hsm implements Resource {
    config: aws_cloudhsm_v2_hsm_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudhsm_v2_hsm"
    private _id: string;
    constructor(id: string, config: aws_cloudhsm_v2_hsm_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_cluster_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_id`)
    }
    get ref_hsm_eni_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hsm_eni_id`)
    }
    get ref_hsm_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hsm_id`)
    }
    get ref_hsm_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hsm_state`)
    }
    get ref_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ip_address`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
}

export interface __aws_cloudtrail__event_selector__data_resource {
    type: rstring
    values: rstring[]
}

export interface _aws_cloudtrail__event_selector {
    data_resource?: __aws_cloudtrail__event_selector__data_resource[]
    include_management_events?: rboolean
    read_write_type?: rstring
}

export interface aws_cloudtrail_config {
    arn?: rstring
    cloud_watch_logs_group_arn?: rstring
    cloud_watch_logs_role_arn?: rstring
    enable_log_file_validation?: rboolean
    enable_logging?: rboolean
    event_selector?: _aws_cloudtrail__event_selector[]
    home_region?: rstring
    include_global_service_events?: rboolean
    is_multi_region_trail?: rboolean
    is_organization_trail?: rboolean
    kms_key_id?: rstring
    name: rstring
    s3_bucket_name: rstring
    s3_key_prefix?: rstring
    sns_topic_name?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_cloudtrail implements Resource {
    config: aws_cloudtrail_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudtrail"
    private _id: string;
    constructor(id: string, config: aws_cloudtrail_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_cloud_watch_logs_group_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloud_watch_logs_group_arn`)
    }
    get ref_cloud_watch_logs_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloud_watch_logs_role_arn`)
    }
    get ref_enable_log_file_validation(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_log_file_validation`)
    }
    get ref_enable_logging(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_logging`)
    }
    get ref_event_selector(): Reference<_aws_cloudtrail__event_selector[]> {
        return new Reference(`${this._name}.${this._id}.event_selector`)
    }
    get ref_home_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.home_region`)
    }
    get ref_include_global_service_events(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.include_global_service_events`)
    }
    get ref_is_multi_region_trail(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.is_multi_region_trail`)
    }
    get ref_is_organization_trail(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.is_organization_trail`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_s3_bucket_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_bucket_name`)
    }
    get ref_s3_key_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_key_prefix`)
    }
    get ref_sns_topic_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sns_topic_name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_cloudwatch_dashboard_config {
    dashboard_arn?: rstring
    dashboard_body: rstring
    dashboard_name: rstring
}

export class aws_cloudwatch_dashboard implements Resource {
    config: aws_cloudwatch_dashboard_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_dashboard"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_dashboard_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dashboard_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dashboard_arn`)
    }
    get ref_dashboard_body(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dashboard_body`)
    }
    get ref_dashboard_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dashboard_name`)
    }
}

export interface _aws_cloudwatch_event_permission__condition {
    key: rstring
    type: rstring
    value: rstring
}

export interface aws_cloudwatch_event_permission_config {
    action?: rstring
    condition?: _aws_cloudwatch_event_permission__condition[]
    principal: rstring
    statement_id: rstring
}

export class aws_cloudwatch_event_permission implements Resource {
    config: aws_cloudwatch_event_permission_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_event_permission"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_event_permission_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_action(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.action`)
    }
    get ref_condition(): Reference<_aws_cloudwatch_event_permission__condition[]> {
        return new Reference(`${this._name}.${this._id}.condition`)
    }
    get ref_principal(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.principal`)
    }
    get ref_statement_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.statement_id`)
    }
}

export interface aws_cloudwatch_event_rule_config {
    arn?: rstring
    description?: rstring
    event_pattern?: rstring
    is_enabled?: rboolean
    name?: rstring
    name_prefix?: rstring
    role_arn?: rstring
    schedule_expression?: rstring
}

export class aws_cloudwatch_event_rule implements Resource {
    config: aws_cloudwatch_event_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_event_rule"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_event_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_event_pattern(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.event_pattern`)
    }
    get ref_is_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.is_enabled`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_schedule_expression(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.schedule_expression`)
    }
}

export interface _aws_cloudwatch_event_target__batch_target {
    array_size?: rnumber
    job_attempts?: rnumber
    job_definition: rstring
    job_name: rstring
}

export interface __aws_cloudwatch_event_target__ecs_target__network_configuration {
    assign_public_ip?: rboolean
    security_groups?: rstring[]
    subnets: rstring[]
}

export interface _aws_cloudwatch_event_target__ecs_target {
    group?: rstring
    launch_type?: rstring
    network_configuration?: __aws_cloudwatch_event_target__ecs_target__network_configuration[]
    platform_version?: rstring
    task_count?: rnumber
    task_definition_arn: rstring
}

export interface _aws_cloudwatch_event_target__input_transformer {
    input_paths?: {[propName: string]: rstring}
    input_template: rstring
}

export interface _aws_cloudwatch_event_target__kinesis_target {
    partition_key_path?: rstring
}

export interface _aws_cloudwatch_event_target__run_command_targets {
    key: rstring
    values: rstring[]
}

export interface _aws_cloudwatch_event_target__sqs_target {
    message_group_id?: rstring
}

export interface aws_cloudwatch_event_target_config {
    arn: rstring
    batch_target?: _aws_cloudwatch_event_target__batch_target[]
    ecs_target?: _aws_cloudwatch_event_target__ecs_target[]
    input?: rstring
    input_path?: rstring
    input_transformer?: _aws_cloudwatch_event_target__input_transformer[]
    kinesis_target?: _aws_cloudwatch_event_target__kinesis_target[]
    role_arn?: rstring
    rule: rstring
    run_command_targets?: _aws_cloudwatch_event_target__run_command_targets[]
    sqs_target?: _aws_cloudwatch_event_target__sqs_target[]
    target_id?: rstring
}

export class aws_cloudwatch_event_target implements Resource {
    config: aws_cloudwatch_event_target_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_event_target"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_event_target_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_batch_target(): Reference<_aws_cloudwatch_event_target__batch_target[]> {
        return new Reference(`${this._name}.${this._id}.batch_target`)
    }
    get ref_ecs_target(): Reference<_aws_cloudwatch_event_target__ecs_target[]> {
        return new Reference(`${this._name}.${this._id}.ecs_target`)
    }
    get ref_input(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.input`)
    }
    get ref_input_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.input_path`)
    }
    get ref_input_transformer(): Reference<_aws_cloudwatch_event_target__input_transformer[]> {
        return new Reference(`${this._name}.${this._id}.input_transformer`)
    }
    get ref_kinesis_target(): Reference<_aws_cloudwatch_event_target__kinesis_target[]> {
        return new Reference(`${this._name}.${this._id}.kinesis_target`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_rule(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rule`)
    }
    get ref_run_command_targets(): Reference<_aws_cloudwatch_event_target__run_command_targets[]> {
        return new Reference(`${this._name}.${this._id}.run_command_targets`)
    }
    get ref_sqs_target(): Reference<_aws_cloudwatch_event_target__sqs_target[]> {
        return new Reference(`${this._name}.${this._id}.sqs_target`)
    }
    get ref_target_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_id`)
    }
}

export interface aws_cloudwatch_log_destination_config {
    arn?: rstring
    name: rstring
    role_arn: rstring
    target_arn: rstring
}

export class aws_cloudwatch_log_destination implements Resource {
    config: aws_cloudwatch_log_destination_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_log_destination"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_log_destination_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_target_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_arn`)
    }
}

export interface aws_cloudwatch_log_destination_policy_config {
    access_policy: rstring
    destination_name: rstring
}

export class aws_cloudwatch_log_destination_policy implements Resource {
    config: aws_cloudwatch_log_destination_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_log_destination_policy"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_log_destination_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.access_policy`)
    }
    get ref_destination_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_name`)
    }
}

export interface aws_cloudwatch_log_group_config {
    arn?: rstring
    kms_key_id?: rstring
    name?: rstring
    name_prefix?: rstring
    retention_in_days?: rnumber
    tags?: {[propName: string]: rstring}
}

export class aws_cloudwatch_log_group implements Resource {
    config: aws_cloudwatch_log_group_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_log_group"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_log_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_retention_in_days(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.retention_in_days`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_cloudwatch_log_metric_filter__metric_transformation {
    default_value?: rstring
    name: rstring
    namespace: rstring
    value: rstring
}

export interface aws_cloudwatch_log_metric_filter_config {
    log_group_name: rstring
    metric_transformation: _aws_cloudwatch_log_metric_filter__metric_transformation[]
    name: rstring
    pattern: rstring
}

export class aws_cloudwatch_log_metric_filter implements Resource {
    config: aws_cloudwatch_log_metric_filter_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_log_metric_filter"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_log_metric_filter_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_log_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.log_group_name`)
    }
    get ref_metric_transformation(): Reference<_aws_cloudwatch_log_metric_filter__metric_transformation[]> {
        return new Reference(`${this._name}.${this._id}.metric_transformation`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_pattern(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.pattern`)
    }
}

export interface aws_cloudwatch_log_resource_policy_config {
    policy_document: rstring
    policy_name: rstring
}

export class aws_cloudwatch_log_resource_policy implements Resource {
    config: aws_cloudwatch_log_resource_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_log_resource_policy"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_log_resource_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_policy_document(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_document`)
    }
    get ref_policy_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_name`)
    }
}

export interface aws_cloudwatch_log_stream_config {
    arn?: rstring
    log_group_name: rstring
    name: rstring
}

export class aws_cloudwatch_log_stream implements Resource {
    config: aws_cloudwatch_log_stream_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_log_stream"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_log_stream_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_log_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.log_group_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_cloudwatch_log_subscription_filter_config {
    destination_arn: rstring
    distribution?: rstring
    filter_pattern: rstring
    log_group_name: rstring
    name: rstring
    role_arn?: rstring
}

export class aws_cloudwatch_log_subscription_filter implements Resource {
    config: aws_cloudwatch_log_subscription_filter_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_log_subscription_filter"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_log_subscription_filter_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_destination_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_arn`)
    }
    get ref_distribution(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.distribution`)
    }
    get ref_filter_pattern(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.filter_pattern`)
    }
    get ref_log_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.log_group_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
}

export interface __aws_cloudwatch_metric_alarm__metric_query__metric {
    dimensions?: {[propName: string]: rstring}
    metric_name: rstring
    namespace?: rstring
    period: rnumber
    stat: rstring
    unit?: rstring
}

export interface _aws_cloudwatch_metric_alarm__metric_query {
    expression?: rstring
    id: rstring
    label?: rstring
    metric?: __aws_cloudwatch_metric_alarm__metric_query__metric[]
    return_data?: rboolean
}

export interface aws_cloudwatch_metric_alarm_config {
    actions_enabled?: rboolean
    alarm_actions?: rstring[]
    alarm_description?: rstring
    alarm_name: rstring
    arn?: rstring
    comparison_operator: rstring
    datapoints_to_alarm?: rnumber
    dimensions?: {[propName: string]: rstring}
    evaluate_low_sample_count_percentiles?: rstring
    evaluation_periods: rnumber
    extended_statistic?: rstring
    insufficient_data_actions?: rstring[]
    metric_name?: rstring
    metric_query?: _aws_cloudwatch_metric_alarm__metric_query[]
    namespace?: rstring
    ok_actions?: rstring[]
    period?: rnumber
    statistic?: rstring
    threshold: rnumber
    treat_missing_data?: rstring
    unit?: rstring
}

export class aws_cloudwatch_metric_alarm implements Resource {
    config: aws_cloudwatch_metric_alarm_config
    private _is_data: boolean = false
    private _name: string = "aws_cloudwatch_metric_alarm"
    private _id: string;
    constructor(id: string, config: aws_cloudwatch_metric_alarm_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_actions_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.actions_enabled`)
    }
    get ref_alarm_actions(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.alarm_actions`)
    }
    get ref_alarm_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.alarm_description`)
    }
    get ref_alarm_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.alarm_name`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_comparison_operator(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.comparison_operator`)
    }
    get ref_datapoints_to_alarm(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.datapoints_to_alarm`)
    }
    get ref_dimensions(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.dimensions`)
    }
    get ref_evaluate_low_sample_count_percentiles(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.evaluate_low_sample_count_percentiles`)
    }
    get ref_evaluation_periods(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.evaluation_periods`)
    }
    get ref_extended_statistic(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.extended_statistic`)
    }
    get ref_insufficient_data_actions(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.insufficient_data_actions`)
    }
    get ref_metric_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_name`)
    }
    get ref_metric_query(): Reference<_aws_cloudwatch_metric_alarm__metric_query[]> {
        return new Reference(`${this._name}.${this._id}.metric_query`)
    }
    get ref_namespace(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.namespace`)
    }
    get ref_ok_actions(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.ok_actions`)
    }
    get ref_period(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.period`)
    }
    get ref_statistic(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.statistic`)
    }
    get ref_threshold(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.threshold`)
    }
    get ref_treat_missing_data(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.treat_missing_data`)
    }
    get ref_unit(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.unit`)
    }
}

export interface _aws_codebuild_project__artifacts {
    encryption_disabled?: rboolean
    location?: rstring
    name?: rstring
    namespace_type?: rstring
    packaging?: rstring
    path?: rstring
    type: rstring
}

export interface _aws_codebuild_project__cache {
    location?: rstring
    type?: rstring
}

export interface __aws_codebuild_project__environment__environment_variable {
    name: rstring
    type?: rstring
    value: rstring
}

export interface _aws_codebuild_project__environment {
    certificate?: rstring
    compute_type: rstring
    environment_variable?: __aws_codebuild_project__environment__environment_variable[]
    image: rstring
    privileged_mode?: rboolean
    type: rstring
}

export interface _aws_codebuild_project__secondary_artifacts {
    artifact_identifier: rstring
    encryption_disabled?: rboolean
    location?: rstring
    name?: rstring
    namespace_type?: rstring
    packaging?: rstring
    path?: rstring
    type: rstring
}

export interface __aws_codebuild_project__secondary_sources__auth {
    resource?: rstring
    type: rstring
}

export interface _aws_codebuild_project__secondary_sources {
    auth?: __aws_codebuild_project__secondary_sources__auth[]
    buildspec?: rstring
    git_clone_depth?: rnumber
    insecure_ssl?: rboolean
    location?: rstring
    report_build_status?: rboolean
    source_identifier: rstring
    type: rstring
}

export interface __aws_codebuild_project__source__auth {
    resource?: rstring
    type: rstring
}

export interface _aws_codebuild_project__source {
    auth?: __aws_codebuild_project__source__auth[]
    buildspec?: rstring
    git_clone_depth?: rnumber
    insecure_ssl?: rboolean
    location?: rstring
    report_build_status?: rboolean
    type: rstring
}

export interface _aws_codebuild_project__vpc_config {
    security_group_ids: rstring[]
    subnets: rstring[]
    vpc_id: rstring
}

export interface aws_codebuild_project_config {
    arn?: rstring
    artifacts: _aws_codebuild_project__artifacts[]
    badge_enabled?: rboolean
    badge_url?: rstring
    build_timeout?: rnumber
    cache?: _aws_codebuild_project__cache[]
    description?: rstring
    encryption_key?: rstring
    environment: _aws_codebuild_project__environment[]
    name: rstring
    secondary_artifacts?: _aws_codebuild_project__secondary_artifacts[]
    secondary_sources?: _aws_codebuild_project__secondary_sources[]
    service_role: rstring
    source: _aws_codebuild_project__source[]
    tags?: {[propName: string]: rstring}
    timeout?: rnumber
    vpc_config?: _aws_codebuild_project__vpc_config[]
}

export class aws_codebuild_project implements Resource {
    config: aws_codebuild_project_config
    private _is_data: boolean = false
    private _name: string = "aws_codebuild_project"
    private _id: string;
    constructor(id: string, config: aws_codebuild_project_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_artifacts(): Reference<_aws_codebuild_project__artifacts[]> {
        return new Reference(`${this._name}.${this._id}.artifacts`)
    }
    get ref_badge_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.badge_enabled`)
    }
    get ref_badge_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.badge_url`)
    }
    get ref_build_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.build_timeout`)
    }
    get ref_cache(): Reference<_aws_codebuild_project__cache[]> {
        return new Reference(`${this._name}.${this._id}.cache`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_encryption_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.encryption_key`)
    }
    get ref_environment(): Reference<_aws_codebuild_project__environment[]> {
        return new Reference(`${this._name}.${this._id}.environment`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_secondary_artifacts(): Reference<_aws_codebuild_project__secondary_artifacts[]> {
        return new Reference(`${this._name}.${this._id}.secondary_artifacts`)
    }
    get ref_secondary_sources(): Reference<_aws_codebuild_project__secondary_sources[]> {
        return new Reference(`${this._name}.${this._id}.secondary_sources`)
    }
    get ref_service_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_role`)
    }
    get ref_source(): Reference<_aws_codebuild_project__source[]> {
        return new Reference(`${this._name}.${this._id}.source`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.timeout`)
    }
    get ref_vpc_config(): Reference<_aws_codebuild_project__vpc_config[]> {
        return new Reference(`${this._name}.${this._id}.vpc_config`)
    }
}

export interface aws_codebuild_webhook_config {
    branch_filter?: rstring
    payload_url?: rstring
    project_name: rstring
    secret?: rstring
    url?: rstring
}

export class aws_codebuild_webhook implements Resource {
    config: aws_codebuild_webhook_config
    private _is_data: boolean = false
    private _name: string = "aws_codebuild_webhook"
    private _id: string;
    constructor(id: string, config: aws_codebuild_webhook_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_branch_filter(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.branch_filter`)
    }
    get ref_payload_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.payload_url`)
    }
    get ref_project_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.project_name`)
    }
    get ref_secret(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.secret`)
    }
    get ref_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.url`)
    }
}

export interface aws_codecommit_repository_config {
    arn?: rstring
    clone_url_http?: rstring
    clone_url_ssh?: rstring
    default_branch?: rstring
    description?: rstring
    repository_id?: rstring
    repository_name: rstring
}

export class aws_codecommit_repository implements Resource {
    config: aws_codecommit_repository_config
    private _is_data: boolean = false
    private _name: string = "aws_codecommit_repository"
    private _id: string;
    constructor(id: string, config: aws_codecommit_repository_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_clone_url_http(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.clone_url_http`)
    }
    get ref_clone_url_ssh(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.clone_url_ssh`)
    }
    get ref_default_branch(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_branch`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_repository_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.repository_id`)
    }
    get ref_repository_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.repository_name`)
    }
}

export interface _aws_codecommit_trigger__trigger {
    branches?: rstring[]
    custom_data?: rstring
    destination_arn: rstring
    events: rstring[]
    name: rstring
}

export interface aws_codecommit_trigger_config {
    configuration_id?: rstring
    repository_name: rstring
    trigger: _aws_codecommit_trigger__trigger[]
}

export class aws_codecommit_trigger implements Resource {
    config: aws_codecommit_trigger_config
    private _is_data: boolean = false
    private _name: string = "aws_codecommit_trigger"
    private _id: string;
    constructor(id: string, config: aws_codecommit_trigger_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_configuration_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configuration_id`)
    }
    get ref_repository_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.repository_name`)
    }
    get ref_trigger(): Reference<_aws_codecommit_trigger__trigger[]> {
        return new Reference(`${this._name}.${this._id}.trigger`)
    }
}

export interface aws_codedeploy_app_config {
    compute_platform?: rstring
    name: rstring
    unique_id?: rstring
}

export class aws_codedeploy_app implements Resource {
    config: aws_codedeploy_app_config
    private _is_data: boolean = false
    private _name: string = "aws_codedeploy_app"
    private _id: string;
    constructor(id: string, config: aws_codedeploy_app_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_compute_platform(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.compute_platform`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_unique_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.unique_id`)
    }
}

export interface _aws_codedeploy_deployment_config__minimum_healthy_hosts {
    type?: rstring
    value?: rnumber
}

export interface __aws_codedeploy_deployment_config__traffic_routing_config__time_based_canary {
    interval?: rnumber
    percentage?: rnumber
}

export interface __aws_codedeploy_deployment_config__traffic_routing_config__time_based_linear {
    interval?: rnumber
    percentage?: rnumber
}

export interface _aws_codedeploy_deployment_config__traffic_routing_config {
    time_based_canary?: __aws_codedeploy_deployment_config__traffic_routing_config__time_based_canary[]
    time_based_linear?: __aws_codedeploy_deployment_config__traffic_routing_config__time_based_linear[]
    type?: rstring
}

export interface aws_codedeploy_deployment_config_config {
    compute_platform?: rstring
    deployment_config_id?: rstring
    deployment_config_name: rstring
    minimum_healthy_hosts?: _aws_codedeploy_deployment_config__minimum_healthy_hosts[]
    traffic_routing_config?: _aws_codedeploy_deployment_config__traffic_routing_config[]
}

export class aws_codedeploy_deployment_config implements Resource {
    config: aws_codedeploy_deployment_config_config
    private _is_data: boolean = false
    private _name: string = "aws_codedeploy_deployment_config"
    private _id: string;
    constructor(id: string, config: aws_codedeploy_deployment_config_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_compute_platform(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.compute_platform`)
    }
    get ref_deployment_config_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.deployment_config_id`)
    }
    get ref_deployment_config_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.deployment_config_name`)
    }
    get ref_minimum_healthy_hosts(): Reference<_aws_codedeploy_deployment_config__minimum_healthy_hosts[]> {
        return new Reference(`${this._name}.${this._id}.minimum_healthy_hosts`)
    }
    get ref_traffic_routing_config(): Reference<_aws_codedeploy_deployment_config__traffic_routing_config[]> {
        return new Reference(`${this._name}.${this._id}.traffic_routing_config`)
    }
}

export interface _aws_codedeploy_deployment_group__alarm_configuration {
    alarms?: rstring[]
    enabled?: rboolean
    ignore_poll_alarm_failure?: rboolean
}

export interface _aws_codedeploy_deployment_group__auto_rollback_configuration {
    enabled?: rboolean
    events?: rstring[]
}

export interface __aws_codedeploy_deployment_group__blue_green_deployment_config__deployment_ready_option {
    action_on_timeout?: rstring
    wait_time_in_minutes?: rnumber
}

export interface __aws_codedeploy_deployment_group__blue_green_deployment_config__green_fleet_provisioning_option {
    action?: rstring
}

export interface __aws_codedeploy_deployment_group__blue_green_deployment_config__terminate_blue_instances_on_deployment_success {
    action?: rstring
    termination_wait_time_in_minutes?: rnumber
}

export interface _aws_codedeploy_deployment_group__blue_green_deployment_config {
    deployment_ready_option?: __aws_codedeploy_deployment_group__blue_green_deployment_config__deployment_ready_option[]
    green_fleet_provisioning_option?: __aws_codedeploy_deployment_group__blue_green_deployment_config__green_fleet_provisioning_option[]
    terminate_blue_instances_on_deployment_success?: __aws_codedeploy_deployment_group__blue_green_deployment_config__terminate_blue_instances_on_deployment_success[]
}

export interface _aws_codedeploy_deployment_group__deployment_style {
    deployment_option?: rstring
    deployment_type?: rstring
}

export interface _aws_codedeploy_deployment_group__ec2_tag_filter {
    key?: rstring
    type?: rstring
    value?: rstring
}

export interface __aws_codedeploy_deployment_group__ec2_tag_set__ec2_tag_filter {
    key?: rstring
    type?: rstring
    value?: rstring
}

export interface _aws_codedeploy_deployment_group__ec2_tag_set {
    ec2_tag_filter?: __aws_codedeploy_deployment_group__ec2_tag_set__ec2_tag_filter[]
}

export interface _aws_codedeploy_deployment_group__ecs_service {
    cluster_name: rstring
    service_name: rstring
}

export interface __aws_codedeploy_deployment_group__load_balancer_info__elb_info {
    name?: rstring
}

export interface __aws_codedeploy_deployment_group__load_balancer_info__target_group_info {
    name?: rstring
}

export interface __aws_codedeploy_deployment_group__load_balancer_info__target_group_pair_info__prod_traffic_route {
    listener_arns: rstring[]
}

export interface __aws_codedeploy_deployment_group__load_balancer_info__target_group_pair_info__target_group {
    name: rstring
}

export interface __aws_codedeploy_deployment_group__load_balancer_info__target_group_pair_info__test_traffic_route {
    listener_arns: rstring[]
}

export interface __aws_codedeploy_deployment_group__load_balancer_info__target_group_pair_info {
    prod_traffic_route: __aws_codedeploy_deployment_group__load_balancer_info__target_group_pair_info__prod_traffic_route[]
    target_group: __aws_codedeploy_deployment_group__load_balancer_info__target_group_pair_info__target_group[]
    test_traffic_route?: __aws_codedeploy_deployment_group__load_balancer_info__target_group_pair_info__test_traffic_route[]
}

export interface _aws_codedeploy_deployment_group__load_balancer_info {
    elb_info?: __aws_codedeploy_deployment_group__load_balancer_info__elb_info[]
    target_group_info?: __aws_codedeploy_deployment_group__load_balancer_info__target_group_info[]
    target_group_pair_info?: __aws_codedeploy_deployment_group__load_balancer_info__target_group_pair_info[]
}

export interface _aws_codedeploy_deployment_group__on_premises_instance_tag_filter {
    key?: rstring
    type?: rstring
    value?: rstring
}

export interface _aws_codedeploy_deployment_group__trigger_configuration {
    trigger_events: rstring[]
    trigger_name: rstring
    trigger_target_arn: rstring
}

export interface aws_codedeploy_deployment_group_config {
    alarm_configuration?: _aws_codedeploy_deployment_group__alarm_configuration[]
    app_name: rstring
    auto_rollback_configuration?: _aws_codedeploy_deployment_group__auto_rollback_configuration[]
    autoscaling_groups?: rstring[]
    blue_green_deployment_config?: _aws_codedeploy_deployment_group__blue_green_deployment_config[]
    deployment_config_name?: rstring
    deployment_group_name: rstring
    deployment_style?: _aws_codedeploy_deployment_group__deployment_style[]
    ec2_tag_filter?: _aws_codedeploy_deployment_group__ec2_tag_filter[]
    ec2_tag_set?: _aws_codedeploy_deployment_group__ec2_tag_set[]
    ecs_service?: _aws_codedeploy_deployment_group__ecs_service[]
    load_balancer_info?: _aws_codedeploy_deployment_group__load_balancer_info[]
    on_premises_instance_tag_filter?: _aws_codedeploy_deployment_group__on_premises_instance_tag_filter[]
    service_role_arn: rstring
    trigger_configuration?: _aws_codedeploy_deployment_group__trigger_configuration[]
}

export class aws_codedeploy_deployment_group implements Resource {
    config: aws_codedeploy_deployment_group_config
    private _is_data: boolean = false
    private _name: string = "aws_codedeploy_deployment_group"
    private _id: string;
    constructor(id: string, config: aws_codedeploy_deployment_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_alarm_configuration(): Reference<_aws_codedeploy_deployment_group__alarm_configuration[]> {
        return new Reference(`${this._name}.${this._id}.alarm_configuration`)
    }
    get ref_app_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.app_name`)
    }
    get ref_auto_rollback_configuration(): Reference<_aws_codedeploy_deployment_group__auto_rollback_configuration[]> {
        return new Reference(`${this._name}.${this._id}.auto_rollback_configuration`)
    }
    get ref_autoscaling_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.autoscaling_groups`)
    }
    get ref_blue_green_deployment_config(): Reference<_aws_codedeploy_deployment_group__blue_green_deployment_config[]> {
        return new Reference(`${this._name}.${this._id}.blue_green_deployment_config`)
    }
    get ref_deployment_config_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.deployment_config_name`)
    }
    get ref_deployment_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.deployment_group_name`)
    }
    get ref_deployment_style(): Reference<_aws_codedeploy_deployment_group__deployment_style[]> {
        return new Reference(`${this._name}.${this._id}.deployment_style`)
    }
    get ref_ec2_tag_filter(): Reference<_aws_codedeploy_deployment_group__ec2_tag_filter[]> {
        return new Reference(`${this._name}.${this._id}.ec2_tag_filter`)
    }
    get ref_ec2_tag_set(): Reference<_aws_codedeploy_deployment_group__ec2_tag_set[]> {
        return new Reference(`${this._name}.${this._id}.ec2_tag_set`)
    }
    get ref_ecs_service(): Reference<_aws_codedeploy_deployment_group__ecs_service[]> {
        return new Reference(`${this._name}.${this._id}.ecs_service`)
    }
    get ref_load_balancer_info(): Reference<_aws_codedeploy_deployment_group__load_balancer_info[]> {
        return new Reference(`${this._name}.${this._id}.load_balancer_info`)
    }
    get ref_on_premises_instance_tag_filter(): Reference<_aws_codedeploy_deployment_group__on_premises_instance_tag_filter[]> {
        return new Reference(`${this._name}.${this._id}.on_premises_instance_tag_filter`)
    }
    get ref_service_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_role_arn`)
    }
    get ref_trigger_configuration(): Reference<_aws_codedeploy_deployment_group__trigger_configuration[]> {
        return new Reference(`${this._name}.${this._id}.trigger_configuration`)
    }
}

export interface __aws_codepipeline__artifact_store__encryption_key {
    id: rstring
    type: rstring
}

export interface _aws_codepipeline__artifact_store {
    encryption_key?: __aws_codepipeline__artifact_store__encryption_key[]
    location: rstring
    type: rstring
}

export interface __aws_codepipeline__stage__action {
    category: rstring
    configuration?: {[propName: string]: rstring}
    input_artifacts?: rstring[]
    name: rstring
    output_artifacts?: rstring[]
    owner: rstring
    provider: rstring
    role_arn?: rstring
    run_order?: rnumber
    version: rstring
}

export interface _aws_codepipeline__stage {
    action: __aws_codepipeline__stage__action[]
    name: rstring
}

export interface aws_codepipeline_config {
    arn?: rstring
    artifact_store: _aws_codepipeline__artifact_store[]
    name: rstring
    role_arn: rstring
    stage: _aws_codepipeline__stage[]
}

export class aws_codepipeline implements Resource {
    config: aws_codepipeline_config
    private _is_data: boolean = false
    private _name: string = "aws_codepipeline"
    private _id: string;
    constructor(id: string, config: aws_codepipeline_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_artifact_store(): Reference<_aws_codepipeline__artifact_store[]> {
        return new Reference(`${this._name}.${this._id}.artifact_store`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_stage(): Reference<_aws_codepipeline__stage[]> {
        return new Reference(`${this._name}.${this._id}.stage`)
    }
}

export interface _aws_codepipeline_webhook__authentication_configuration {
    allowed_ip_range?: rstring
    secret_token?: rstring
}

export interface _aws_codepipeline_webhook__filter {
    json_path: rstring
    match_equals: rstring
}

export interface aws_codepipeline_webhook_config {
    authentication: rstring
    authentication_configuration?: _aws_codepipeline_webhook__authentication_configuration[]
    filter: _aws_codepipeline_webhook__filter[]
    name: rstring
    target_action: rstring
    target_pipeline: rstring
    url?: rstring
}

export class aws_codepipeline_webhook implements Resource {
    config: aws_codepipeline_webhook_config
    private _is_data: boolean = false
    private _name: string = "aws_codepipeline_webhook"
    private _id: string;
    constructor(id: string, config: aws_codepipeline_webhook_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_authentication(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.authentication`)
    }
    get ref_authentication_configuration(): Reference<_aws_codepipeline_webhook__authentication_configuration[]> {
        return new Reference(`${this._name}.${this._id}.authentication_configuration`)
    }
    get ref_filter(): Reference<_aws_codepipeline_webhook__filter[]> {
        return new Reference(`${this._name}.${this._id}.filter`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_target_action(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_action`)
    }
    get ref_target_pipeline(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_pipeline`)
    }
    get ref_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.url`)
    }
}

export interface _aws_cognito_identity_pool__cognito_identity_providers {
    client_id?: rstring
    provider_name?: rstring
    server_side_token_check?: rboolean
}

export interface aws_cognito_identity_pool_config {
    allow_unauthenticated_identities?: rboolean
    arn?: rstring
    cognito_identity_providers?: _aws_cognito_identity_pool__cognito_identity_providers[]
    developer_provider_name?: rstring
    identity_pool_name: rstring
    openid_connect_provider_arns?: rstring[]
    saml_provider_arns?: rstring[]
    supported_login_providers?: {[propName: string]: rstring}
}

export class aws_cognito_identity_pool implements Resource {
    config: aws_cognito_identity_pool_config
    private _is_data: boolean = false
    private _name: string = "aws_cognito_identity_pool"
    private _id: string;
    constructor(id: string, config: aws_cognito_identity_pool_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allow_unauthenticated_identities(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_unauthenticated_identities`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_cognito_identity_providers(): Reference<_aws_cognito_identity_pool__cognito_identity_providers[]> {
        return new Reference(`${this._name}.${this._id}.cognito_identity_providers`)
    }
    get ref_developer_provider_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.developer_provider_name`)
    }
    get ref_identity_pool_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identity_pool_name`)
    }
    get ref_openid_connect_provider_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.openid_connect_provider_arns`)
    }
    get ref_saml_provider_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.saml_provider_arns`)
    }
    get ref_supported_login_providers(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.supported_login_providers`)
    }
}

export interface __aws_cognito_identity_pool_roles_attachment__role_mapping__mapping_rule {
    claim: rstring
    match_type: rstring
    role_arn: rstring
    value: rstring
}

export interface _aws_cognito_identity_pool_roles_attachment__role_mapping {
    ambiguous_role_resolution?: rstring
    identity_provider: rstring
    mapping_rule?: __aws_cognito_identity_pool_roles_attachment__role_mapping__mapping_rule[]
    type: rstring
}

export interface aws_cognito_identity_pool_roles_attachment_config {
    identity_pool_id: rstring
    role_mapping?: _aws_cognito_identity_pool_roles_attachment__role_mapping[]
    roles: {[propName: string]: rstring}
}

export class aws_cognito_identity_pool_roles_attachment implements Resource {
    config: aws_cognito_identity_pool_roles_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_cognito_identity_pool_roles_attachment"
    private _id: string;
    constructor(id: string, config: aws_cognito_identity_pool_roles_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_identity_pool_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identity_pool_id`)
    }
    get ref_role_mapping(): Reference<_aws_cognito_identity_pool_roles_attachment__role_mapping[]> {
        return new Reference(`${this._name}.${this._id}.role_mapping`)
    }
    get ref_roles(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.roles`)
    }
}

export interface aws_cognito_identity_provider_config {
    attribute_mapping?: {[propName: string]: rstring}
    idp_identifiers?: rstring[]
    provider_details: {[propName: string]: rstring}
    provider_name: rstring
    provider_type: rstring
    user_pool_id: rstring
}

export class aws_cognito_identity_provider implements Resource {
    config: aws_cognito_identity_provider_config
    private _is_data: boolean = false
    private _name: string = "aws_cognito_identity_provider"
    private _id: string;
    constructor(id: string, config: aws_cognito_identity_provider_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_attribute_mapping(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.attribute_mapping`)
    }
    get ref_idp_identifiers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.idp_identifiers`)
    }
    get ref_provider_details(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.provider_details`)
    }
    get ref_provider_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.provider_name`)
    }
    get ref_provider_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.provider_type`)
    }
    get ref_user_pool_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_pool_id`)
    }
}

export interface _aws_cognito_resource_server__scope {
    scope_description: rstring
    scope_name: rstring
}

export interface aws_cognito_resource_server_config {
    identifier: rstring
    name: rstring
    scope?: _aws_cognito_resource_server__scope[]
    scope_identifiers?: rstring[]
    user_pool_id: rstring
}

export class aws_cognito_resource_server implements Resource {
    config: aws_cognito_resource_server_config
    private _is_data: boolean = false
    private _name: string = "aws_cognito_resource_server"
    private _id: string;
    constructor(id: string, config: aws_cognito_resource_server_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identifier`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_scope(): Reference<_aws_cognito_resource_server__scope[]> {
        return new Reference(`${this._name}.${this._id}.scope`)
    }
    get ref_scope_identifiers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.scope_identifiers`)
    }
    get ref_user_pool_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_pool_id`)
    }
}

export interface aws_cognito_user_group_config {
    description?: rstring
    name: rstring
    precedence?: rnumber
    role_arn?: rstring
    user_pool_id: rstring
}

export class aws_cognito_user_group implements Resource {
    config: aws_cognito_user_group_config
    private _is_data: boolean = false
    private _name: string = "aws_cognito_user_group"
    private _id: string;
    constructor(id: string, config: aws_cognito_user_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_precedence(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.precedence`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_user_pool_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_pool_id`)
    }
}

export interface __aws_cognito_user_pool__admin_create_user_config__invite_message_template {
    email_message?: rstring
    email_subject?: rstring
    sms_message?: rstring
}

export interface _aws_cognito_user_pool__admin_create_user_config {
    allow_admin_create_user_only?: rboolean
    invite_message_template?: __aws_cognito_user_pool__admin_create_user_config__invite_message_template[]
    unused_account_validity_days?: rnumber
}

export interface _aws_cognito_user_pool__device_configuration {
    challenge_required_on_new_device?: rboolean
    device_only_remembered_on_user_prompt?: rboolean
}

export interface _aws_cognito_user_pool__email_configuration {
    reply_to_email_address?: rstring
    source_arn?: rstring
}

export interface _aws_cognito_user_pool__lambda_config {
    create_auth_challenge?: rstring
    custom_message?: rstring
    define_auth_challenge?: rstring
    post_authentication?: rstring
    post_confirmation?: rstring
    pre_authentication?: rstring
    pre_sign_up?: rstring
    pre_token_generation?: rstring
    user_migration?: rstring
    verify_auth_challenge_response?: rstring
}

export interface _aws_cognito_user_pool__password_policy {
    minimum_length?: rnumber
    require_lowercase?: rboolean
    require_numbers?: rboolean
    require_symbols?: rboolean
    require_uppercase?: rboolean
}

export interface __aws_cognito_user_pool__schema__number_attribute_constraints {
    max_value?: rstring
    min_value?: rstring
}

export interface __aws_cognito_user_pool__schema__string_attribute_constraints {
    max_length?: rstring
    min_length?: rstring
}

export interface _aws_cognito_user_pool__schema {
    attribute_data_type: rstring
    developer_only_attribute?: rboolean
    mutable?: rboolean
    name: rstring
    number_attribute_constraints?: __aws_cognito_user_pool__schema__number_attribute_constraints[]
    required?: rboolean
    string_attribute_constraints?: __aws_cognito_user_pool__schema__string_attribute_constraints[]
}

export interface _aws_cognito_user_pool__sms_configuration {
    external_id: rstring
    sns_caller_arn: rstring
}

export interface _aws_cognito_user_pool__user_pool_add_ons {
    advanced_security_mode: rstring
}

export interface _aws_cognito_user_pool__verification_message_template {
    default_email_option?: rstring
    email_message?: rstring
    email_message_by_link?: rstring
    email_subject?: rstring
    email_subject_by_link?: rstring
    sms_message?: rstring
}

export interface aws_cognito_user_pool_config {
    admin_create_user_config?: _aws_cognito_user_pool__admin_create_user_config[]
    alias_attributes?: rstring[]
    arn?: rstring
    auto_verified_attributes?: rstring[]
    creation_date?: rstring
    device_configuration?: _aws_cognito_user_pool__device_configuration[]
    email_configuration?: _aws_cognito_user_pool__email_configuration[]
    email_verification_message?: rstring
    email_verification_subject?: rstring
    endpoint?: rstring
    lambda_config?: _aws_cognito_user_pool__lambda_config[]
    last_modified_date?: rstring
    mfa_configuration?: rstring
    name: rstring
    password_policy?: _aws_cognito_user_pool__password_policy[]
    schema?: _aws_cognito_user_pool__schema[]
    sms_authentication_message?: rstring
    sms_configuration?: _aws_cognito_user_pool__sms_configuration[]
    sms_verification_message?: rstring
    tags?: {[propName: string]: rstring}
    user_pool_add_ons?: _aws_cognito_user_pool__user_pool_add_ons[]
    username_attributes?: rstring[]
    verification_message_template?: _aws_cognito_user_pool__verification_message_template[]
}

export class aws_cognito_user_pool implements Resource {
    config: aws_cognito_user_pool_config
    private _is_data: boolean = false
    private _name: string = "aws_cognito_user_pool"
    private _id: string;
    constructor(id: string, config: aws_cognito_user_pool_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_admin_create_user_config(): Reference<_aws_cognito_user_pool__admin_create_user_config[]> {
        return new Reference(`${this._name}.${this._id}.admin_create_user_config`)
    }
    get ref_alias_attributes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.alias_attributes`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_auto_verified_attributes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.auto_verified_attributes`)
    }
    get ref_creation_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.creation_date`)
    }
    get ref_device_configuration(): Reference<_aws_cognito_user_pool__device_configuration[]> {
        return new Reference(`${this._name}.${this._id}.device_configuration`)
    }
    get ref_email_configuration(): Reference<_aws_cognito_user_pool__email_configuration[]> {
        return new Reference(`${this._name}.${this._id}.email_configuration`)
    }
    get ref_email_verification_message(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.email_verification_message`)
    }
    get ref_email_verification_subject(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.email_verification_subject`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_lambda_config(): Reference<_aws_cognito_user_pool__lambda_config[]> {
        return new Reference(`${this._name}.${this._id}.lambda_config`)
    }
    get ref_last_modified_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_modified_date`)
    }
    get ref_mfa_configuration(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.mfa_configuration`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_password_policy(): Reference<_aws_cognito_user_pool__password_policy[]> {
        return new Reference(`${this._name}.${this._id}.password_policy`)
    }
    get ref_schema(): Reference<_aws_cognito_user_pool__schema[]> {
        return new Reference(`${this._name}.${this._id}.schema`)
    }
    get ref_sms_authentication_message(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sms_authentication_message`)
    }
    get ref_sms_configuration(): Reference<_aws_cognito_user_pool__sms_configuration[]> {
        return new Reference(`${this._name}.${this._id}.sms_configuration`)
    }
    get ref_sms_verification_message(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sms_verification_message`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_user_pool_add_ons(): Reference<_aws_cognito_user_pool__user_pool_add_ons[]> {
        return new Reference(`${this._name}.${this._id}.user_pool_add_ons`)
    }
    get ref_username_attributes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.username_attributes`)
    }
    get ref_verification_message_template(): Reference<_aws_cognito_user_pool__verification_message_template[]> {
        return new Reference(`${this._name}.${this._id}.verification_message_template`)
    }
}

export interface aws_cognito_user_pool_client_config {
    allowed_oauth_flows?: rstring[]
    allowed_oauth_flows_user_pool_client?: rboolean
    allowed_oauth_scopes?: rstring[]
    callback_urls?: rstring[]
    client_secret?: rstring
    default_redirect_uri?: rstring
    explicit_auth_flows?: rstring[]
    generate_secret?: rboolean
    logout_urls?: rstring[]
    name: rstring
    read_attributes?: rstring[]
    refresh_token_validity?: rnumber
    supported_identity_providers?: rstring[]
    user_pool_id: rstring
    write_attributes?: rstring[]
}

export class aws_cognito_user_pool_client implements Resource {
    config: aws_cognito_user_pool_client_config
    private _is_data: boolean = false
    private _name: string = "aws_cognito_user_pool_client"
    private _id: string;
    constructor(id: string, config: aws_cognito_user_pool_client_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allowed_oauth_flows(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.allowed_oauth_flows`)
    }
    get ref_allowed_oauth_flows_user_pool_client(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allowed_oauth_flows_user_pool_client`)
    }
    get ref_allowed_oauth_scopes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.allowed_oauth_scopes`)
    }
    get ref_callback_urls(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.callback_urls`)
    }
    get ref_client_secret(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.client_secret`)
    }
    get ref_default_redirect_uri(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_redirect_uri`)
    }
    get ref_explicit_auth_flows(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.explicit_auth_flows`)
    }
    get ref_generate_secret(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.generate_secret`)
    }
    get ref_logout_urls(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.logout_urls`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_read_attributes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.read_attributes`)
    }
    get ref_refresh_token_validity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.refresh_token_validity`)
    }
    get ref_supported_identity_providers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.supported_identity_providers`)
    }
    get ref_user_pool_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_pool_id`)
    }
    get ref_write_attributes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.write_attributes`)
    }
}

export interface aws_cognito_user_pool_domain_config {
    aws_account_id?: rstring
    certificate_arn?: rstring
    cloudfront_distribution_arn?: rstring
    domain: rstring
    s3_bucket?: rstring
    user_pool_id: rstring
    version?: rstring
}

export class aws_cognito_user_pool_domain implements Resource {
    config: aws_cognito_user_pool_domain_config
    private _is_data: boolean = false
    private _name: string = "aws_cognito_user_pool_domain"
    private _id: string;
    constructor(id: string, config: aws_cognito_user_pool_domain_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_aws_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.aws_account_id`)
    }
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_arn`)
    }
    get ref_cloudfront_distribution_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloudfront_distribution_arn`)
    }
    get ref_domain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain`)
    }
    get ref_s3_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_bucket`)
    }
    get ref_user_pool_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_pool_id`)
    }
    get ref_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version`)
    }
}

export interface aws_config_aggregate_authorization_config {
    account_id: rstring
    arn?: rstring
    region: rstring
}

export class aws_config_aggregate_authorization implements Resource {
    config: aws_config_aggregate_authorization_config
    private _is_data: boolean = false
    private _name: string = "aws_config_aggregate_authorization"
    private _id: string;
    constructor(id: string, config: aws_config_aggregate_authorization_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.account_id`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.region`)
    }
}

export interface _aws_config_config_rule__scope {
    compliance_resource_id?: rstring
    compliance_resource_types?: rstring[]
    tag_key?: rstring
    tag_value?: rstring
}

export interface __aws_config_config_rule__source__source_detail {
    event_source?: rstring
    maximum_execution_frequency?: rstring
    message_type?: rstring
}

export interface _aws_config_config_rule__source {
    owner: rstring
    source_detail?: __aws_config_config_rule__source__source_detail[]
    source_identifier: rstring
}

export interface aws_config_config_rule_config {
    arn?: rstring
    description?: rstring
    input_parameters?: rstring
    maximum_execution_frequency?: rstring
    name: rstring
    rule_id?: rstring
    scope?: _aws_config_config_rule__scope[]
    source: _aws_config_config_rule__source[]
}

export class aws_config_config_rule implements Resource {
    config: aws_config_config_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_config_config_rule"
    private _id: string;
    constructor(id: string, config: aws_config_config_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_input_parameters(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.input_parameters`)
    }
    get ref_maximum_execution_frequency(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.maximum_execution_frequency`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_rule_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rule_id`)
    }
    get ref_scope(): Reference<_aws_config_config_rule__scope[]> {
        return new Reference(`${this._name}.${this._id}.scope`)
    }
    get ref_source(): Reference<_aws_config_config_rule__source[]> {
        return new Reference(`${this._name}.${this._id}.source`)
    }
}

export interface _aws_config_configuration_aggregator__account_aggregation_source {
    account_ids: rstring[]
    all_regions?: rboolean
    regions?: rstring[]
}

export interface _aws_config_configuration_aggregator__organization_aggregation_source {
    all_regions?: rboolean
    regions?: rstring[]
    role_arn: rstring
}

export interface aws_config_configuration_aggregator_config {
    account_aggregation_source?: _aws_config_configuration_aggregator__account_aggregation_source[]
    arn?: rstring
    name: rstring
    organization_aggregation_source?: _aws_config_configuration_aggregator__organization_aggregation_source[]
}

export class aws_config_configuration_aggregator implements Resource {
    config: aws_config_configuration_aggregator_config
    private _is_data: boolean = false
    private _name: string = "aws_config_configuration_aggregator"
    private _id: string;
    constructor(id: string, config: aws_config_configuration_aggregator_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_aggregation_source(): Reference<_aws_config_configuration_aggregator__account_aggregation_source[]> {
        return new Reference(`${this._name}.${this._id}.account_aggregation_source`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_organization_aggregation_source(): Reference<_aws_config_configuration_aggregator__organization_aggregation_source[]> {
        return new Reference(`${this._name}.${this._id}.organization_aggregation_source`)
    }
}

export interface _aws_config_configuration_recorder__recording_group {
    all_supported?: rboolean
    include_global_resource_types?: rboolean
    resource_types?: rstring[]
}

export interface aws_config_configuration_recorder_config {
    name?: rstring
    recording_group?: _aws_config_configuration_recorder__recording_group[]
    role_arn: rstring
}

export class aws_config_configuration_recorder implements Resource {
    config: aws_config_configuration_recorder_config
    private _is_data: boolean = false
    private _name: string = "aws_config_configuration_recorder"
    private _id: string;
    constructor(id: string, config: aws_config_configuration_recorder_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_recording_group(): Reference<_aws_config_configuration_recorder__recording_group[]> {
        return new Reference(`${this._name}.${this._id}.recording_group`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
}

export interface aws_config_configuration_recorder_status_config {
    is_enabled: rboolean
    name: rstring
}

export class aws_config_configuration_recorder_status implements Resource {
    config: aws_config_configuration_recorder_status_config
    private _is_data: boolean = false
    private _name: string = "aws_config_configuration_recorder_status"
    private _id: string;
    constructor(id: string, config: aws_config_configuration_recorder_status_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_is_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.is_enabled`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_config_delivery_channel__snapshot_delivery_properties {
    delivery_frequency?: rstring
}

export interface aws_config_delivery_channel_config {
    name?: rstring
    s3_bucket_name: rstring
    s3_key_prefix?: rstring
    snapshot_delivery_properties?: _aws_config_delivery_channel__snapshot_delivery_properties[]
    sns_topic_arn?: rstring
}

export class aws_config_delivery_channel implements Resource {
    config: aws_config_delivery_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_config_delivery_channel"
    private _id: string;
    constructor(id: string, config: aws_config_delivery_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_s3_bucket_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_bucket_name`)
    }
    get ref_s3_key_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_key_prefix`)
    }
    get ref_snapshot_delivery_properties(): Reference<_aws_config_delivery_channel__snapshot_delivery_properties[]> {
        return new Reference(`${this._name}.${this._id}.snapshot_delivery_properties`)
    }
    get ref_sns_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sns_topic_arn`)
    }
}

export interface aws_cur_report_definition_config {
    additional_artifacts?: rstring[]
    additional_schema_elements: rstring[]
    compression: rstring
    format: rstring
    report_name: rstring
    s3_bucket: rstring
    s3_prefix?: rstring
    s3_region: rstring
    time_unit: rstring
}

export class aws_cur_report_definition implements Resource {
    config: aws_cur_report_definition_config
    private _is_data: boolean = false
    private _name: string = "aws_cur_report_definition"
    private _id: string;
    constructor(id: string, config: aws_cur_report_definition_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_additional_artifacts(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.additional_artifacts`)
    }
    get ref_additional_schema_elements(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.additional_schema_elements`)
    }
    get ref_compression(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.compression`)
    }
    get ref_format(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.format`)
    }
    get ref_report_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.report_name`)
    }
    get ref_s3_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_bucket`)
    }
    get ref_s3_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_prefix`)
    }
    get ref_s3_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_region`)
    }
    get ref_time_unit(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.time_unit`)
    }
}

export interface aws_customer_gateway_config {
    bgp_asn: rnumber
    ip_address: rstring
    tags?: {[propName: string]: rstring}
    type: rstring
}

export class aws_customer_gateway implements Resource {
    config: aws_customer_gateway_config
    private _is_data: boolean = false
    private _name: string = "aws_customer_gateway"
    private _id: string;
    constructor(id: string, config: aws_customer_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_bgp_asn(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.bgp_asn`)
    }
    get ref_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ip_address`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_datasync_agent_config {
    activation_key?: rstring
    arn?: rstring
    ip_address?: rstring
    name?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_datasync_agent implements Resource {
    config: aws_datasync_agent_config
    private _is_data: boolean = false
    private _name: string = "aws_datasync_agent"
    private _id: string;
    constructor(id: string, config: aws_datasync_agent_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_activation_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.activation_key`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ip_address`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_datasync_location_efs__ec2_config {
    security_group_arns: rstring[]
    subnet_arn: rstring
}

export interface aws_datasync_location_efs_config {
    arn?: rstring
    ec2_config: _aws_datasync_location_efs__ec2_config[]
    efs_file_system_arn: rstring
    subdirectory?: rstring
    tags?: {[propName: string]: rstring}
    uri?: rstring
}

export class aws_datasync_location_efs implements Resource {
    config: aws_datasync_location_efs_config
    private _is_data: boolean = false
    private _name: string = "aws_datasync_location_efs"
    private _id: string;
    constructor(id: string, config: aws_datasync_location_efs_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_ec2_config(): Reference<_aws_datasync_location_efs__ec2_config[]> {
        return new Reference(`${this._name}.${this._id}.ec2_config`)
    }
    get ref_efs_file_system_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.efs_file_system_arn`)
    }
    get ref_subdirectory(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subdirectory`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_uri(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.uri`)
    }
}

export interface _aws_datasync_location_nfs__on_prem_config {
    agent_arns: rstring[]
}

export interface aws_datasync_location_nfs_config {
    arn?: rstring
    on_prem_config: _aws_datasync_location_nfs__on_prem_config[]
    server_hostname: rstring
    subdirectory: rstring
    tags?: {[propName: string]: rstring}
    uri?: rstring
}

export class aws_datasync_location_nfs implements Resource {
    config: aws_datasync_location_nfs_config
    private _is_data: boolean = false
    private _name: string = "aws_datasync_location_nfs"
    private _id: string;
    constructor(id: string, config: aws_datasync_location_nfs_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_on_prem_config(): Reference<_aws_datasync_location_nfs__on_prem_config[]> {
        return new Reference(`${this._name}.${this._id}.on_prem_config`)
    }
    get ref_server_hostname(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.server_hostname`)
    }
    get ref_subdirectory(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subdirectory`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_uri(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.uri`)
    }
}

export interface _aws_datasync_location_s3__s3_config {
    bucket_access_role_arn: rstring
}

export interface aws_datasync_location_s3_config {
    arn?: rstring
    s3_bucket_arn: rstring
    s3_config: _aws_datasync_location_s3__s3_config[]
    subdirectory: rstring
    tags?: {[propName: string]: rstring}
    uri?: rstring
}

export class aws_datasync_location_s3 implements Resource {
    config: aws_datasync_location_s3_config
    private _is_data: boolean = false
    private _name: string = "aws_datasync_location_s3"
    private _id: string;
    constructor(id: string, config: aws_datasync_location_s3_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_s3_bucket_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_bucket_arn`)
    }
    get ref_s3_config(): Reference<_aws_datasync_location_s3__s3_config[]> {
        return new Reference(`${this._name}.${this._id}.s3_config`)
    }
    get ref_subdirectory(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subdirectory`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_uri(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.uri`)
    }
}

export interface _aws_datasync_task__options {
    atime?: rstring
    bytes_per_second?: rnumber
    gid?: rstring
    mtime?: rstring
    posix_permissions?: rstring
    preserve_deleted_files?: rstring
    preserve_devices?: rstring
    uid?: rstring
    verify_mode?: rstring
}

export interface aws_datasync_task_config {
    arn?: rstring
    cloudwatch_log_group_arn?: rstring
    destination_location_arn: rstring
    name?: rstring
    options?: _aws_datasync_task__options[]
    source_location_arn: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_datasync_task implements Resource {
    config: aws_datasync_task_config
    private _is_data: boolean = false
    private _name: string = "aws_datasync_task"
    private _id: string;
    constructor(id: string, config: aws_datasync_task_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_cloudwatch_log_group_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloudwatch_log_group_arn`)
    }
    get ref_destination_location_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_location_arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_options(): Reference<_aws_datasync_task__options[]> {
        return new Reference(`${this._name}.${this._id}.options`)
    }
    get ref_source_location_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_location_arn`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_dax_cluster__nodes {
    address?: rstring
    availability_zone?: rstring
    id?: rstring
    port?: rnumber
}

export interface _aws_dax_cluster__server_side_encryption {
    enabled?: rboolean
}

export interface aws_dax_cluster_config {
    arn?: rstring
    availability_zones?: rstring[]
    cluster_address?: rstring
    cluster_name: rstring
    configuration_endpoint?: rstring
    description?: rstring
    iam_role_arn: rstring
    maintenance_window?: rstring
    node_type: rstring
    nodes?: _aws_dax_cluster__nodes[]
    notification_topic_arn?: rstring
    parameter_group_name?: rstring
    port?: rnumber
    replication_factor: rnumber
    security_group_ids?: rstring[]
    server_side_encryption?: _aws_dax_cluster__server_side_encryption[]
    subnet_group_name?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_dax_cluster implements Resource {
    config: aws_dax_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_dax_cluster"
    private _id: string;
    constructor(id: string, config: aws_dax_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_cluster_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_address`)
    }
    get ref_cluster_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_name`)
    }
    get ref_configuration_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configuration_endpoint`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_iam_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_role_arn`)
    }
    get ref_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.maintenance_window`)
    }
    get ref_node_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.node_type`)
    }
    get ref_nodes(): Reference<_aws_dax_cluster__nodes[]> {
        return new Reference(`${this._name}.${this._id}.nodes`)
    }
    get ref_notification_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.notification_topic_arn`)
    }
    get ref_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.parameter_group_name`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_replication_factor(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.replication_factor`)
    }
    get ref_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_ids`)
    }
    get ref_server_side_encryption(): Reference<_aws_dax_cluster__server_side_encryption[]> {
        return new Reference(`${this._name}.${this._id}.server_side_encryption`)
    }
    get ref_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_group_name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_dax_parameter_group__parameters {
    name: rstring
    value: rstring
}

export interface aws_dax_parameter_group_config {
    description?: rstring
    name: rstring
    parameters?: _aws_dax_parameter_group__parameters[]
}

export class aws_dax_parameter_group implements Resource {
    config: aws_dax_parameter_group_config
    private _is_data: boolean = false
    private _name: string = "aws_dax_parameter_group"
    private _id: string;
    constructor(id: string, config: aws_dax_parameter_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_parameters(): Reference<_aws_dax_parameter_group__parameters[]> {
        return new Reference(`${this._name}.${this._id}.parameters`)
    }
}

export interface aws_dax_subnet_group_config {
    description?: rstring
    name: rstring
    subnet_ids: rstring[]
    vpc_id?: rstring
}

export class aws_dax_subnet_group implements Resource {
    config: aws_dax_subnet_group_config
    private _is_data: boolean = false
    private _name: string = "aws_dax_subnet_group"
    private _id: string;
    constructor(id: string, config: aws_dax_subnet_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_db_cluster_snapshot_config {
    allocated_storage?: rnumber
    availability_zones?: rstring[]
    db_cluster_identifier: rstring
    db_cluster_snapshot_arn?: rstring
    db_cluster_snapshot_identifier: rstring
    engine?: rstring
    engine_version?: rstring
    kms_key_id?: rstring
    license_model?: rstring
    port?: rnumber
    snapshot_type?: rstring
    source_db_cluster_snapshot_arn?: rstring
    status?: rstring
    storage_encrypted?: rboolean
    vpc_id?: rstring
}

export class aws_db_cluster_snapshot implements Resource {
    config: aws_db_cluster_snapshot_config
    private _is_data: boolean = false
    private _name: string = "aws_db_cluster_snapshot"
    private _id: string;
    constructor(id: string, config: aws_db_cluster_snapshot_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocated_storage(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.allocated_storage`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_db_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_identifier`)
    }
    get ref_db_cluster_snapshot_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_snapshot_arn`)
    }
    get ref_db_cluster_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_snapshot_identifier`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_license_model(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.license_model`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_snapshot_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_type`)
    }
    get ref_source_db_cluster_snapshot_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_db_cluster_snapshot_arn`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_db_event_subscription_config {
    arn?: rstring
    customer_aws_id?: rstring
    enabled?: rboolean
    event_categories?: rstring[]
    name?: rstring
    name_prefix?: rstring
    sns_topic: rstring
    source_ids?: rstring[]
    source_type?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_db_event_subscription implements Resource {
    config: aws_db_event_subscription_config
    private _is_data: boolean = false
    private _name: string = "aws_db_event_subscription"
    private _id: string;
    constructor(id: string, config: aws_db_event_subscription_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_customer_aws_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_aws_id`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_event_categories(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.event_categories`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_sns_topic(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sns_topic`)
    }
    get ref_source_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.source_ids`)
    }
    get ref_source_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_type`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_db_instance__s3_import {
    bucket_name: rstring
    bucket_prefix?: rstring
    ingestion_role: rstring
    source_engine: rstring
    source_engine_version: rstring
}

export interface aws_db_instance_config {
    address?: rstring
    allocated_storage?: rnumber
    allow_major_version_upgrade?: rboolean
    apply_immediately?: rboolean
    arn?: rstring
    auto_minor_version_upgrade?: rboolean
    availability_zone?: rstring
    backup_retention_period?: rnumber
    backup_window?: rstring
    ca_cert_identifier?: rstring
    character_set_name?: rstring
    copy_tags_to_snapshot?: rboolean
    db_subnet_group_name?: rstring
    deletion_protection?: rboolean
    domain?: rstring
    domain_iam_role_name?: rstring
    enabled_cloudwatch_logs_exports?: rstring[]
    endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    final_snapshot_identifier?: rstring
    hosted_zone_id?: rstring
    iam_database_authentication_enabled?: rboolean
    identifier?: rstring
    identifier_prefix?: rstring
    instance_class: rstring
    iops?: rnumber
    kms_key_id?: rstring
    license_model?: rstring
    maintenance_window?: rstring
    monitoring_interval?: rnumber
    monitoring_role_arn?: rstring
    multi_az?: rboolean
    name?: rstring
    option_group_name?: rstring
    parameter_group_name?: rstring
    password?: rstring
    port?: rnumber
    publicly_accessible?: rboolean
    replicas?: rstring[]
    replicate_source_db?: rstring
    resource_id?: rstring
    s3_import?: _aws_db_instance__s3_import[]
    security_group_names?: rstring[]
    skip_final_snapshot?: rboolean
    snapshot_identifier?: rstring
    status?: rstring
    storage_encrypted?: rboolean
    storage_type?: rstring
    tags?: {[propName: string]: rstring}
    timezone?: rstring
    username?: rstring
    vpc_security_group_ids?: rstring[]
}

export class aws_db_instance implements Resource {
    config: aws_db_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_db_instance"
    private _id: string;
    constructor(id: string, config: aws_db_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.address`)
    }
    get ref_allocated_storage(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.allocated_storage`)
    }
    get ref_allow_major_version_upgrade(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_major_version_upgrade`)
    }
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_auto_minor_version_upgrade(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_minor_version_upgrade`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_backup_retention_period(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.backup_retention_period`)
    }
    get ref_backup_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.backup_window`)
    }
    get ref_ca_cert_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ca_cert_identifier`)
    }
    get ref_character_set_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.character_set_name`)
    }
    get ref_copy_tags_to_snapshot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.copy_tags_to_snapshot`)
    }
    get ref_db_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_subnet_group_name`)
    }
    get ref_deletion_protection(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.deletion_protection`)
    }
    get ref_domain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain`)
    }
    get ref_domain_iam_role_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_iam_role_name`)
    }
    get ref_enabled_cloudwatch_logs_exports(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.enabled_cloudwatch_logs_exports`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_final_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.final_snapshot_identifier`)
    }
    get ref_hosted_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hosted_zone_id`)
    }
    get ref_iam_database_authentication_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.iam_database_authentication_enabled`)
    }
    get ref_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identifier`)
    }
    get ref_identifier_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identifier_prefix`)
    }
    get ref_instance_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_class`)
    }
    get ref_iops(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.iops`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_license_model(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.license_model`)
    }
    get ref_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.maintenance_window`)
    }
    get ref_monitoring_interval(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.monitoring_interval`)
    }
    get ref_monitoring_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.monitoring_role_arn`)
    }
    get ref_multi_az(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.multi_az`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_option_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.option_group_name`)
    }
    get ref_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.parameter_group_name`)
    }
    get ref_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.password`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.publicly_accessible`)
    }
    get ref_replicas(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.replicas`)
    }
    get ref_replicate_source_db(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replicate_source_db`)
    }
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_s3_import(): Reference<_aws_db_instance__s3_import[]> {
        return new Reference(`${this._name}.${this._id}.s3_import`)
    }
    get ref_security_group_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_names`)
    }
    get ref_skip_final_snapshot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.skip_final_snapshot`)
    }
    get ref_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_identifier`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_storage_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.storage_type`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_timezone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.timezone`)
    }
    get ref_username(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.username`)
    }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_security_group_ids`)
    }
}

export interface __aws_db_option_group__option__option_settings {
    name: rstring
    value: rstring
}

export interface _aws_db_option_group__option {
    db_security_group_memberships?: rstring[]
    option_name: rstring
    option_settings?: __aws_db_option_group__option__option_settings[]
    port?: rnumber
    version?: rstring
    vpc_security_group_memberships?: rstring[]
}

export interface aws_db_option_group_config {
    arn?: rstring
    engine_name: rstring
    major_engine_version: rstring
    name?: rstring
    name_prefix?: rstring
    option?: _aws_db_option_group__option[]
    option_group_description?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_db_option_group implements Resource {
    config: aws_db_option_group_config
    private _is_data: boolean = false
    private _name: string = "aws_db_option_group"
    private _id: string;
    constructor(id: string, config: aws_db_option_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_engine_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_name`)
    }
    get ref_major_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.major_engine_version`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_option(): Reference<_aws_db_option_group__option[]> {
        return new Reference(`${this._name}.${this._id}.option`)
    }
    get ref_option_group_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.option_group_description`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_db_parameter_group__parameter {
    apply_method?: rstring
    name: rstring
    value: rstring
}

export interface aws_db_parameter_group_config {
    arn?: rstring
    description?: rstring
    family: rstring
    name?: rstring
    name_prefix?: rstring
    parameter?: _aws_db_parameter_group__parameter[]
    tags?: {[propName: string]: rstring}
}

export class aws_db_parameter_group implements Resource {
    config: aws_db_parameter_group_config
    private _is_data: boolean = false
    private _name: string = "aws_db_parameter_group"
    private _id: string;
    constructor(id: string, config: aws_db_parameter_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.family`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_parameter(): Reference<_aws_db_parameter_group__parameter[]> {
        return new Reference(`${this._name}.${this._id}.parameter`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_db_security_group__ingress {
    cidr?: rstring
    security_group_id?: rstring
    security_group_name?: rstring
    security_group_owner_id?: rstring
}

export interface aws_db_security_group_config {
    arn?: rstring
    description?: rstring
    ingress: _aws_db_security_group__ingress[]
    name: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_db_security_group implements Resource {
    config: aws_db_security_group_config
    private _is_data: boolean = false
    private _name: string = "aws_db_security_group"
    private _id: string;
    constructor(id: string, config: aws_db_security_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_ingress(): Reference<_aws_db_security_group__ingress[]> {
        return new Reference(`${this._name}.${this._id}.ingress`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_db_snapshot_config {
    allocated_storage?: rnumber
    availability_zone?: rstring
    db_instance_identifier: rstring
    db_snapshot_arn?: rstring
    db_snapshot_identifier: rstring
    encrypted?: rboolean
    engine?: rstring
    engine_version?: rstring
    iops?: rnumber
    kms_key_id?: rstring
    license_model?: rstring
    option_group_name?: rstring
    port?: rnumber
    snapshot_type?: rstring
    source_db_snapshot_identifier?: rstring
    source_region?: rstring
    status?: rstring
    storage_type?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_db_snapshot implements Resource {
    config: aws_db_snapshot_config
    private _is_data: boolean = false
    private _name: string = "aws_db_snapshot"
    private _id: string;
    constructor(id: string, config: aws_db_snapshot_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocated_storage(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.allocated_storage`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_db_instance_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_instance_identifier`)
    }
    get ref_db_snapshot_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_snapshot_arn`)
    }
    get ref_db_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_snapshot_identifier`)
    }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.encrypted`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_iops(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.iops`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_license_model(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.license_model`)
    }
    get ref_option_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.option_group_name`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_snapshot_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_type`)
    }
    get ref_source_db_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_db_snapshot_identifier`)
    }
    get ref_source_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_region`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_storage_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.storage_type`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_db_subnet_group_config {
    arn?: rstring
    description?: rstring
    name?: rstring
    name_prefix?: rstring
    subnet_ids: rstring[]
    tags?: {[propName: string]: rstring}
}

export class aws_db_subnet_group implements Resource {
    config: aws_db_subnet_group_config
    private _is_data: boolean = false
    private _name: string = "aws_db_subnet_group"
    private _id: string;
    constructor(id: string, config: aws_db_subnet_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_default_network_acl__egress {
    action: rstring
    cidr_block?: rstring
    from_port: rnumber
    icmp_code?: rnumber
    icmp_type?: rnumber
    ipv6_cidr_block?: rstring
    protocol: rstring
    rule_no: rnumber
    to_port: rnumber
}

export interface _aws_default_network_acl__ingress {
    action: rstring
    cidr_block?: rstring
    from_port: rnumber
    icmp_code?: rnumber
    icmp_type?: rnumber
    ipv6_cidr_block?: rstring
    protocol: rstring
    rule_no: rnumber
    to_port: rnumber
}

export interface aws_default_network_acl_config {
    default_network_acl_id: rstring
    egress?: _aws_default_network_acl__egress[]
    ingress?: _aws_default_network_acl__ingress[]
    owner_id?: rstring
    subnet_ids?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_default_network_acl implements Resource {
    config: aws_default_network_acl_config
    private _is_data: boolean = false
    private _name: string = "aws_default_network_acl"
    private _id: string;
    constructor(id: string, config: aws_default_network_acl_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_default_network_acl_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_network_acl_id`)
    }
    get ref_egress(): Reference<_aws_default_network_acl__egress[]> {
        return new Reference(`${this._name}.${this._id}.egress`)
    }
    get ref_ingress(): Reference<_aws_default_network_acl__ingress[]> {
        return new Reference(`${this._name}.${this._id}.ingress`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface _aws_default_route_table__route {
    cidr_block?: rstring
    egress_only_gateway_id?: rstring
    gateway_id?: rstring
    instance_id?: rstring
    ipv6_cidr_block?: rstring
    nat_gateway_id?: rstring
    network_interface_id?: rstring
    transit_gateway_id?: rstring
    vpc_peering_connection_id?: rstring
}

export interface aws_default_route_table_config {
    default_route_table_id: rstring
    owner_id?: rstring
    propagating_vgws?: rstring[]
    route?: _aws_default_route_table__route[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_default_route_table implements Resource {
    config: aws_default_route_table_config
    private _is_data: boolean = false
    private _name: string = "aws_default_route_table"
    private _id: string;
    constructor(id: string, config: aws_default_route_table_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_default_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_route_table_id`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_propagating_vgws(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.propagating_vgws`)
    }
    get ref_route(): Reference<_aws_default_route_table__route[]> {
        return new Reference(`${this._name}.${this._id}.route`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface _aws_default_security_group__egress {
    cidr_blocks?: rstring[]
    description?: rstring
    from_port: rnumber
    ipv6_cidr_blocks?: rstring[]
    prefix_list_ids?: rstring[]
    protocol: rstring
    security_groups?: rstring[]
    self?: rboolean
    to_port: rnumber
}

export interface _aws_default_security_group__ingress {
    cidr_blocks?: rstring[]
    description?: rstring
    from_port: rnumber
    ipv6_cidr_blocks?: rstring[]
    prefix_list_ids?: rstring[]
    protocol: rstring
    security_groups?: rstring[]
    self?: rboolean
    to_port: rnumber
}

export interface aws_default_security_group_config {
    arn?: rstring
    egress?: _aws_default_security_group__egress[]
    ingress?: _aws_default_security_group__ingress[]
    name?: rstring
    owner_id?: rstring
    revoke_rules_on_delete?: rboolean
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_default_security_group implements Resource {
    config: aws_default_security_group_config
    private _is_data: boolean = false
    private _name: string = "aws_default_security_group"
    private _id: string;
    constructor(id: string, config: aws_default_security_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_egress(): Reference<_aws_default_security_group__egress[]> {
        return new Reference(`${this._name}.${this._id}.egress`)
    }
    get ref_ingress(): Reference<_aws_default_security_group__ingress[]> {
        return new Reference(`${this._name}.${this._id}.ingress`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_revoke_rules_on_delete(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.revoke_rules_on_delete`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_default_subnet_config {
    arn?: rstring
    assign_ipv6_address_on_creation?: rboolean
    availability_zone: rstring
    availability_zone_id?: rstring
    cidr_block?: rstring
    ipv6_cidr_block?: rstring
    ipv6_cidr_block_association_id?: rstring
    map_public_ip_on_launch?: rboolean
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_default_subnet implements Resource {
    config: aws_default_subnet_config
    private _is_data: boolean = false
    private _name: string = "aws_default_subnet"
    private _id: string;
    constructor(id: string, config: aws_default_subnet_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_assign_ipv6_address_on_creation(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.assign_ipv6_address_on_creation`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_availability_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone_id`)
    }
    get ref_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cidr_block`)
    }
    get ref_ipv6_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_cidr_block`)
    }
    get ref_ipv6_cidr_block_association_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_cidr_block_association_id`)
    }
    get ref_map_public_ip_on_launch(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.map_public_ip_on_launch`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_default_vpc_config {
    arn?: rstring
    assign_generated_ipv6_cidr_block?: rboolean
    cidr_block?: rstring
    default_network_acl_id?: rstring
    default_route_table_id?: rstring
    default_security_group_id?: rstring
    dhcp_options_id?: rstring
    enable_classiclink?: rboolean
    enable_classiclink_dns_support?: rboolean
    enable_dns_hostnames?: rboolean
    enable_dns_support?: rboolean
    instance_tenancy?: rstring
    ipv6_association_id?: rstring
    ipv6_cidr_block?: rstring
    main_route_table_id?: rstring
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_default_vpc implements Resource {
    config: aws_default_vpc_config
    private _is_data: boolean = false
    private _name: string = "aws_default_vpc"
    private _id: string;
    constructor(id: string, config: aws_default_vpc_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_assign_generated_ipv6_cidr_block(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.assign_generated_ipv6_cidr_block`)
    }
    get ref_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cidr_block`)
    }
    get ref_default_network_acl_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_network_acl_id`)
    }
    get ref_default_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_route_table_id`)
    }
    get ref_default_security_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_security_group_id`)
    }
    get ref_dhcp_options_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dhcp_options_id`)
    }
    get ref_enable_classiclink(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_classiclink`)
    }
    get ref_enable_classiclink_dns_support(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_classiclink_dns_support`)
    }
    get ref_enable_dns_hostnames(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_dns_hostnames`)
    }
    get ref_enable_dns_support(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_dns_support`)
    }
    get ref_instance_tenancy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_tenancy`)
    }
    get ref_ipv6_association_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_association_id`)
    }
    get ref_ipv6_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_cidr_block`)
    }
    get ref_main_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.main_route_table_id`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_default_vpc_dhcp_options_config {
    domain_name?: rstring
    domain_name_servers?: rstring
    netbios_name_servers?: rstring[]
    netbios_node_type?: rstring
    ntp_servers?: rstring
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_default_vpc_dhcp_options implements Resource {
    config: aws_default_vpc_dhcp_options_config
    private _is_data: boolean = false
    private _name: string = "aws_default_vpc_dhcp_options"
    private _id: string;
    constructor(id: string, config: aws_default_vpc_dhcp_options_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name`)
    }
    get ref_domain_name_servers(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name_servers`)
    }
    get ref_netbios_name_servers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.netbios_name_servers`)
    }
    get ref_netbios_node_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.netbios_node_type`)
    }
    get ref_ntp_servers(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ntp_servers`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_devicefarm_project_config {
    arn?: rstring
    name: rstring
}

export class aws_devicefarm_project implements Resource {
    config: aws_devicefarm_project_config
    private _is_data: boolean = false
    private _name: string = "aws_devicefarm_project"
    private _id: string;
    constructor(id: string, config: aws_devicefarm_project_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_directory_service_conditional_forwarder_config {
    directory_id: rstring
    dns_ips: rstring[]
    remote_domain_name: rstring
}

export class aws_directory_service_conditional_forwarder implements Resource {
    config: aws_directory_service_conditional_forwarder_config
    private _is_data: boolean = false
    private _name: string = "aws_directory_service_conditional_forwarder"
    private _id: string;
    constructor(id: string, config: aws_directory_service_conditional_forwarder_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_directory_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.directory_id`)
    }
    get ref_dns_ips(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.dns_ips`)
    }
    get ref_remote_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.remote_domain_name`)
    }
}

export interface _aws_directory_service_directory__connect_settings {
    customer_dns_ips: rstring[]
    customer_username: rstring
    subnet_ids: rstring[]
    vpc_id: rstring
}

export interface _aws_directory_service_directory__vpc_settings {
    subnet_ids: rstring[]
    vpc_id: rstring
}

export interface aws_directory_service_directory_config {
    access_url?: rstring
    alias?: rstring
    connect_settings?: _aws_directory_service_directory__connect_settings[]
    description?: rstring
    dns_ip_addresses?: rstring[]
    edition?: rstring
    enable_sso?: rboolean
    name: rstring
    password: rstring
    security_group_id?: rstring
    short_name?: rstring
    size?: rstring
    tags?: {[propName: string]: rstring}
    type?: rstring
    vpc_settings?: _aws_directory_service_directory__vpc_settings[]
}

export class aws_directory_service_directory implements Resource {
    config: aws_directory_service_directory_config
    private _is_data: boolean = false
    private _name: string = "aws_directory_service_directory"
    private _id: string;
    constructor(id: string, config: aws_directory_service_directory_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.access_url`)
    }
    get ref_alias(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.alias`)
    }
    get ref_connect_settings(): Reference<_aws_directory_service_directory__connect_settings[]> {
        return new Reference(`${this._name}.${this._id}.connect_settings`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_dns_ip_addresses(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.dns_ip_addresses`)
    }
    get ref_edition(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.edition`)
    }
    get ref_enable_sso(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_sso`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.password`)
    }
    get ref_security_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.security_group_id`)
    }
    get ref_short_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.short_name`)
    }
    get ref_size(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.size`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
    get ref_vpc_settings(): Reference<_aws_directory_service_directory__vpc_settings[]> {
        return new Reference(`${this._name}.${this._id}.vpc_settings`)
    }
}

export interface __aws_dlm_lifecycle_policy__policy_details__schedule__create_rule {
    interval: rnumber
    interval_unit?: rstring
    times?: rstring[]
}

export interface __aws_dlm_lifecycle_policy__policy_details__schedule__retain_rule {
    count: rnumber
}

export interface __aws_dlm_lifecycle_policy__policy_details__schedule {
    copy_tags?: rboolean
    create_rule: __aws_dlm_lifecycle_policy__policy_details__schedule__create_rule[]
    name: rstring
    retain_rule: __aws_dlm_lifecycle_policy__policy_details__schedule__retain_rule[]
    tags_to_add?: {[propName: string]: rstring}
}

export interface _aws_dlm_lifecycle_policy__policy_details {
    resource_types: rstring[]
    schedule: __aws_dlm_lifecycle_policy__policy_details__schedule[]
    target_tags: {[propName: string]: rstring}
}

export interface aws_dlm_lifecycle_policy_config {
    description: rstring
    execution_role_arn: rstring
    policy_details: _aws_dlm_lifecycle_policy__policy_details[]
    state?: rstring
}

export class aws_dlm_lifecycle_policy implements Resource {
    config: aws_dlm_lifecycle_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_dlm_lifecycle_policy"
    private _id: string;
    constructor(id: string, config: aws_dlm_lifecycle_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_execution_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.execution_role_arn`)
    }
    get ref_policy_details(): Reference<_aws_dlm_lifecycle_policy__policy_details[]> {
        return new Reference(`${this._name}.${this._id}.policy_details`)
    }
    get ref_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state`)
    }
}

export interface aws_dms_certificate_config {
    certificate_arn?: rstring
    certificate_id: rstring
    certificate_pem?: rstring
    certificate_wallet?: rstring
}

export class aws_dms_certificate implements Resource {
    config: aws_dms_certificate_config
    private _is_data: boolean = false
    private _name: string = "aws_dms_certificate"
    private _id: string;
    constructor(id: string, config: aws_dms_certificate_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_arn`)
    }
    get ref_certificate_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_id`)
    }
    get ref_certificate_pem(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_pem`)
    }
    get ref_certificate_wallet(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_wallet`)
    }
}

export interface _aws_dms_endpoint__mongodb_settings {
    auth_mechanism?: rstring
    auth_source?: rstring
    auth_type?: rstring
    docs_to_investigate?: rstring
    extract_doc_id?: rstring
    nesting_level?: rstring
}

export interface _aws_dms_endpoint__s3_settings {
    bucket_folder?: rstring
    bucket_name?: rstring
    compression_type?: rstring
    csv_delimiter?: rstring
    csv_row_delimiter?: rstring
    external_table_definition?: rstring
    service_access_role_arn?: rstring
}

export interface aws_dms_endpoint_config {
    certificate_arn?: rstring
    database_name?: rstring
    endpoint_arn?: rstring
    endpoint_id: rstring
    endpoint_type: rstring
    engine_name: rstring
    extra_connection_attributes?: rstring
    kms_key_arn?: rstring
    mongodb_settings?: _aws_dms_endpoint__mongodb_settings[]
    password?: rstring
    port?: rnumber
    s3_settings?: _aws_dms_endpoint__s3_settings[]
    server_name?: rstring
    service_access_role?: rstring
    ssl_mode?: rstring
    tags?: {[propName: string]: rstring}
    username?: rstring
}

export class aws_dms_endpoint implements Resource {
    config: aws_dms_endpoint_config
    private _is_data: boolean = false
    private _name: string = "aws_dms_endpoint"
    private _id: string;
    constructor(id: string, config: aws_dms_endpoint_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_arn`)
    }
    get ref_database_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.database_name`)
    }
    get ref_endpoint_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint_arn`)
    }
    get ref_endpoint_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint_id`)
    }
    get ref_endpoint_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint_type`)
    }
    get ref_engine_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_name`)
    }
    get ref_extra_connection_attributes(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.extra_connection_attributes`)
    }
    get ref_kms_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_arn`)
    }
    get ref_mongodb_settings(): Reference<_aws_dms_endpoint__mongodb_settings[]> {
        return new Reference(`${this._name}.${this._id}.mongodb_settings`)
    }
    get ref_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.password`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_s3_settings(): Reference<_aws_dms_endpoint__s3_settings[]> {
        return new Reference(`${this._name}.${this._id}.s3_settings`)
    }
    get ref_server_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.server_name`)
    }
    get ref_service_access_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_access_role`)
    }
    get ref_ssl_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ssl_mode`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_username(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.username`)
    }
}

export interface aws_dms_replication_instance_config {
    allocated_storage?: rnumber
    apply_immediately?: rboolean
    auto_minor_version_upgrade?: rboolean
    availability_zone?: rstring
    engine_version?: rstring
    kms_key_arn?: rstring
    multi_az?: rboolean
    preferred_maintenance_window?: rstring
    publicly_accessible?: rboolean
    replication_instance_arn?: rstring
    replication_instance_class: rstring
    replication_instance_id: rstring
    replication_instance_private_ips?: rstring[]
    replication_instance_public_ips?: rstring[]
    replication_subnet_group_id?: rstring
    tags?: {[propName: string]: rstring}
    vpc_security_group_ids?: rstring[]
}

export class aws_dms_replication_instance implements Resource {
    config: aws_dms_replication_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_dms_replication_instance"
    private _id: string;
    constructor(id: string, config: aws_dms_replication_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocated_storage(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.allocated_storage`)
    }
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_auto_minor_version_upgrade(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_minor_version_upgrade`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_kms_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_arn`)
    }
    get ref_multi_az(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.multi_az`)
    }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_maintenance_window`)
    }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.publicly_accessible`)
    }
    get ref_replication_instance_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_instance_arn`)
    }
    get ref_replication_instance_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_instance_class`)
    }
    get ref_replication_instance_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_instance_id`)
    }
    get ref_replication_instance_private_ips(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.replication_instance_private_ips`)
    }
    get ref_replication_instance_public_ips(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.replication_instance_public_ips`)
    }
    get ref_replication_subnet_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_subnet_group_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_security_group_ids`)
    }
}

export interface aws_dms_replication_subnet_group_config {
    replication_subnet_group_arn?: rstring
    replication_subnet_group_description: rstring
    replication_subnet_group_id: rstring
    subnet_ids: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_dms_replication_subnet_group implements Resource {
    config: aws_dms_replication_subnet_group_config
    private _is_data: boolean = false
    private _name: string = "aws_dms_replication_subnet_group"
    private _id: string;
    constructor(id: string, config: aws_dms_replication_subnet_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_replication_subnet_group_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_subnet_group_arn`)
    }
    get ref_replication_subnet_group_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_subnet_group_description`)
    }
    get ref_replication_subnet_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_subnet_group_id`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_dms_replication_task_config {
    cdc_start_time?: rstring
    migration_type: rstring
    replication_instance_arn: rstring
    replication_task_arn?: rstring
    replication_task_id: rstring
    replication_task_settings?: rstring
    source_endpoint_arn: rstring
    table_mappings: rstring
    tags?: {[propName: string]: rstring}
    target_endpoint_arn: rstring
}

export class aws_dms_replication_task implements Resource {
    config: aws_dms_replication_task_config
    private _is_data: boolean = false
    private _name: string = "aws_dms_replication_task"
    private _id: string;
    constructor(id: string, config: aws_dms_replication_task_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cdc_start_time(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cdc_start_time`)
    }
    get ref_migration_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.migration_type`)
    }
    get ref_replication_instance_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_instance_arn`)
    }
    get ref_replication_task_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_task_arn`)
    }
    get ref_replication_task_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_task_id`)
    }
    get ref_replication_task_settings(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_task_settings`)
    }
    get ref_source_endpoint_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_endpoint_arn`)
    }
    get ref_table_mappings(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.table_mappings`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_target_endpoint_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_endpoint_arn`)
    }
}

export interface aws_docdb_cluster_config {
    apply_immediately?: rboolean
    arn?: rstring
    availability_zones?: rstring[]
    backup_retention_period?: rnumber
    cluster_identifier?: rstring
    cluster_identifier_prefix?: rstring
    cluster_members?: rstring[]
    cluster_resource_id?: rstring
    db_cluster_parameter_group_name?: rstring
    db_subnet_group_name?: rstring
    enabled_cloudwatch_logs_exports?: rstring[]
    endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    final_snapshot_identifier?: rstring
    hosted_zone_id?: rstring
    kms_key_id?: rstring
    master_password?: rstring
    master_username?: rstring
    port?: rnumber
    preferred_backup_window?: rstring
    preferred_maintenance_window?: rstring
    reader_endpoint?: rstring
    skip_final_snapshot?: rboolean
    snapshot_identifier?: rstring
    storage_encrypted?: rboolean
    tags?: {[propName: string]: rstring}
    vpc_security_group_ids?: rstring[]
}

export class aws_docdb_cluster implements Resource {
    config: aws_docdb_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_docdb_cluster"
    private _id: string;
    constructor(id: string, config: aws_docdb_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_backup_retention_period(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.backup_retention_period`)
    }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier`)
    }
    get ref_cluster_identifier_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier_prefix`)
    }
    get ref_cluster_members(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.cluster_members`)
    }
    get ref_cluster_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_resource_id`)
    }
    get ref_db_cluster_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_parameter_group_name`)
    }
    get ref_db_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_subnet_group_name`)
    }
    get ref_enabled_cloudwatch_logs_exports(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.enabled_cloudwatch_logs_exports`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_final_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.final_snapshot_identifier`)
    }
    get ref_hosted_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hosted_zone_id`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_master_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_password`)
    }
    get ref_master_username(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_username`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_preferred_backup_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_backup_window`)
    }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_maintenance_window`)
    }
    get ref_reader_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reader_endpoint`)
    }
    get ref_skip_final_snapshot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.skip_final_snapshot`)
    }
    get ref_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_identifier`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_security_group_ids`)
    }
}

export interface aws_docdb_cluster_instance_config {
    apply_immediately?: rboolean
    arn?: rstring
    auto_minor_version_upgrade?: rboolean
    availability_zone?: rstring
    cluster_identifier: rstring
    db_subnet_group_name?: rstring
    dbi_resource_id?: rstring
    endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    identifier?: rstring
    identifier_prefix?: rstring
    instance_class: rstring
    kms_key_id?: rstring
    port?: rnumber
    preferred_backup_window?: rstring
    preferred_maintenance_window?: rstring
    promotion_tier?: rnumber
    publicly_accessible?: rboolean
    storage_encrypted?: rboolean
    tags?: {[propName: string]: rstring}
    writer?: rboolean
}

export class aws_docdb_cluster_instance implements Resource {
    config: aws_docdb_cluster_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_docdb_cluster_instance"
    private _id: string;
    constructor(id: string, config: aws_docdb_cluster_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_auto_minor_version_upgrade(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_minor_version_upgrade`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier`)
    }
    get ref_db_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_subnet_group_name`)
    }
    get ref_dbi_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dbi_resource_id`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identifier`)
    }
    get ref_identifier_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identifier_prefix`)
    }
    get ref_instance_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_class`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_preferred_backup_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_backup_window`)
    }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_maintenance_window`)
    }
    get ref_promotion_tier(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.promotion_tier`)
    }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.publicly_accessible`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_writer(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.writer`)
    }
}

export interface _aws_docdb_cluster_parameter_group__parameter {
    apply_method?: rstring
    name: rstring
    value: rstring
}

export interface aws_docdb_cluster_parameter_group_config {
    arn?: rstring
    description?: rstring
    family: rstring
    name?: rstring
    name_prefix?: rstring
    parameter?: _aws_docdb_cluster_parameter_group__parameter[]
    tags?: {[propName: string]: rstring}
}

export class aws_docdb_cluster_parameter_group implements Resource {
    config: aws_docdb_cluster_parameter_group_config
    private _is_data: boolean = false
    private _name: string = "aws_docdb_cluster_parameter_group"
    private _id: string;
    constructor(id: string, config: aws_docdb_cluster_parameter_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.family`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_parameter(): Reference<_aws_docdb_cluster_parameter_group__parameter[]> {
        return new Reference(`${this._name}.${this._id}.parameter`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_docdb_cluster_snapshot_config {
    availability_zones?: rstring[]
    db_cluster_identifier: rstring
    db_cluster_snapshot_arn?: rstring
    db_cluster_snapshot_identifier: rstring
    engine?: rstring
    engine_version?: rstring
    kms_key_id?: rstring
    port?: rnumber
    snapshot_type?: rstring
    source_db_cluster_snapshot_arn?: rstring
    status?: rstring
    storage_encrypted?: rboolean
    vpc_id?: rstring
}

export class aws_docdb_cluster_snapshot implements Resource {
    config: aws_docdb_cluster_snapshot_config
    private _is_data: boolean = false
    private _name: string = "aws_docdb_cluster_snapshot"
    private _id: string;
    constructor(id: string, config: aws_docdb_cluster_snapshot_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_db_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_identifier`)
    }
    get ref_db_cluster_snapshot_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_snapshot_arn`)
    }
    get ref_db_cluster_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_snapshot_identifier`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_snapshot_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_type`)
    }
    get ref_source_db_cluster_snapshot_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_db_cluster_snapshot_arn`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_docdb_subnet_group_config {
    arn?: rstring
    description?: rstring
    name?: rstring
    name_prefix?: rstring
    subnet_ids: rstring[]
    tags?: {[propName: string]: rstring}
}

export class aws_docdb_subnet_group implements Resource {
    config: aws_docdb_subnet_group_config
    private _is_data: boolean = false
    private _name: string = "aws_docdb_subnet_group"
    private _id: string;
    constructor(id: string, config: aws_docdb_subnet_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_dx_bgp_peer_config {
    address_family: rstring
    amazon_address?: rstring
    bgp_asn: rnumber
    bgp_auth_key?: rstring
    bgp_status?: rstring
    customer_address?: rstring
    virtual_interface_id: rstring
}

export class aws_dx_bgp_peer implements Resource {
    config: aws_dx_bgp_peer_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_bgp_peer"
    private _id: string;
    constructor(id: string, config: aws_dx_bgp_peer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_address_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.address_family`)
    }
    get ref_amazon_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.amazon_address`)
    }
    get ref_bgp_asn(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.bgp_asn`)
    }
    get ref_bgp_auth_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bgp_auth_key`)
    }
    get ref_bgp_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bgp_status`)
    }
    get ref_customer_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_address`)
    }
    get ref_virtual_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.virtual_interface_id`)
    }
}

export interface aws_dx_connection_config {
    arn?: rstring
    bandwidth: rstring
    jumbo_frame_capable?: rboolean
    location: rstring
    name: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_dx_connection implements Resource {
    config: aws_dx_connection_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_connection"
    private _id: string;
    constructor(id: string, config: aws_dx_connection_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_bandwidth(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bandwidth`)
    }
    get ref_jumbo_frame_capable(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.jumbo_frame_capable`)
    }
    get ref_location(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.location`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_dx_connection_association_config {
    connection_id: rstring
    lag_id: rstring
}

export class aws_dx_connection_association implements Resource {
    config: aws_dx_connection_association_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_connection_association"
    private _id: string;
    constructor(id: string, config: aws_dx_connection_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connection_id`)
    }
    get ref_lag_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.lag_id`)
    }
}

export interface aws_dx_gateway_config {
    amazon_side_asn: rstring
    name: rstring
}

export class aws_dx_gateway implements Resource {
    config: aws_dx_gateway_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_gateway"
    private _id: string;
    constructor(id: string, config: aws_dx_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_amazon_side_asn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.amazon_side_asn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_dx_gateway_association_config {
    dx_gateway_id: rstring
    vpn_gateway_id: rstring
}

export class aws_dx_gateway_association implements Resource {
    config: aws_dx_gateway_association_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_gateway_association"
    private _id: string;
    constructor(id: string, config: aws_dx_gateway_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dx_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dx_gateway_id`)
    }
    get ref_vpn_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpn_gateway_id`)
    }
}

export interface aws_dx_hosted_private_virtual_interface_config {
    address_family: rstring
    amazon_address?: rstring
    arn?: rstring
    bgp_asn: rnumber
    bgp_auth_key?: rstring
    connection_id: rstring
    customer_address?: rstring
    jumbo_frame_capable?: rboolean
    mtu?: rnumber
    name: rstring
    owner_account_id: rstring
    vlan: rnumber
}

export class aws_dx_hosted_private_virtual_interface implements Resource {
    config: aws_dx_hosted_private_virtual_interface_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_hosted_private_virtual_interface"
    private _id: string;
    constructor(id: string, config: aws_dx_hosted_private_virtual_interface_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_address_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.address_family`)
    }
    get ref_amazon_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.amazon_address`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_bgp_asn(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.bgp_asn`)
    }
    get ref_bgp_auth_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bgp_auth_key`)
    }
    get ref_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connection_id`)
    }
    get ref_customer_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_address`)
    }
    get ref_jumbo_frame_capable(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.jumbo_frame_capable`)
    }
    get ref_mtu(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.mtu`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_owner_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_account_id`)
    }
    get ref_vlan(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.vlan`)
    }
}

export interface aws_dx_hosted_private_virtual_interface_accepter_config {
    arn?: rstring
    dx_gateway_id?: rstring
    tags?: {[propName: string]: rstring}
    virtual_interface_id: rstring
    vpn_gateway_id?: rstring
}

export class aws_dx_hosted_private_virtual_interface_accepter implements Resource {
    config: aws_dx_hosted_private_virtual_interface_accepter_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_hosted_private_virtual_interface_accepter"
    private _id: string;
    constructor(id: string, config: aws_dx_hosted_private_virtual_interface_accepter_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_dx_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dx_gateway_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_virtual_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.virtual_interface_id`)
    }
    get ref_vpn_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpn_gateway_id`)
    }
}

export interface aws_dx_hosted_public_virtual_interface_config {
    address_family: rstring
    amazon_address?: rstring
    arn?: rstring
    bgp_asn: rnumber
    bgp_auth_key?: rstring
    connection_id: rstring
    customer_address?: rstring
    name: rstring
    owner_account_id: rstring
    route_filter_prefixes: rstring[]
    vlan: rnumber
}

export class aws_dx_hosted_public_virtual_interface implements Resource {
    config: aws_dx_hosted_public_virtual_interface_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_hosted_public_virtual_interface"
    private _id: string;
    constructor(id: string, config: aws_dx_hosted_public_virtual_interface_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_address_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.address_family`)
    }
    get ref_amazon_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.amazon_address`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_bgp_asn(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.bgp_asn`)
    }
    get ref_bgp_auth_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bgp_auth_key`)
    }
    get ref_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connection_id`)
    }
    get ref_customer_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_address`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_owner_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_account_id`)
    }
    get ref_route_filter_prefixes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.route_filter_prefixes`)
    }
    get ref_vlan(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.vlan`)
    }
}

export interface aws_dx_hosted_public_virtual_interface_accepter_config {
    arn?: rstring
    tags?: {[propName: string]: rstring}
    virtual_interface_id: rstring
}

export class aws_dx_hosted_public_virtual_interface_accepter implements Resource {
    config: aws_dx_hosted_public_virtual_interface_accepter_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_hosted_public_virtual_interface_accepter"
    private _id: string;
    constructor(id: string, config: aws_dx_hosted_public_virtual_interface_accepter_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_virtual_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.virtual_interface_id`)
    }
}

export interface aws_dx_lag_config {
    arn?: rstring
    connections_bandwidth: rstring
    force_destroy?: rboolean
    location: rstring
    name: rstring
    number_of_connections?: rnumber
    tags?: {[propName: string]: rstring}
}

export class aws_dx_lag implements Resource {
    config: aws_dx_lag_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_lag"
    private _id: string;
    constructor(id: string, config: aws_dx_lag_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_connections_bandwidth(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connections_bandwidth`)
    }
    get ref_force_destroy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_destroy`)
    }
    get ref_location(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.location`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_number_of_connections(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.number_of_connections`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_dx_private_virtual_interface_config {
    address_family: rstring
    amazon_address?: rstring
    arn?: rstring
    bgp_asn: rnumber
    bgp_auth_key?: rstring
    connection_id: rstring
    customer_address?: rstring
    dx_gateway_id?: rstring
    jumbo_frame_capable?: rboolean
    mtu?: rnumber
    name: rstring
    tags?: {[propName: string]: rstring}
    vlan: rnumber
    vpn_gateway_id?: rstring
}

export class aws_dx_private_virtual_interface implements Resource {
    config: aws_dx_private_virtual_interface_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_private_virtual_interface"
    private _id: string;
    constructor(id: string, config: aws_dx_private_virtual_interface_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_address_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.address_family`)
    }
    get ref_amazon_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.amazon_address`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_bgp_asn(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.bgp_asn`)
    }
    get ref_bgp_auth_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bgp_auth_key`)
    }
    get ref_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connection_id`)
    }
    get ref_customer_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_address`)
    }
    get ref_dx_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dx_gateway_id`)
    }
    get ref_jumbo_frame_capable(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.jumbo_frame_capable`)
    }
    get ref_mtu(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.mtu`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vlan(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.vlan`)
    }
    get ref_vpn_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpn_gateway_id`)
    }
}

export interface aws_dx_public_virtual_interface_config {
    address_family: rstring
    amazon_address?: rstring
    arn?: rstring
    bgp_asn: rnumber
    bgp_auth_key?: rstring
    connection_id: rstring
    customer_address?: rstring
    name: rstring
    route_filter_prefixes: rstring[]
    tags?: {[propName: string]: rstring}
    vlan: rnumber
}

export class aws_dx_public_virtual_interface implements Resource {
    config: aws_dx_public_virtual_interface_config
    private _is_data: boolean = false
    private _name: string = "aws_dx_public_virtual_interface"
    private _id: string;
    constructor(id: string, config: aws_dx_public_virtual_interface_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_address_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.address_family`)
    }
    get ref_amazon_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.amazon_address`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_bgp_asn(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.bgp_asn`)
    }
    get ref_bgp_auth_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bgp_auth_key`)
    }
    get ref_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connection_id`)
    }
    get ref_customer_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_address`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_route_filter_prefixes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.route_filter_prefixes`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vlan(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.vlan`)
    }
}

export interface _aws_dynamodb_global_table__replica {
    region_name: rstring
}

export interface aws_dynamodb_global_table_config {
    arn?: rstring
    name: rstring
    replica: _aws_dynamodb_global_table__replica[]
}

export class aws_dynamodb_global_table implements Resource {
    config: aws_dynamodb_global_table_config
    private _is_data: boolean = false
    private _name: string = "aws_dynamodb_global_table"
    private _id: string;
    constructor(id: string, config: aws_dynamodb_global_table_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_replica(): Reference<_aws_dynamodb_global_table__replica[]> {
        return new Reference(`${this._name}.${this._id}.replica`)
    }
}

export interface _aws_dynamodb_table__attribute {
    name: rstring
    type: rstring
}

export interface _aws_dynamodb_table__global_secondary_index {
    hash_key: rstring
    name: rstring
    non_key_attributes?: rstring[]
    projection_type: rstring
    range_key?: rstring
    read_capacity?: rnumber
    write_capacity?: rnumber
}

export interface _aws_dynamodb_table__local_secondary_index {
    name: rstring
    non_key_attributes?: rstring[]
    projection_type: rstring
    range_key: rstring
}

export interface _aws_dynamodb_table__point_in_time_recovery {
    enabled: rboolean
}

export interface _aws_dynamodb_table__server_side_encryption {
    enabled: rboolean
}

export interface _aws_dynamodb_table__ttl {
    attribute_name: rstring
    enabled: rboolean
}

export interface aws_dynamodb_table_config {
    arn?: rstring
    attribute: _aws_dynamodb_table__attribute[]
    billing_mode?: rstring
    global_secondary_index?: _aws_dynamodb_table__global_secondary_index[]
    hash_key: rstring
    local_secondary_index?: _aws_dynamodb_table__local_secondary_index[]
    name: rstring
    point_in_time_recovery?: _aws_dynamodb_table__point_in_time_recovery[]
    range_key?: rstring
    read_capacity?: rnumber
    server_side_encryption?: _aws_dynamodb_table__server_side_encryption[]
    stream_arn?: rstring
    stream_enabled?: rboolean
    stream_label?: rstring
    stream_view_type?: rstring
    tags?: {[propName: string]: rstring}
    ttl?: _aws_dynamodb_table__ttl[]
    write_capacity?: rnumber
}

export class aws_dynamodb_table implements Resource {
    config: aws_dynamodb_table_config
    private _is_data: boolean = false
    private _name: string = "aws_dynamodb_table"
    private _id: string;
    constructor(id: string, config: aws_dynamodb_table_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_attribute(): Reference<_aws_dynamodb_table__attribute[]> {
        return new Reference(`${this._name}.${this._id}.attribute`)
    }
    get ref_billing_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.billing_mode`)
    }
    get ref_global_secondary_index(): Reference<_aws_dynamodb_table__global_secondary_index[]> {
        return new Reference(`${this._name}.${this._id}.global_secondary_index`)
    }
    get ref_hash_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hash_key`)
    }
    get ref_local_secondary_index(): Reference<_aws_dynamodb_table__local_secondary_index[]> {
        return new Reference(`${this._name}.${this._id}.local_secondary_index`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_point_in_time_recovery(): Reference<_aws_dynamodb_table__point_in_time_recovery[]> {
        return new Reference(`${this._name}.${this._id}.point_in_time_recovery`)
    }
    get ref_range_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.range_key`)
    }
    get ref_read_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.read_capacity`)
    }
    get ref_server_side_encryption(): Reference<_aws_dynamodb_table__server_side_encryption[]> {
        return new Reference(`${this._name}.${this._id}.server_side_encryption`)
    }
    get ref_stream_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stream_arn`)
    }
    get ref_stream_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.stream_enabled`)
    }
    get ref_stream_label(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stream_label`)
    }
    get ref_stream_view_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stream_view_type`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_ttl(): Reference<_aws_dynamodb_table__ttl[]> {
        return new Reference(`${this._name}.${this._id}.ttl`)
    }
    get ref_write_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.write_capacity`)
    }
}

export interface aws_dynamodb_table_item_config {
    hash_key: rstring
    item: rstring
    range_key?: rstring
    table_name: rstring
}

export class aws_dynamodb_table_item implements Resource {
    config: aws_dynamodb_table_item_config
    private _is_data: boolean = false
    private _name: string = "aws_dynamodb_table_item"
    private _id: string;
    constructor(id: string, config: aws_dynamodb_table_item_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_hash_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hash_key`)
    }
    get ref_item(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.item`)
    }
    get ref_range_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.range_key`)
    }
    get ref_table_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.table_name`)
    }
}

export interface aws_ebs_snapshot_config {
    data_encryption_key_id?: rstring
    description?: rstring
    encrypted?: rboolean
    kms_key_id?: rstring
    owner_alias?: rstring
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
    volume_id: rstring
    volume_size?: rnumber
}

export class aws_ebs_snapshot implements Resource {
    config: aws_ebs_snapshot_config
    private _is_data: boolean = false
    private _name: string = "aws_ebs_snapshot"
    private _id: string;
    constructor(id: string, config: aws_ebs_snapshot_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_data_encryption_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.data_encryption_key_id`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.encrypted`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_owner_alias(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_alias`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_volume_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.volume_id`)
    }
    get ref_volume_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.volume_size`)
    }
}

export interface aws_ebs_snapshot_copy_config {
    data_encryption_key_id?: rstring
    description?: rstring
    encrypted?: rboolean
    kms_key_id?: rstring
    owner_alias?: rstring
    owner_id?: rstring
    source_region: rstring
    source_snapshot_id: rstring
    tags?: {[propName: string]: rstring}
    volume_id?: rstring
    volume_size?: rnumber
}

export class aws_ebs_snapshot_copy implements Resource {
    config: aws_ebs_snapshot_copy_config
    private _is_data: boolean = false
    private _name: string = "aws_ebs_snapshot_copy"
    private _id: string;
    constructor(id: string, config: aws_ebs_snapshot_copy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_data_encryption_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.data_encryption_key_id`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.encrypted`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_owner_alias(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_alias`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_source_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_region`)
    }
    get ref_source_snapshot_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_snapshot_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_volume_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.volume_id`)
    }
    get ref_volume_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.volume_size`)
    }
}

export interface aws_ebs_volume_config {
    arn?: rstring
    availability_zone: rstring
    encrypted?: rboolean
    iops?: rnumber
    kms_key_id?: rstring
    size?: rnumber
    snapshot_id?: rstring
    tags?: {[propName: string]: rstring}
    type?: rstring
}

export class aws_ebs_volume implements Resource {
    config: aws_ebs_volume_config
    private _is_data: boolean = false
    private _name: string = "aws_ebs_volume"
    private _id: string;
    constructor(id: string, config: aws_ebs_volume_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.encrypted`)
    }
    get ref_iops(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.iops`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.size`)
    }
    get ref_snapshot_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_ec2_capacity_reservation_config {
    availability_zone: rstring
    ebs_optimized?: rboolean
    end_date?: rstring
    end_date_type?: rstring
    ephemeral_storage?: rboolean
    instance_count: rnumber
    instance_match_criteria?: rstring
    instance_platform: rstring
    instance_type: rstring
    tags?: {[propName: string]: rstring}
    tenancy?: rstring
}

export class aws_ec2_capacity_reservation implements Resource {
    config: aws_ec2_capacity_reservation_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_capacity_reservation"
    private _id: string;
    constructor(id: string, config: aws_ec2_capacity_reservation_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_ebs_optimized(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ebs_optimized`)
    }
    get ref_end_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.end_date`)
    }
    get ref_end_date_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.end_date_type`)
    }
    get ref_ephemeral_storage(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ephemeral_storage`)
    }
    get ref_instance_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_count`)
    }
    get ref_instance_match_criteria(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_match_criteria`)
    }
    get ref_instance_platform(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_platform`)
    }
    get ref_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_type`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_tenancy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tenancy`)
    }
}

export interface _aws_ec2_client_vpn_endpoint__authentication_options {
    active_directory_id?: rstring
    root_certificate_chain_arn?: rstring
    type: rstring
}

export interface _aws_ec2_client_vpn_endpoint__connection_log_options {
    cloudwatch_log_group?: rstring
    cloudwatch_log_stream?: rstring
    enabled: rboolean
}

export interface aws_ec2_client_vpn_endpoint_config {
    authentication_options: _aws_ec2_client_vpn_endpoint__authentication_options[]
    client_cidr_block: rstring
    connection_log_options: _aws_ec2_client_vpn_endpoint__connection_log_options[]
    description?: rstring
    dns_name?: rstring
    dns_servers?: rstring[]
    server_certificate_arn: rstring
    status?: rstring
    transport_protocol?: rstring
}

export class aws_ec2_client_vpn_endpoint implements Resource {
    config: aws_ec2_client_vpn_endpoint_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_client_vpn_endpoint"
    private _id: string;
    constructor(id: string, config: aws_ec2_client_vpn_endpoint_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_authentication_options(): Reference<_aws_ec2_client_vpn_endpoint__authentication_options[]> {
        return new Reference(`${this._name}.${this._id}.authentication_options`)
    }
    get ref_client_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.client_cidr_block`)
    }
    get ref_connection_log_options(): Reference<_aws_ec2_client_vpn_endpoint__connection_log_options[]> {
        return new Reference(`${this._name}.${this._id}.connection_log_options`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_dns_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dns_name`)
    }
    get ref_dns_servers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.dns_servers`)
    }
    get ref_server_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.server_certificate_arn`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_transport_protocol(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transport_protocol`)
    }
}

export interface aws_ec2_client_vpn_network_association_config {
    client_vpn_endpoint_id: rstring
    security_groups?: rstring[]
    status?: rstring
    subnet_id: rstring
    vpc_id?: rstring
}

export class aws_ec2_client_vpn_network_association implements Resource {
    config: aws_ec2_client_vpn_network_association_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_client_vpn_network_association"
    private _id: string;
    constructor(id: string, config: aws_ec2_client_vpn_network_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_client_vpn_endpoint_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.client_vpn_endpoint_id`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface __aws_ec2_fleet__launch_template_config__launch_template_specification {
    launch_template_id?: rstring
    launch_template_name?: rstring
    version: rstring
}

export interface __aws_ec2_fleet__launch_template_config__override {
    availability_zone?: rstring
    instance_type?: rstring
    max_price?: rstring
    priority?: rnumber
    subnet_id?: rstring
    weighted_capacity?: rnumber
}

export interface _aws_ec2_fleet__launch_template_config {
    launch_template_specification: __aws_ec2_fleet__launch_template_config__launch_template_specification[]
    override?: __aws_ec2_fleet__launch_template_config__override[]
}

export interface _aws_ec2_fleet__on_demand_options {
    allocation_strategy?: rstring
}

export interface _aws_ec2_fleet__spot_options {
    allocation_strategy?: rstring
    instance_interruption_behavior?: rstring
    instance_pools_to_use_count?: rnumber
}

export interface _aws_ec2_fleet__target_capacity_specification {
    default_target_capacity_type: rstring
    on_demand_target_capacity?: rnumber
    spot_target_capacity?: rnumber
    total_target_capacity: rnumber
}

export interface aws_ec2_fleet_config {
    excess_capacity_termination_policy?: rstring
    launch_template_config: _aws_ec2_fleet__launch_template_config[]
    on_demand_options?: _aws_ec2_fleet__on_demand_options[]
    replace_unhealthy_instances?: rboolean
    spot_options?: _aws_ec2_fleet__spot_options[]
    tags?: {[propName: string]: rstring}
    target_capacity_specification: _aws_ec2_fleet__target_capacity_specification[]
    terminate_instances?: rboolean
    terminate_instances_with_expiration?: rboolean
    type?: rstring
}

export class aws_ec2_fleet implements Resource {
    config: aws_ec2_fleet_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_fleet"
    private _id: string;
    constructor(id: string, config: aws_ec2_fleet_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_excess_capacity_termination_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.excess_capacity_termination_policy`)
    }
    get ref_launch_template_config(): Reference<_aws_ec2_fleet__launch_template_config[]> {
        return new Reference(`${this._name}.${this._id}.launch_template_config`)
    }
    get ref_on_demand_options(): Reference<_aws_ec2_fleet__on_demand_options[]> {
        return new Reference(`${this._name}.${this._id}.on_demand_options`)
    }
    get ref_replace_unhealthy_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.replace_unhealthy_instances`)
    }
    get ref_spot_options(): Reference<_aws_ec2_fleet__spot_options[]> {
        return new Reference(`${this._name}.${this._id}.spot_options`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_target_capacity_specification(): Reference<_aws_ec2_fleet__target_capacity_specification[]> {
        return new Reference(`${this._name}.${this._id}.target_capacity_specification`)
    }
    get ref_terminate_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.terminate_instances`)
    }
    get ref_terminate_instances_with_expiration(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.terminate_instances_with_expiration`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_ec2_transit_gateway_config {
    amazon_side_asn?: rnumber
    arn?: rstring
    association_default_route_table_id?: rstring
    auto_accept_shared_attachments?: rstring
    default_route_table_association?: rstring
    default_route_table_propagation?: rstring
    description?: rstring
    dns_support?: rstring
    owner_id?: rstring
    propagation_default_route_table_id?: rstring
    tags?: {[propName: string]: rstring}
    vpn_ecmp_support?: rstring
}

export class aws_ec2_transit_gateway implements Resource {
    config: aws_ec2_transit_gateway_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_transit_gateway"
    private _id: string;
    constructor(id: string, config: aws_ec2_transit_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_amazon_side_asn(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.amazon_side_asn`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_association_default_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.association_default_route_table_id`)
    }
    get ref_auto_accept_shared_attachments(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.auto_accept_shared_attachments`)
    }
    get ref_default_route_table_association(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_route_table_association`)
    }
    get ref_default_route_table_propagation(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_route_table_propagation`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_dns_support(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dns_support`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_propagation_default_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.propagation_default_route_table_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpn_ecmp_support(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpn_ecmp_support`)
    }
}

export interface aws_ec2_transit_gateway_route_config {
    destination_cidr_block: rstring
    transit_gateway_attachment_id: rstring
    transit_gateway_route_table_id: rstring
}

export class aws_ec2_transit_gateway_route implements Resource {
    config: aws_ec2_transit_gateway_route_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_transit_gateway_route"
    private _id: string;
    constructor(id: string, config: aws_ec2_transit_gateway_route_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_destination_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_cidr_block`)
    }
    get ref_transit_gateway_attachment_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_attachment_id`)
    }
    get ref_transit_gateway_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_route_table_id`)
    }
}

export interface aws_ec2_transit_gateway_route_table_config {
    default_association_route_table?: rboolean
    default_propagation_route_table?: rboolean
    tags?: {[propName: string]: rstring}
    transit_gateway_id: rstring
}

export class aws_ec2_transit_gateway_route_table implements Resource {
    config: aws_ec2_transit_gateway_route_table_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_transit_gateway_route_table"
    private _id: string;
    constructor(id: string, config: aws_ec2_transit_gateway_route_table_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_default_association_route_table(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.default_association_route_table`)
    }
    get ref_default_propagation_route_table(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.default_propagation_route_table`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_transit_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_id`)
    }
}

export interface aws_ec2_transit_gateway_route_table_association_config {
    resource_id?: rstring
    resource_type?: rstring
    transit_gateway_attachment_id: rstring
    transit_gateway_route_table_id: rstring
}

export class aws_ec2_transit_gateway_route_table_association implements Resource {
    config: aws_ec2_transit_gateway_route_table_association_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_transit_gateway_route_table_association"
    private _id: string;
    constructor(id: string, config: aws_ec2_transit_gateway_route_table_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_resource_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_type`)
    }
    get ref_transit_gateway_attachment_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_attachment_id`)
    }
    get ref_transit_gateway_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_route_table_id`)
    }
}

export interface aws_ec2_transit_gateway_route_table_propagation_config {
    resource_id?: rstring
    resource_type?: rstring
    transit_gateway_attachment_id: rstring
    transit_gateway_route_table_id: rstring
}

export class aws_ec2_transit_gateway_route_table_propagation implements Resource {
    config: aws_ec2_transit_gateway_route_table_propagation_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_transit_gateway_route_table_propagation"
    private _id: string;
    constructor(id: string, config: aws_ec2_transit_gateway_route_table_propagation_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_id`)
    }
    get ref_resource_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_type`)
    }
    get ref_transit_gateway_attachment_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_attachment_id`)
    }
    get ref_transit_gateway_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_route_table_id`)
    }
}

export interface aws_ec2_transit_gateway_vpc_attachment_config {
    dns_support?: rstring
    ipv6_support?: rstring
    subnet_ids: rstring[]
    tags?: {[propName: string]: rstring}
    transit_gateway_default_route_table_association?: rboolean
    transit_gateway_default_route_table_propagation?: rboolean
    transit_gateway_id: rstring
    vpc_id: rstring
    vpc_owner_id?: rstring
}

export class aws_ec2_transit_gateway_vpc_attachment implements Resource {
    config: aws_ec2_transit_gateway_vpc_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_ec2_transit_gateway_vpc_attachment"
    private _id: string;
    constructor(id: string, config: aws_ec2_transit_gateway_vpc_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dns_support(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dns_support`)
    }
    get ref_ipv6_support(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_support`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_transit_gateway_default_route_table_association(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_default_route_table_association`)
    }
    get ref_transit_gateway_default_route_table_propagation(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_default_route_table_propagation`)
    }
    get ref_transit_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_id`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
    get ref_vpc_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_owner_id`)
    }
}

export interface aws_ecr_lifecycle_policy_config {
    policy: rstring
    registry_id?: rstring
    repository: rstring
}

export class aws_ecr_lifecycle_policy implements Resource {
    config: aws_ecr_lifecycle_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_ecr_lifecycle_policy"
    private _id: string;
    constructor(id: string, config: aws_ecr_lifecycle_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_registry_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.registry_id`)
    }
    get ref_repository(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.repository`)
    }
}

export interface aws_ecr_repository_config {
    arn?: rstring
    name: rstring
    registry_id?: rstring
    repository_url?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_ecr_repository implements Resource {
    config: aws_ecr_repository_config
    private _is_data: boolean = false
    private _name: string = "aws_ecr_repository"
    private _id: string;
    constructor(id: string, config: aws_ecr_repository_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_registry_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.registry_id`)
    }
    get ref_repository_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.repository_url`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_ecr_repository_policy_config {
    policy: rstring
    registry_id?: rstring
    repository: rstring
}

export class aws_ecr_repository_policy implements Resource {
    config: aws_ecr_repository_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_ecr_repository_policy"
    private _id: string;
    constructor(id: string, config: aws_ecr_repository_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_registry_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.registry_id`)
    }
    get ref_repository(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.repository`)
    }
}

export interface aws_ecs_cluster_config {
    arn?: rstring
    name: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_ecs_cluster implements Resource {
    config: aws_ecs_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_ecs_cluster"
    private _id: string;
    constructor(id: string, config: aws_ecs_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_ecs_service__deployment_controller {
    type?: rstring
}

export interface _aws_ecs_service__load_balancer {
    container_name: rstring
    container_port: rnumber
    elb_name?: rstring
    target_group_arn?: rstring
}

export interface _aws_ecs_service__network_configuration {
    assign_public_ip?: rboolean
    security_groups?: rstring[]
    subnets: rstring[]
}

export interface _aws_ecs_service__ordered_placement_strategy {
    field?: rstring
    type: rstring
}

export interface _aws_ecs_service__placement_constraints {
    expression?: rstring
    type: rstring
}

export interface _aws_ecs_service__placement_strategy {
    field?: rstring
    type: rstring
}

export interface _aws_ecs_service__service_registries {
    container_name?: rstring
    container_port?: rnumber
    port?: rnumber
    registry_arn: rstring
}

export interface aws_ecs_service_config {
    cluster?: rstring
    deployment_controller?: _aws_ecs_service__deployment_controller[]
    deployment_maximum_percent?: rnumber
    deployment_minimum_healthy_percent?: rnumber
    desired_count?: rnumber
    enable_ecs_managed_tags?: rboolean
    health_check_grace_period_seconds?: rnumber
    iam_role?: rstring
    launch_type?: rstring
    load_balancer?: _aws_ecs_service__load_balancer[]
    name: rstring
    network_configuration?: _aws_ecs_service__network_configuration[]
    ordered_placement_strategy?: _aws_ecs_service__ordered_placement_strategy[]
    placement_constraints?: _aws_ecs_service__placement_constraints[]
    placement_strategy?: _aws_ecs_service__placement_strategy[]
    platform_version?: rstring
    propagate_tags?: rstring
    scheduling_strategy?: rstring
    service_registries?: _aws_ecs_service__service_registries[]
    tags?: {[propName: string]: rstring}
    task_definition: rstring
}

export class aws_ecs_service implements Resource {
    config: aws_ecs_service_config
    private _is_data: boolean = false
    private _name: string = "aws_ecs_service"
    private _id: string;
    constructor(id: string, config: aws_ecs_service_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cluster(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster`)
    }
    get ref_deployment_controller(): Reference<_aws_ecs_service__deployment_controller[]> {
        return new Reference(`${this._name}.${this._id}.deployment_controller`)
    }
    get ref_deployment_maximum_percent(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.deployment_maximum_percent`)
    }
    get ref_deployment_minimum_healthy_percent(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.deployment_minimum_healthy_percent`)
    }
    get ref_desired_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.desired_count`)
    }
    get ref_enable_ecs_managed_tags(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_ecs_managed_tags`)
    }
    get ref_health_check_grace_period_seconds(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.health_check_grace_period_seconds`)
    }
    get ref_iam_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_role`)
    }
    get ref_launch_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.launch_type`)
    }
    get ref_load_balancer(): Reference<_aws_ecs_service__load_balancer[]> {
        return new Reference(`${this._name}.${this._id}.load_balancer`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_network_configuration(): Reference<_aws_ecs_service__network_configuration[]> {
        return new Reference(`${this._name}.${this._id}.network_configuration`)
    }
    get ref_ordered_placement_strategy(): Reference<_aws_ecs_service__ordered_placement_strategy[]> {
        return new Reference(`${this._name}.${this._id}.ordered_placement_strategy`)
    }
    get ref_placement_constraints(): Reference<_aws_ecs_service__placement_constraints[]> {
        return new Reference(`${this._name}.${this._id}.placement_constraints`)
    }
    get ref_placement_strategy(): Reference<_aws_ecs_service__placement_strategy[]> {
        return new Reference(`${this._name}.${this._id}.placement_strategy`)
    }
    get ref_platform_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.platform_version`)
    }
    get ref_propagate_tags(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.propagate_tags`)
    }
    get ref_scheduling_strategy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.scheduling_strategy`)
    }
    get ref_service_registries(): Reference<_aws_ecs_service__service_registries[]> {
        return new Reference(`${this._name}.${this._id}.service_registries`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_task_definition(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.task_definition`)
    }
}

export interface _aws_ecs_task_definition__placement_constraints {
    expression?: rstring
    type: rstring
}

export interface __aws_ecs_task_definition__volume__docker_volume_configuration {
    autoprovision?: rboolean
    driver?: rstring
    driver_opts?: {[propName: string]: rstring}
    labels?: {[propName: string]: rstring}
    scope?: rstring
}

export interface _aws_ecs_task_definition__volume {
    docker_volume_configuration?: __aws_ecs_task_definition__volume__docker_volume_configuration[]
    host_path?: rstring
    name: rstring
}

export interface aws_ecs_task_definition_config {
    arn?: rstring
    container_definitions: rstring
    cpu?: rstring
    execution_role_arn?: rstring
    family: rstring
    ipc_mode?: rstring
    memory?: rstring
    network_mode?: rstring
    pid_mode?: rstring
    placement_constraints?: _aws_ecs_task_definition__placement_constraints[]
    requires_compatibilities?: rstring[]
    revision?: rnumber
    tags?: {[propName: string]: rstring}
    task_role_arn?: rstring
    volume?: _aws_ecs_task_definition__volume[]
}

export class aws_ecs_task_definition implements Resource {
    config: aws_ecs_task_definition_config
    private _is_data: boolean = false
    private _name: string = "aws_ecs_task_definition"
    private _id: string;
    constructor(id: string, config: aws_ecs_task_definition_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_container_definitions(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.container_definitions`)
    }
    get ref_cpu(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cpu`)
    }
    get ref_execution_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.execution_role_arn`)
    }
    get ref_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.family`)
    }
    get ref_ipc_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipc_mode`)
    }
    get ref_memory(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.memory`)
    }
    get ref_network_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_mode`)
    }
    get ref_pid_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.pid_mode`)
    }
    get ref_placement_constraints(): Reference<_aws_ecs_task_definition__placement_constraints[]> {
        return new Reference(`${this._name}.${this._id}.placement_constraints`)
    }
    get ref_requires_compatibilities(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.requires_compatibilities`)
    }
    get ref_revision(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.revision`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_task_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.task_role_arn`)
    }
    get ref_volume(): Reference<_aws_ecs_task_definition__volume[]> {
        return new Reference(`${this._name}.${this._id}.volume`)
    }
}

export interface aws_efs_file_system_config {
    arn?: rstring
    creation_token?: rstring
    dns_name?: rstring
    encrypted?: rboolean
    kms_key_id?: rstring
    performance_mode?: rstring
    provisioned_throughput_in_mibps?: rnumber
    reference_name?: rstring
    tags?: {[propName: string]: rstring}
    throughput_mode?: rstring
}

export class aws_efs_file_system implements Resource {
    config: aws_efs_file_system_config
    private _is_data: boolean = false
    private _name: string = "aws_efs_file_system"
    private _id: string;
    constructor(id: string, config: aws_efs_file_system_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_creation_token(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.creation_token`)
    }
    get ref_dns_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dns_name`)
    }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.encrypted`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_performance_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.performance_mode`)
    }
    get ref_provisioned_throughput_in_mibps(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.provisioned_throughput_in_mibps`)
    }
    get ref_reference_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reference_name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_throughput_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.throughput_mode`)
    }
}

export interface aws_efs_mount_target_config {
    dns_name?: rstring
    file_system_arn?: rstring
    file_system_id: rstring
    ip_address?: rstring
    network_interface_id?: rstring
    security_groups?: rstring[]
    subnet_id: rstring
}

export class aws_efs_mount_target implements Resource {
    config: aws_efs_mount_target_config
    private _is_data: boolean = false
    private _name: string = "aws_efs_mount_target"
    private _id: string;
    constructor(id: string, config: aws_efs_mount_target_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dns_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dns_name`)
    }
    get ref_file_system_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.file_system_arn`)
    }
    get ref_file_system_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.file_system_id`)
    }
    get ref_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ip_address`)
    }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface_id`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
}

export interface aws_egress_only_internet_gateway_config {
    vpc_id: rstring
}

export class aws_egress_only_internet_gateway implements Resource {
    config: aws_egress_only_internet_gateway_config
    private _is_data: boolean = false
    private _name: string = "aws_egress_only_internet_gateway"
    private _id: string;
    constructor(id: string, config: aws_egress_only_internet_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_eip_config {
    allocation_id?: rstring
    associate_with_private_ip?: rstring
    association_id?: rstring
    domain?: rstring
    instance?: rstring
    network_interface?: rstring
    private_ip?: rstring
    public_ip?: rstring
    public_ipv4_pool?: rstring
    tags?: {[propName: string]: rstring}
    vpc?: rboolean
}

export class aws_eip implements Resource {
    config: aws_eip_config
    private _is_data: boolean = false
    private _name: string = "aws_eip"
    private _id: string;
    constructor(id: string, config: aws_eip_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocation_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.allocation_id`)
    }
    get ref_associate_with_private_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.associate_with_private_ip`)
    }
    get ref_association_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.association_id`)
    }
    get ref_domain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain`)
    }
    get ref_instance(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance`)
    }
    get ref_network_interface(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface`)
    }
    get ref_private_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_ip`)
    }
    get ref_public_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_ip`)
    }
    get ref_public_ipv4_pool(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_ipv4_pool`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.vpc`)
    }
}

export interface aws_eip_association_config {
    allocation_id?: rstring
    allow_reassociation?: rboolean
    instance_id?: rstring
    network_interface_id?: rstring
    private_ip_address?: rstring
    public_ip?: rstring
}

export class aws_eip_association implements Resource {
    config: aws_eip_association_config
    private _is_data: boolean = false
    private _name: string = "aws_eip_association"
    private _id: string;
    constructor(id: string, config: aws_eip_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocation_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.allocation_id`)
    }
    get ref_allow_reassociation(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_reassociation`)
    }
    get ref_instance_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_id`)
    }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface_id`)
    }
    get ref_private_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_ip_address`)
    }
    get ref_public_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_ip`)
    }
}

export interface _aws_eks_cluster__certificate_authority {
    data?: rstring
}

export interface _aws_eks_cluster__vpc_config {
    security_group_ids?: rstring[]
    subnet_ids: rstring[]
    vpc_id?: rstring
}

export interface aws_eks_cluster_config {
    arn?: rstring
    certificate_authority?: _aws_eks_cluster__certificate_authority[]
    created_at?: rstring
    endpoint?: rstring
    name: rstring
    platform_version?: rstring
    role_arn: rstring
    version?: rstring
    vpc_config: _aws_eks_cluster__vpc_config[]
}

export class aws_eks_cluster implements Resource {
    config: aws_eks_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_eks_cluster"
    private _id: string;
    constructor(id: string, config: aws_eks_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_certificate_authority(): Reference<_aws_eks_cluster__certificate_authority[]> {
        return new Reference(`${this._name}.${this._id}.certificate_authority`)
    }
    get ref_created_at(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_at`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_platform_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.platform_version`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version`)
    }
    get ref_vpc_config(): Reference<_aws_eks_cluster__vpc_config[]> {
        return new Reference(`${this._name}.${this._id}.vpc_config`)
    }
}

export interface _aws_elastic_beanstalk_application__appversion_lifecycle {
    delete_source_from_s3?: rboolean
    max_age_in_days?: rnumber
    max_count?: rnumber
    service_role: rstring
}

export interface aws_elastic_beanstalk_application_config {
    appversion_lifecycle?: _aws_elastic_beanstalk_application__appversion_lifecycle[]
    description?: rstring
    name: rstring
}

export class aws_elastic_beanstalk_application implements Resource {
    config: aws_elastic_beanstalk_application_config
    private _is_data: boolean = false
    private _name: string = "aws_elastic_beanstalk_application"
    private _id: string;
    constructor(id: string, config: aws_elastic_beanstalk_application_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_appversion_lifecycle(): Reference<_aws_elastic_beanstalk_application__appversion_lifecycle[]> {
        return new Reference(`${this._name}.${this._id}.appversion_lifecycle`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_elastic_beanstalk_application_version_config {
    application: rstring
    bucket: rstring
    description?: rstring
    force_delete?: rboolean
    key: rstring
    name: rstring
}

export class aws_elastic_beanstalk_application_version implements Resource {
    config: aws_elastic_beanstalk_application_version_config
    private _is_data: boolean = false
    private _name: string = "aws_elastic_beanstalk_application_version"
    private _id: string;
    constructor(id: string, config: aws_elastic_beanstalk_application_version_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application`)
    }
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_force_delete(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_delete`)
    }
    get ref_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_elastic_beanstalk_configuration_template__setting {
    name: rstring
    namespace: rstring
    resource?: rstring
    value: rstring
}

export interface aws_elastic_beanstalk_configuration_template_config {
    application: rstring
    description?: rstring
    environment_id?: rstring
    name: rstring
    setting?: _aws_elastic_beanstalk_configuration_template__setting[]
    solution_stack_name?: rstring
}

export class aws_elastic_beanstalk_configuration_template implements Resource {
    config: aws_elastic_beanstalk_configuration_template_config
    private _is_data: boolean = false
    private _name: string = "aws_elastic_beanstalk_configuration_template"
    private _id: string;
    constructor(id: string, config: aws_elastic_beanstalk_configuration_template_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_environment_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.environment_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_setting(): Reference<_aws_elastic_beanstalk_configuration_template__setting[]> {
        return new Reference(`${this._name}.${this._id}.setting`)
    }
    get ref_solution_stack_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.solution_stack_name`)
    }
}

export interface _aws_elastic_beanstalk_environment__all_settings {
    name: rstring
    namespace: rstring
    resource?: rstring
    value: rstring
}

export interface _aws_elastic_beanstalk_environment__setting {
    name: rstring
    namespace: rstring
    resource?: rstring
    value: rstring
}

export interface aws_elastic_beanstalk_environment_config {
    all_settings?: _aws_elastic_beanstalk_environment__all_settings[]
    application: rstring
    arn?: rstring
    autoscaling_groups?: rstring[]
    cname?: rstring
    cname_prefix?: rstring
    description?: rstring
    instances?: rstring[]
    launch_configurations?: rstring[]
    load_balancers?: rstring[]
    name: rstring
    platform_arn?: rstring
    poll_interval?: rstring
    queues?: rstring[]
    setting?: _aws_elastic_beanstalk_environment__setting[]
    solution_stack_name?: rstring
    tags?: {[propName: string]: rstring}
    template_name?: rstring
    tier?: rstring
    triggers?: rstring[]
    version_label?: rstring
    wait_for_ready_timeout?: rstring
}

export class aws_elastic_beanstalk_environment implements Resource {
    config: aws_elastic_beanstalk_environment_config
    private _is_data: boolean = false
    private _name: string = "aws_elastic_beanstalk_environment"
    private _id: string;
    constructor(id: string, config: aws_elastic_beanstalk_environment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_all_settings(): Reference<_aws_elastic_beanstalk_environment__all_settings[]> {
        return new Reference(`${this._name}.${this._id}.all_settings`)
    }
    get ref_application(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_autoscaling_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.autoscaling_groups`)
    }
    get ref_cname(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cname`)
    }
    get ref_cname_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cname_prefix`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_instances(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.instances`)
    }
    get ref_launch_configurations(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.launch_configurations`)
    }
    get ref_load_balancers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.load_balancers`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_platform_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.platform_arn`)
    }
    get ref_poll_interval(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.poll_interval`)
    }
    get ref_queues(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.queues`)
    }
    get ref_setting(): Reference<_aws_elastic_beanstalk_environment__setting[]> {
        return new Reference(`${this._name}.${this._id}.setting`)
    }
    get ref_solution_stack_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.solution_stack_name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_template_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.template_name`)
    }
    get ref_tier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tier`)
    }
    get ref_triggers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.triggers`)
    }
    get ref_version_label(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version_label`)
    }
    get ref_wait_for_ready_timeout(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.wait_for_ready_timeout`)
    }
}

export interface _aws_elasticache_cluster__cache_nodes {
    address?: rstring
    availability_zone?: rstring
    id?: rstring
    port?: rnumber
}

export interface aws_elasticache_cluster_config {
    apply_immediately?: rboolean
    availability_zone?: rstring
    availability_zones?: rstring[]
    az_mode?: rstring
    cache_nodes?: _aws_elasticache_cluster__cache_nodes[]
    cluster_address?: rstring
    cluster_id: rstring
    configuration_endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    maintenance_window?: rstring
    node_type?: rstring
    notification_topic_arn?: rstring
    num_cache_nodes?: rnumber
    parameter_group_name?: rstring
    port?: rnumber
    preferred_availability_zones?: rstring[]
    replication_group_id?: rstring
    security_group_ids?: rstring[]
    security_group_names?: rstring[]
    snapshot_arns?: rstring[]
    snapshot_name?: rstring
    snapshot_retention_limit?: rnumber
    snapshot_window?: rstring
    subnet_group_name?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_elasticache_cluster implements Resource {
    config: aws_elasticache_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_elasticache_cluster"
    private _id: string;
    constructor(id: string, config: aws_elasticache_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_az_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.az_mode`)
    }
    get ref_cache_nodes(): Reference<_aws_elasticache_cluster__cache_nodes[]> {
        return new Reference(`${this._name}.${this._id}.cache_nodes`)
    }
    get ref_cluster_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_address`)
    }
    get ref_cluster_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_id`)
    }
    get ref_configuration_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configuration_endpoint`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.maintenance_window`)
    }
    get ref_node_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.node_type`)
    }
    get ref_notification_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.notification_topic_arn`)
    }
    get ref_num_cache_nodes(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.num_cache_nodes`)
    }
    get ref_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.parameter_group_name`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_preferred_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.preferred_availability_zones`)
    }
    get ref_replication_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_group_id`)
    }
    get ref_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_ids`)
    }
    get ref_security_group_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_names`)
    }
    get ref_snapshot_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.snapshot_arns`)
    }
    get ref_snapshot_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_name`)
    }
    get ref_snapshot_retention_limit(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.snapshot_retention_limit`)
    }
    get ref_snapshot_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_window`)
    }
    get ref_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_group_name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_elasticache_parameter_group__parameter {
    name: rstring
    value: rstring
}

export interface aws_elasticache_parameter_group_config {
    description?: rstring
    family: rstring
    name: rstring
    parameter?: _aws_elasticache_parameter_group__parameter[]
}

export class aws_elasticache_parameter_group implements Resource {
    config: aws_elasticache_parameter_group_config
    private _is_data: boolean = false
    private _name: string = "aws_elasticache_parameter_group"
    private _id: string;
    constructor(id: string, config: aws_elasticache_parameter_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.family`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_parameter(): Reference<_aws_elasticache_parameter_group__parameter[]> {
        return new Reference(`${this._name}.${this._id}.parameter`)
    }
}

export interface _aws_elasticache_replication_group__cluster_mode {
    num_node_groups: rnumber
    replicas_per_node_group: rnumber
}

export interface aws_elasticache_replication_group_config {
    apply_immediately?: rboolean
    at_rest_encryption_enabled?: rboolean
    auth_token?: rstring
    auto_minor_version_upgrade?: rboolean
    automatic_failover_enabled?: rboolean
    availability_zones?: rstring[]
    cluster_mode?: _aws_elasticache_replication_group__cluster_mode[]
    configuration_endpoint_address?: rstring
    engine?: rstring
    engine_version?: rstring
    maintenance_window?: rstring
    member_clusters?: rstring[]
    node_type?: rstring
    notification_topic_arn?: rstring
    number_cache_clusters?: rnumber
    parameter_group_name?: rstring
    port?: rnumber
    primary_endpoint_address?: rstring
    replication_group_description: rstring
    replication_group_id: rstring
    security_group_ids?: rstring[]
    security_group_names?: rstring[]
    snapshot_arns?: rstring[]
    snapshot_name?: rstring
    snapshot_retention_limit?: rnumber
    snapshot_window?: rstring
    subnet_group_name?: rstring
    tags?: {[propName: string]: rstring}
    transit_encryption_enabled?: rboolean
}

export class aws_elasticache_replication_group implements Resource {
    config: aws_elasticache_replication_group_config
    private _is_data: boolean = false
    private _name: string = "aws_elasticache_replication_group"
    private _id: string;
    constructor(id: string, config: aws_elasticache_replication_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_at_rest_encryption_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.at_rest_encryption_enabled`)
    }
    get ref_auth_token(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.auth_token`)
    }
    get ref_auto_minor_version_upgrade(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_minor_version_upgrade`)
    }
    get ref_automatic_failover_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.automatic_failover_enabled`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_cluster_mode(): Reference<_aws_elasticache_replication_group__cluster_mode[]> {
        return new Reference(`${this._name}.${this._id}.cluster_mode`)
    }
    get ref_configuration_endpoint_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configuration_endpoint_address`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.maintenance_window`)
    }
    get ref_member_clusters(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.member_clusters`)
    }
    get ref_node_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.node_type`)
    }
    get ref_notification_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.notification_topic_arn`)
    }
    get ref_number_cache_clusters(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.number_cache_clusters`)
    }
    get ref_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.parameter_group_name`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_primary_endpoint_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.primary_endpoint_address`)
    }
    get ref_replication_group_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_group_description`)
    }
    get ref_replication_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_group_id`)
    }
    get ref_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_ids`)
    }
    get ref_security_group_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_names`)
    }
    get ref_snapshot_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.snapshot_arns`)
    }
    get ref_snapshot_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_name`)
    }
    get ref_snapshot_retention_limit(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.snapshot_retention_limit`)
    }
    get ref_snapshot_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_window`)
    }
    get ref_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_group_name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_transit_encryption_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.transit_encryption_enabled`)
    }
}

export interface aws_elasticache_security_group_config {
    description?: rstring
    name: rstring
    security_group_names: rstring[]
}

export class aws_elasticache_security_group implements Resource {
    config: aws_elasticache_security_group_config
    private _is_data: boolean = false
    private _name: string = "aws_elasticache_security_group"
    private _id: string;
    constructor(id: string, config: aws_elasticache_security_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_security_group_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_names`)
    }
}

export interface aws_elasticache_subnet_group_config {
    description?: rstring
    name: rstring
    subnet_ids: rstring[]
}

export class aws_elasticache_subnet_group implements Resource {
    config: aws_elasticache_subnet_group_config
    private _is_data: boolean = false
    private _name: string = "aws_elasticache_subnet_group"
    private _id: string;
    constructor(id: string, config: aws_elasticache_subnet_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
}

export interface _aws_elasticsearch_domain__cluster_config {
    dedicated_master_count?: rnumber
    dedicated_master_enabled?: rboolean
    dedicated_master_type?: rstring
    instance_count?: rnumber
    instance_type?: rstring
    zone_awareness_enabled?: rboolean
}

export interface _aws_elasticsearch_domain__cognito_options {
    enabled?: rboolean
    identity_pool_id: rstring
    role_arn: rstring
    user_pool_id: rstring
}

export interface _aws_elasticsearch_domain__ebs_options {
    ebs_enabled: rboolean
    iops?: rnumber
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_elasticsearch_domain__encrypt_at_rest {
    enabled: rboolean
    kms_key_id?: rstring
}

export interface _aws_elasticsearch_domain__log_publishing_options {
    cloudwatch_log_group_arn: rstring
    enabled?: rboolean
    log_type: rstring
}

export interface _aws_elasticsearch_domain__node_to_node_encryption {
    enabled: rboolean
}

export interface _aws_elasticsearch_domain__snapshot_options {
    automated_snapshot_start_hour: rnumber
}

export interface _aws_elasticsearch_domain__vpc_options {
    availability_zones?: rstring[]
    security_group_ids?: rstring[]
    subnet_ids?: rstring[]
    vpc_id?: rstring
}

export interface aws_elasticsearch_domain_config {
    access_policies?: rstring
    advanced_options?: {[propName: string]: rstring}
    arn?: rstring
    cluster_config?: _aws_elasticsearch_domain__cluster_config[]
    cognito_options?: _aws_elasticsearch_domain__cognito_options[]
    domain_id?: rstring
    domain_name: rstring
    ebs_options?: _aws_elasticsearch_domain__ebs_options[]
    elasticsearch_version?: rstring
    encrypt_at_rest?: _aws_elasticsearch_domain__encrypt_at_rest[]
    endpoint?: rstring
    kibana_endpoint?: rstring
    log_publishing_options?: _aws_elasticsearch_domain__log_publishing_options[]
    node_to_node_encryption?: _aws_elasticsearch_domain__node_to_node_encryption[]
    snapshot_options?: _aws_elasticsearch_domain__snapshot_options[]
    tags?: {[propName: string]: rstring}
    vpc_options?: _aws_elasticsearch_domain__vpc_options[]
}

export class aws_elasticsearch_domain implements Resource {
    config: aws_elasticsearch_domain_config
    private _is_data: boolean = false
    private _name: string = "aws_elasticsearch_domain"
    private _id: string;
    constructor(id: string, config: aws_elasticsearch_domain_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_policies(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.access_policies`)
    }
    get ref_advanced_options(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.advanced_options`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_cluster_config(): Reference<_aws_elasticsearch_domain__cluster_config[]> {
        return new Reference(`${this._name}.${this._id}.cluster_config`)
    }
    get ref_cognito_options(): Reference<_aws_elasticsearch_domain__cognito_options[]> {
        return new Reference(`${this._name}.${this._id}.cognito_options`)
    }
    get ref_domain_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_id`)
    }
    get ref_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name`)
    }
    get ref_ebs_options(): Reference<_aws_elasticsearch_domain__ebs_options[]> {
        return new Reference(`${this._name}.${this._id}.ebs_options`)
    }
    get ref_elasticsearch_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elasticsearch_version`)
    }
    get ref_encrypt_at_rest(): Reference<_aws_elasticsearch_domain__encrypt_at_rest[]> {
        return new Reference(`${this._name}.${this._id}.encrypt_at_rest`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_kibana_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kibana_endpoint`)
    }
    get ref_log_publishing_options(): Reference<_aws_elasticsearch_domain__log_publishing_options[]> {
        return new Reference(`${this._name}.${this._id}.log_publishing_options`)
    }
    get ref_node_to_node_encryption(): Reference<_aws_elasticsearch_domain__node_to_node_encryption[]> {
        return new Reference(`${this._name}.${this._id}.node_to_node_encryption`)
    }
    get ref_snapshot_options(): Reference<_aws_elasticsearch_domain__snapshot_options[]> {
        return new Reference(`${this._name}.${this._id}.snapshot_options`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_options(): Reference<_aws_elasticsearch_domain__vpc_options[]> {
        return new Reference(`${this._name}.${this._id}.vpc_options`)
    }
}

export interface aws_elasticsearch_domain_policy_config {
    access_policies: rstring
    domain_name: rstring
}

export class aws_elasticsearch_domain_policy implements Resource {
    config: aws_elasticsearch_domain_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_elasticsearch_domain_policy"
    private _id: string;
    constructor(id: string, config: aws_elasticsearch_domain_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_policies(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.access_policies`)
    }
    get ref_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name`)
    }
}

export interface _aws_elastictranscoder_pipeline__content_config {
    bucket?: rstring
    storage_class?: rstring
}

export interface _aws_elastictranscoder_pipeline__content_config_permissions {
    access?: rstring[]
    grantee?: rstring
    grantee_type?: rstring
}

export interface _aws_elastictranscoder_pipeline__notifications {
    completed?: rstring
    error?: rstring
    progressing?: rstring
    warning?: rstring
}

export interface _aws_elastictranscoder_pipeline__thumbnail_config {
    bucket?: rstring
    storage_class?: rstring
}

export interface _aws_elastictranscoder_pipeline__thumbnail_config_permissions {
    access?: rstring[]
    grantee?: rstring
    grantee_type?: rstring
}

export interface aws_elastictranscoder_pipeline_config {
    arn?: rstring
    aws_kms_key_arn?: rstring
    content_config?: _aws_elastictranscoder_pipeline__content_config[]
    content_config_permissions?: _aws_elastictranscoder_pipeline__content_config_permissions[]
    input_bucket: rstring
    name?: rstring
    notifications?: _aws_elastictranscoder_pipeline__notifications[]
    output_bucket?: rstring
    role: rstring
    thumbnail_config?: _aws_elastictranscoder_pipeline__thumbnail_config[]
    thumbnail_config_permissions?: _aws_elastictranscoder_pipeline__thumbnail_config_permissions[]
}

export class aws_elastictranscoder_pipeline implements Resource {
    config: aws_elastictranscoder_pipeline_config
    private _is_data: boolean = false
    private _name: string = "aws_elastictranscoder_pipeline"
    private _id: string;
    constructor(id: string, config: aws_elastictranscoder_pipeline_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_aws_kms_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.aws_kms_key_arn`)
    }
    get ref_content_config(): Reference<_aws_elastictranscoder_pipeline__content_config[]> {
        return new Reference(`${this._name}.${this._id}.content_config`)
    }
    get ref_content_config_permissions(): Reference<_aws_elastictranscoder_pipeline__content_config_permissions[]> {
        return new Reference(`${this._name}.${this._id}.content_config_permissions`)
    }
    get ref_input_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.input_bucket`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_notifications(): Reference<_aws_elastictranscoder_pipeline__notifications[]> {
        return new Reference(`${this._name}.${this._id}.notifications`)
    }
    get ref_output_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.output_bucket`)
    }
    get ref_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role`)
    }
    get ref_thumbnail_config(): Reference<_aws_elastictranscoder_pipeline__thumbnail_config[]> {
        return new Reference(`${this._name}.${this._id}.thumbnail_config`)
    }
    get ref_thumbnail_config_permissions(): Reference<_aws_elastictranscoder_pipeline__thumbnail_config_permissions[]> {
        return new Reference(`${this._name}.${this._id}.thumbnail_config_permissions`)
    }
}

export interface _aws_elastictranscoder_preset__audio {
    audio_packing_mode?: rstring
    bit_rate?: rstring
    channels?: rstring
    codec?: rstring
    sample_rate?: rstring
}

export interface _aws_elastictranscoder_preset__audio_codec_options {
    bit_depth?: rstring
    bit_order?: rstring
    profile?: rstring
    signed?: rstring
}

export interface _aws_elastictranscoder_preset__thumbnails {
    aspect_ratio?: rstring
    format?: rstring
    interval?: rstring
    max_height?: rstring
    max_width?: rstring
    padding_policy?: rstring
    resolution?: rstring
    sizing_policy?: rstring
}

export interface _aws_elastictranscoder_preset__video {
    aspect_ratio?: rstring
    bit_rate?: rstring
    codec?: rstring
    display_aspect_ratio?: rstring
    fixed_gop?: rstring
    frame_rate?: rstring
    keyframes_max_dist?: rstring
    max_frame_rate?: rstring
    max_height?: rstring
    max_width?: rstring
    padding_policy?: rstring
    resolution?: rstring
    sizing_policy?: rstring
}

export interface _aws_elastictranscoder_preset__video_watermarks {
    horizontal_align?: rstring
    horizontal_offset?: rstring
    id?: rstring
    max_height?: rstring
    max_width?: rstring
    opacity?: rstring
    sizing_policy?: rstring
    target?: rstring
    vertical_align?: rstring
    vertical_offset?: rstring
}

export interface aws_elastictranscoder_preset_config {
    arn?: rstring
    audio?: _aws_elastictranscoder_preset__audio[]
    audio_codec_options?: _aws_elastictranscoder_preset__audio_codec_options[]
    container: rstring
    description?: rstring
    name?: rstring
    thumbnails?: _aws_elastictranscoder_preset__thumbnails[]
    type?: rstring
    video?: _aws_elastictranscoder_preset__video[]
    video_codec_options?: {[propName: string]: rstring}
    video_watermarks?: _aws_elastictranscoder_preset__video_watermarks[]
}

export class aws_elastictranscoder_preset implements Resource {
    config: aws_elastictranscoder_preset_config
    private _is_data: boolean = false
    private _name: string = "aws_elastictranscoder_preset"
    private _id: string;
    constructor(id: string, config: aws_elastictranscoder_preset_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_audio(): Reference<_aws_elastictranscoder_preset__audio[]> {
        return new Reference(`${this._name}.${this._id}.audio`)
    }
    get ref_audio_codec_options(): Reference<_aws_elastictranscoder_preset__audio_codec_options[]> {
        return new Reference(`${this._name}.${this._id}.audio_codec_options`)
    }
    get ref_container(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.container`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_thumbnails(): Reference<_aws_elastictranscoder_preset__thumbnails[]> {
        return new Reference(`${this._name}.${this._id}.thumbnails`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
    get ref_video(): Reference<_aws_elastictranscoder_preset__video[]> {
        return new Reference(`${this._name}.${this._id}.video`)
    }
    get ref_video_codec_options(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.video_codec_options`)
    }
    get ref_video_watermarks(): Reference<_aws_elastictranscoder_preset__video_watermarks[]> {
        return new Reference(`${this._name}.${this._id}.video_watermarks`)
    }
}

export interface _aws_elb__access_logs {
    bucket: rstring
    bucket_prefix?: rstring
    enabled?: rboolean
    interval?: rnumber
}

export interface _aws_elb__health_check {
    healthy_threshold: rnumber
    interval: rnumber
    target: rstring
    timeout: rnumber
    unhealthy_threshold: rnumber
}

export interface _aws_elb__listener {
    instance_port: rnumber
    instance_protocol: rstring
    lb_port: rnumber
    lb_protocol: rstring
    ssl_certificate_id?: rstring
}

export interface aws_elb_config {
    access_logs?: _aws_elb__access_logs[]
    arn?: rstring
    availability_zones?: rstring[]
    connection_draining?: rboolean
    connection_draining_timeout?: rnumber
    cross_zone_load_balancing?: rboolean
    dns_name?: rstring
    health_check?: _aws_elb__health_check[]
    idle_timeout?: rnumber
    instances?: rstring[]
    internal?: rboolean
    listener: _aws_elb__listener[]
    name?: rstring
    name_prefix?: rstring
    security_groups?: rstring[]
    source_security_group?: rstring
    source_security_group_id?: rstring
    subnets?: rstring[]
    tags?: {[propName: string]: rstring}
    zone_id?: rstring
}

export class aws_elb implements Resource {
    config: aws_elb_config
    private _is_data: boolean = false
    private _name: string = "aws_elb"
    private _id: string;
    constructor(id: string, config: aws_elb_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_logs(): Reference<_aws_elb__access_logs[]> {
        return new Reference(`${this._name}.${this._id}.access_logs`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_connection_draining(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.connection_draining`)
    }
    get ref_connection_draining_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.connection_draining_timeout`)
    }
    get ref_cross_zone_load_balancing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.cross_zone_load_balancing`)
    }
    get ref_dns_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dns_name`)
    }
    get ref_health_check(): Reference<_aws_elb__health_check[]> {
        return new Reference(`${this._name}.${this._id}.health_check`)
    }
    get ref_idle_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.idle_timeout`)
    }
    get ref_instances(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.instances`)
    }
    get ref_internal(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.internal`)
    }
    get ref_listener(): Reference<_aws_elb__listener[]> {
        return new Reference(`${this._name}.${this._id}.listener`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_source_security_group(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_security_group`)
    }
    get ref_source_security_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_security_group_id`)
    }
    get ref_subnets(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnets`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.zone_id`)
    }
}

export interface aws_elb_attachment_config {
    elb: rstring
    instance: rstring
}

export class aws_elb_attachment implements Resource {
    config: aws_elb_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_elb_attachment"
    private _id: string;
    constructor(id: string, config: aws_elb_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_elb(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elb`)
    }
    get ref_instance(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance`)
    }
}

export interface _aws_emr_cluster__bootstrap_action {
    args?: rstring[]
    name: rstring
    path: rstring
}

export interface _aws_emr_cluster__ec2_attributes {
    additional_master_security_groups?: rstring
    additional_slave_security_groups?: rstring
    emr_managed_master_security_group?: rstring
    emr_managed_slave_security_group?: rstring
    instance_profile: rstring
    key_name?: rstring
    service_access_security_group?: rstring
    subnet_id?: rstring
}

export interface __aws_emr_cluster__instance_group__ebs_config {
    iops?: rnumber
    size: rnumber
    type: rstring
    volumes_per_instance?: rnumber
}

export interface _aws_emr_cluster__instance_group {
    autoscaling_policy?: rstring
    bid_price?: rstring
    ebs_config?: __aws_emr_cluster__instance_group__ebs_config[]
    id?: rstring
    instance_count?: rnumber
    instance_role: rstring
    instance_type: rstring
    name?: rstring
}

export interface _aws_emr_cluster__kerberos_attributes {
    ad_domain_join_password?: rstring
    ad_domain_join_user?: rstring
    cross_realm_trust_principal_password?: rstring
    kdc_admin_password: rstring
    realm: rstring
}

export interface __aws_emr_cluster__step__hadoop_jar_step {
    args?: rstring[]
    jar: rstring
    main_class?: rstring
    properties?: {[propName: string]: rstring}
}

export interface _aws_emr_cluster__step {
    action_on_failure: rstring
    hadoop_jar_step: __aws_emr_cluster__step__hadoop_jar_step[]
    name: rstring
}

export interface aws_emr_cluster_config {
    additional_info?: rstring
    applications?: rstring[]
    autoscaling_role?: rstring
    bootstrap_action?: _aws_emr_cluster__bootstrap_action[]
    cluster_state?: rstring
    configurations?: rstring
    configurations_json?: rstring
    core_instance_count?: rnumber
    core_instance_type?: rstring
    custom_ami_id?: rstring
    ebs_root_volume_size?: rnumber
    ec2_attributes?: _aws_emr_cluster__ec2_attributes[]
    instance_group?: _aws_emr_cluster__instance_group[]
    keep_job_flow_alive_when_no_steps?: rboolean
    kerberos_attributes?: _aws_emr_cluster__kerberos_attributes[]
    log_uri?: rstring
    master_instance_type?: rstring
    master_public_dns?: rstring
    name: rstring
    release_label: rstring
    scale_down_behavior?: rstring
    security_configuration?: rstring
    service_role: rstring
    step?: _aws_emr_cluster__step[]
    tags?: {[propName: string]: rstring}
    termination_protection?: rboolean
    visible_to_all_users?: rboolean
}

export class aws_emr_cluster implements Resource {
    config: aws_emr_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_emr_cluster"
    private _id: string;
    constructor(id: string, config: aws_emr_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_additional_info(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.additional_info`)
    }
    get ref_applications(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.applications`)
    }
    get ref_autoscaling_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.autoscaling_role`)
    }
    get ref_bootstrap_action(): Reference<_aws_emr_cluster__bootstrap_action[]> {
        return new Reference(`${this._name}.${this._id}.bootstrap_action`)
    }
    get ref_cluster_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_state`)
    }
    get ref_configurations(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configurations`)
    }
    get ref_configurations_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configurations_json`)
    }
    get ref_core_instance_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.core_instance_count`)
    }
    get ref_core_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.core_instance_type`)
    }
    get ref_custom_ami_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_ami_id`)
    }
    get ref_ebs_root_volume_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.ebs_root_volume_size`)
    }
    get ref_ec2_attributes(): Reference<_aws_emr_cluster__ec2_attributes[]> {
        return new Reference(`${this._name}.${this._id}.ec2_attributes`)
    }
    get ref_instance_group(): Reference<_aws_emr_cluster__instance_group[]> {
        return new Reference(`${this._name}.${this._id}.instance_group`)
    }
    get ref_keep_job_flow_alive_when_no_steps(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.keep_job_flow_alive_when_no_steps`)
    }
    get ref_kerberos_attributes(): Reference<_aws_emr_cluster__kerberos_attributes[]> {
        return new Reference(`${this._name}.${this._id}.kerberos_attributes`)
    }
    get ref_log_uri(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.log_uri`)
    }
    get ref_master_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_instance_type`)
    }
    get ref_master_public_dns(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_public_dns`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_release_label(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.release_label`)
    }
    get ref_scale_down_behavior(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.scale_down_behavior`)
    }
    get ref_security_configuration(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.security_configuration`)
    }
    get ref_service_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_role`)
    }
    get ref_step(): Reference<_aws_emr_cluster__step[]> {
        return new Reference(`${this._name}.${this._id}.step`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_termination_protection(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.termination_protection`)
    }
    get ref_visible_to_all_users(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.visible_to_all_users`)
    }
}

export interface _aws_emr_instance_group__ebs_config {
    iops?: rnumber
    size: rnumber
    type: rstring
    volumes_per_instance?: rnumber
}

export interface aws_emr_instance_group_config {
    cluster_id: rstring
    ebs_config?: _aws_emr_instance_group__ebs_config[]
    ebs_optimized?: rboolean
    instance_count?: rnumber
    instance_type: rstring
    name?: rstring
    running_instance_count?: rnumber
    status?: rstring
}

export class aws_emr_instance_group implements Resource {
    config: aws_emr_instance_group_config
    private _is_data: boolean = false
    private _name: string = "aws_emr_instance_group"
    private _id: string;
    constructor(id: string, config: aws_emr_instance_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cluster_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_id`)
    }
    get ref_ebs_config(): Reference<_aws_emr_instance_group__ebs_config[]> {
        return new Reference(`${this._name}.${this._id}.ebs_config`)
    }
    get ref_ebs_optimized(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ebs_optimized`)
    }
    get ref_instance_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_count`)
    }
    get ref_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_type`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_running_instance_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.running_instance_count`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
}

export interface aws_emr_security_configuration_config {
    configuration: rstring
    creation_date?: rstring
    name?: rstring
    name_prefix?: rstring
}

export class aws_emr_security_configuration implements Resource {
    config: aws_emr_security_configuration_config
    private _is_data: boolean = false
    private _name: string = "aws_emr_security_configuration"
    private _id: string;
    constructor(id: string, config: aws_emr_security_configuration_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_configuration(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configuration`)
    }
    get ref_creation_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.creation_date`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
}

export interface aws_flow_log_config {
    eni_id?: rstring
    iam_role_arn?: rstring
    log_destination?: rstring
    log_destination_type?: rstring
    log_group_name?: rstring
    subnet_id?: rstring
    traffic_type: rstring
    vpc_id?: rstring
}

export class aws_flow_log implements Resource {
    config: aws_flow_log_config
    private _is_data: boolean = false
    private _name: string = "aws_flow_log"
    private _id: string;
    constructor(id: string, config: aws_flow_log_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_eni_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.eni_id`)
    }
    get ref_iam_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_role_arn`)
    }
    get ref_log_destination(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.log_destination`)
    }
    get ref_log_destination_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.log_destination_type`)
    }
    get ref_log_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.log_group_name`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_traffic_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.traffic_type`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface _aws_gamelift_alias__routing_strategy {
    fleet_id?: rstring
    message?: rstring
    type: rstring
}

export interface aws_gamelift_alias_config {
    arn?: rstring
    description?: rstring
    name: rstring
    routing_strategy: _aws_gamelift_alias__routing_strategy[]
}

export class aws_gamelift_alias implements Resource {
    config: aws_gamelift_alias_config
    private _is_data: boolean = false
    private _name: string = "aws_gamelift_alias"
    private _id: string;
    constructor(id: string, config: aws_gamelift_alias_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_routing_strategy(): Reference<_aws_gamelift_alias__routing_strategy[]> {
        return new Reference(`${this._name}.${this._id}.routing_strategy`)
    }
}

export interface _aws_gamelift_build__storage_location {
    bucket: rstring
    key: rstring
    role_arn: rstring
}

export interface aws_gamelift_build_config {
    name: rstring
    operating_system: rstring
    storage_location: _aws_gamelift_build__storage_location[]
    version?: rstring
}

export class aws_gamelift_build implements Resource {
    config: aws_gamelift_build_config
    private _is_data: boolean = false
    private _name: string = "aws_gamelift_build"
    private _id: string;
    constructor(id: string, config: aws_gamelift_build_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_operating_system(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.operating_system`)
    }
    get ref_storage_location(): Reference<_aws_gamelift_build__storage_location[]> {
        return new Reference(`${this._name}.${this._id}.storage_location`)
    }
    get ref_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version`)
    }
}

export interface _aws_gamelift_fleet__ec2_inbound_permission {
    from_port: rnumber
    ip_range: rstring
    protocol: rstring
    to_port: rnumber
}

export interface _aws_gamelift_fleet__resource_creation_limit_policy {
    new_game_sessions_per_creator?: rnumber
    policy_period_in_minutes?: rnumber
}

export interface __aws_gamelift_fleet__runtime_configuration__server_process {
    concurrent_executions: rnumber
    launch_path: rstring
    parameters?: rstring
}

export interface _aws_gamelift_fleet__runtime_configuration {
    game_session_activation_timeout_seconds?: rnumber
    max_concurrent_game_session_activations?: rnumber
    server_process?: __aws_gamelift_fleet__runtime_configuration__server_process[]
}

export interface aws_gamelift_fleet_config {
    arn?: rstring
    build_id: rstring
    description?: rstring
    ec2_inbound_permission?: _aws_gamelift_fleet__ec2_inbound_permission[]
    ec2_instance_type: rstring
    log_paths?: rstring[]
    metric_groups?: rstring[]
    name: rstring
    new_game_session_protection_policy?: rstring
    operating_system?: rstring
    resource_creation_limit_policy?: _aws_gamelift_fleet__resource_creation_limit_policy[]
    runtime_configuration?: _aws_gamelift_fleet__runtime_configuration[]
}

export class aws_gamelift_fleet implements Resource {
    config: aws_gamelift_fleet_config
    private _is_data: boolean = false
    private _name: string = "aws_gamelift_fleet"
    private _id: string;
    constructor(id: string, config: aws_gamelift_fleet_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_build_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.build_id`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_ec2_inbound_permission(): Reference<_aws_gamelift_fleet__ec2_inbound_permission[]> {
        return new Reference(`${this._name}.${this._id}.ec2_inbound_permission`)
    }
    get ref_ec2_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ec2_instance_type`)
    }
    get ref_log_paths(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.log_paths`)
    }
    get ref_metric_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.metric_groups`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_new_game_session_protection_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.new_game_session_protection_policy`)
    }
    get ref_operating_system(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.operating_system`)
    }
    get ref_resource_creation_limit_policy(): Reference<_aws_gamelift_fleet__resource_creation_limit_policy[]> {
        return new Reference(`${this._name}.${this._id}.resource_creation_limit_policy`)
    }
    get ref_runtime_configuration(): Reference<_aws_gamelift_fleet__runtime_configuration[]> {
        return new Reference(`${this._name}.${this._id}.runtime_configuration`)
    }
}

export interface _aws_gamelift_game_session_queue__player_latency_policy {
    maximum_individual_player_latency_milliseconds: rnumber
    policy_duration_seconds?: rnumber
}

export interface aws_gamelift_game_session_queue_config {
    arn?: rstring
    destinations?: rstring[]
    name: rstring
    player_latency_policy?: _aws_gamelift_game_session_queue__player_latency_policy[]
    timeout_in_seconds?: rnumber
}

export class aws_gamelift_game_session_queue implements Resource {
    config: aws_gamelift_game_session_queue_config
    private _is_data: boolean = false
    private _name: string = "aws_gamelift_game_session_queue"
    private _id: string;
    constructor(id: string, config: aws_gamelift_game_session_queue_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_destinations(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.destinations`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_player_latency_policy(): Reference<_aws_gamelift_game_session_queue__player_latency_policy[]> {
        return new Reference(`${this._name}.${this._id}.player_latency_policy`)
    }
    get ref_timeout_in_seconds(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.timeout_in_seconds`)
    }
}

export interface _aws_glacier_vault__notification {
    events: rstring[]
    sns_topic: rstring
}

export interface aws_glacier_vault_config {
    access_policy?: rstring
    arn?: rstring
    location?: rstring
    name: rstring
    notification?: _aws_glacier_vault__notification[]
    tags?: {[propName: string]: rstring}
}

export class aws_glacier_vault implements Resource {
    config: aws_glacier_vault_config
    private _is_data: boolean = false
    private _name: string = "aws_glacier_vault"
    private _id: string;
    constructor(id: string, config: aws_glacier_vault_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.access_policy`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_location(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.location`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_notification(): Reference<_aws_glacier_vault__notification[]> {
        return new Reference(`${this._name}.${this._id}.notification`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_glacier_vault_lock_config {
    complete_lock: rboolean
    ignore_deletion_error?: rboolean
    policy: rstring
    vault_name: rstring
}

export class aws_glacier_vault_lock implements Resource {
    config: aws_glacier_vault_lock_config
    private _is_data: boolean = false
    private _name: string = "aws_glacier_vault_lock"
    private _id: string;
    constructor(id: string, config: aws_glacier_vault_lock_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_complete_lock(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.complete_lock`)
    }
    get ref_ignore_deletion_error(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ignore_deletion_error`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_vault_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vault_name`)
    }
}

export interface _aws_globalaccelerator_accelerator__attributes {
    flow_logs_enabled?: rboolean
    flow_logs_s3_bucket?: rstring
    flow_logs_s3_prefix?: rstring
}

export interface _aws_globalaccelerator_accelerator__ip_sets {
    ip_addresses?: rstring[]
    ip_family?: rstring
}

export interface aws_globalaccelerator_accelerator_config {
    attributes?: _aws_globalaccelerator_accelerator__attributes[]
    enabled?: rboolean
    ip_address_type?: rstring
    ip_sets?: _aws_globalaccelerator_accelerator__ip_sets[]
    name: rstring
}

export class aws_globalaccelerator_accelerator implements Resource {
    config: aws_globalaccelerator_accelerator_config
    private _is_data: boolean = false
    private _name: string = "aws_globalaccelerator_accelerator"
    private _id: string;
    constructor(id: string, config: aws_globalaccelerator_accelerator_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_attributes(): Reference<_aws_globalaccelerator_accelerator__attributes[]> {
        return new Reference(`${this._name}.${this._id}.attributes`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_ip_address_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ip_address_type`)
    }
    get ref_ip_sets(): Reference<_aws_globalaccelerator_accelerator__ip_sets[]> {
        return new Reference(`${this._name}.${this._id}.ip_sets`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_glue_catalog_database_config {
    catalog_id?: rstring
    description?: rstring
    location_uri?: rstring
    name: rstring
    parameters?: {[propName: string]: rstring}
}

export class aws_glue_catalog_database implements Resource {
    config: aws_glue_catalog_database_config
    private _is_data: boolean = false
    private _name: string = "aws_glue_catalog_database"
    private _id: string;
    constructor(id: string, config: aws_glue_catalog_database_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_catalog_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.catalog_id`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_location_uri(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.location_uri`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.parameters`)
    }
}

export interface _aws_glue_catalog_table__partition_keys {
    comment?: rstring
    name: rstring
    type?: rstring
}

export interface __aws_glue_catalog_table__storage_descriptor__columns {
    comment?: rstring
    name: rstring
    type?: rstring
}

export interface __aws_glue_catalog_table__storage_descriptor__ser_de_info {
    name?: rstring
    parameters?: {[propName: string]: rstring}
    serialization_library?: rstring
}

export interface __aws_glue_catalog_table__storage_descriptor__skewed_info {
    skewed_column_names?: rstring[]
    skewed_column_value_location_maps?: {[propName: string]: rstring}
    skewed_column_values?: rstring[]
}

export interface __aws_glue_catalog_table__storage_descriptor__sort_columns {
    column: rstring
    sort_order: rnumber
}

export interface _aws_glue_catalog_table__storage_descriptor {
    bucket_columns?: rstring[]
    columns?: __aws_glue_catalog_table__storage_descriptor__columns[]
    compressed?: rboolean
    input_format?: rstring
    location?: rstring
    number_of_buckets?: rnumber
    output_format?: rstring
    parameters?: {[propName: string]: rstring}
    ser_de_info?: __aws_glue_catalog_table__storage_descriptor__ser_de_info[]
    skewed_info?: __aws_glue_catalog_table__storage_descriptor__skewed_info[]
    sort_columns?: __aws_glue_catalog_table__storage_descriptor__sort_columns[]
    stored_as_sub_directories?: rboolean
}

export interface aws_glue_catalog_table_config {
    catalog_id?: rstring
    database_name: rstring
    description?: rstring
    name: rstring
    owner?: rstring
    parameters?: {[propName: string]: rstring}
    partition_keys?: _aws_glue_catalog_table__partition_keys[]
    retention?: rnumber
    storage_descriptor?: _aws_glue_catalog_table__storage_descriptor[]
    table_type?: rstring
    view_expanded_text?: rstring
    view_original_text?: rstring
}

export class aws_glue_catalog_table implements Resource {
    config: aws_glue_catalog_table_config
    private _is_data: boolean = false
    private _name: string = "aws_glue_catalog_table"
    private _id: string;
    constructor(id: string, config: aws_glue_catalog_table_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_catalog_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.catalog_id`)
    }
    get ref_database_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.database_name`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_owner(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner`)
    }
    get ref_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.parameters`)
    }
    get ref_partition_keys(): Reference<_aws_glue_catalog_table__partition_keys[]> {
        return new Reference(`${this._name}.${this._id}.partition_keys`)
    }
    get ref_retention(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.retention`)
    }
    get ref_storage_descriptor(): Reference<_aws_glue_catalog_table__storage_descriptor[]> {
        return new Reference(`${this._name}.${this._id}.storage_descriptor`)
    }
    get ref_table_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.table_type`)
    }
    get ref_view_expanded_text(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.view_expanded_text`)
    }
    get ref_view_original_text(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.view_original_text`)
    }
}

export interface _aws_glue_classifier__grok_classifier {
    classification: rstring
    custom_patterns?: rstring
    grok_pattern: rstring
}

export interface _aws_glue_classifier__json_classifier {
    json_path: rstring
}

export interface _aws_glue_classifier__xml_classifier {
    classification: rstring
    row_tag: rstring
}

export interface aws_glue_classifier_config {
    grok_classifier?: _aws_glue_classifier__grok_classifier[]
    json_classifier?: _aws_glue_classifier__json_classifier[]
    name: rstring
    xml_classifier?: _aws_glue_classifier__xml_classifier[]
}

export class aws_glue_classifier implements Resource {
    config: aws_glue_classifier_config
    private _is_data: boolean = false
    private _name: string = "aws_glue_classifier"
    private _id: string;
    constructor(id: string, config: aws_glue_classifier_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_grok_classifier(): Reference<_aws_glue_classifier__grok_classifier[]> {
        return new Reference(`${this._name}.${this._id}.grok_classifier`)
    }
    get ref_json_classifier(): Reference<_aws_glue_classifier__json_classifier[]> {
        return new Reference(`${this._name}.${this._id}.json_classifier`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_xml_classifier(): Reference<_aws_glue_classifier__xml_classifier[]> {
        return new Reference(`${this._name}.${this._id}.xml_classifier`)
    }
}

export interface _aws_glue_connection__physical_connection_requirements {
    availability_zone?: rstring
    security_group_id_list?: rstring[]
    subnet_id?: rstring
}

export interface aws_glue_connection_config {
    catalog_id?: rstring
    connection_properties: {[propName: string]: rstring}
    connection_type?: rstring
    description?: rstring
    match_criteria?: rstring[]
    name: rstring
    physical_connection_requirements?: _aws_glue_connection__physical_connection_requirements[]
}

export class aws_glue_connection implements Resource {
    config: aws_glue_connection_config
    private _is_data: boolean = false
    private _name: string = "aws_glue_connection"
    private _id: string;
    constructor(id: string, config: aws_glue_connection_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_catalog_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.catalog_id`)
    }
    get ref_connection_properties(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.connection_properties`)
    }
    get ref_connection_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connection_type`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_match_criteria(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.match_criteria`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_physical_connection_requirements(): Reference<_aws_glue_connection__physical_connection_requirements[]> {
        return new Reference(`${this._name}.${this._id}.physical_connection_requirements`)
    }
}

export interface _aws_glue_crawler__dynamodb_target {
    path: rstring
}

export interface _aws_glue_crawler__jdbc_target {
    connection_name: rstring
    exclusions?: rstring[]
    path: rstring
}

export interface _aws_glue_crawler__s3_target {
    exclusions?: rstring[]
    path: rstring
}

export interface _aws_glue_crawler__schema_change_policy {
    delete_behavior?: rstring
    update_behavior?: rstring
}

export interface aws_glue_crawler_config {
    classifiers?: rstring[]
    configuration?: rstring
    database_name: rstring
    description?: rstring
    dynamodb_target?: _aws_glue_crawler__dynamodb_target[]
    jdbc_target?: _aws_glue_crawler__jdbc_target[]
    name: rstring
    role: rstring
    s3_target?: _aws_glue_crawler__s3_target[]
    schedule?: rstring
    schema_change_policy?: _aws_glue_crawler__schema_change_policy[]
    security_configuration?: rstring
    table_prefix?: rstring
}

export class aws_glue_crawler implements Resource {
    config: aws_glue_crawler_config
    private _is_data: boolean = false
    private _name: string = "aws_glue_crawler"
    private _id: string;
    constructor(id: string, config: aws_glue_crawler_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_classifiers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.classifiers`)
    }
    get ref_configuration(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configuration`)
    }
    get ref_database_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.database_name`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_dynamodb_target(): Reference<_aws_glue_crawler__dynamodb_target[]> {
        return new Reference(`${this._name}.${this._id}.dynamodb_target`)
    }
    get ref_jdbc_target(): Reference<_aws_glue_crawler__jdbc_target[]> {
        return new Reference(`${this._name}.${this._id}.jdbc_target`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role`)
    }
    get ref_s3_target(): Reference<_aws_glue_crawler__s3_target[]> {
        return new Reference(`${this._name}.${this._id}.s3_target`)
    }
    get ref_schedule(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.schedule`)
    }
    get ref_schema_change_policy(): Reference<_aws_glue_crawler__schema_change_policy[]> {
        return new Reference(`${this._name}.${this._id}.schema_change_policy`)
    }
    get ref_security_configuration(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.security_configuration`)
    }
    get ref_table_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.table_prefix`)
    }
}

export interface _aws_glue_job__command {
    name?: rstring
    script_location: rstring
}

export interface _aws_glue_job__execution_property {
    max_concurrent_runs?: rnumber
}

export interface aws_glue_job_config {
    allocated_capacity?: rnumber
    command: _aws_glue_job__command[]
    connections?: rstring[]
    default_arguments?: {[propName: string]: rstring}
    description?: rstring
    execution_property?: _aws_glue_job__execution_property[]
    max_retries?: rnumber
    name: rstring
    role_arn: rstring
    security_configuration?: rstring
    timeout?: rnumber
}

export class aws_glue_job implements Resource {
    config: aws_glue_job_config
    private _is_data: boolean = false
    private _name: string = "aws_glue_job"
    private _id: string;
    constructor(id: string, config: aws_glue_job_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocated_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.allocated_capacity`)
    }
    get ref_command(): Reference<_aws_glue_job__command[]> {
        return new Reference(`${this._name}.${this._id}.command`)
    }
    get ref_connections(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.connections`)
    }
    get ref_default_arguments(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.default_arguments`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_execution_property(): Reference<_aws_glue_job__execution_property[]> {
        return new Reference(`${this._name}.${this._id}.execution_property`)
    }
    get ref_max_retries(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.max_retries`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_security_configuration(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.security_configuration`)
    }
    get ref_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.timeout`)
    }
}

export interface __aws_glue_security_configuration__encryption_configuration__cloudwatch_encryption {
    cloudwatch_encryption_mode?: rstring
    kms_key_arn?: rstring
}

export interface __aws_glue_security_configuration__encryption_configuration__job_bookmarks_encryption {
    job_bookmarks_encryption_mode?: rstring
    kms_key_arn?: rstring
}

export interface __aws_glue_security_configuration__encryption_configuration__s3_encryption {
    kms_key_arn?: rstring
    s3_encryption_mode?: rstring
}

export interface _aws_glue_security_configuration__encryption_configuration {
    cloudwatch_encryption: __aws_glue_security_configuration__encryption_configuration__cloudwatch_encryption[]
    job_bookmarks_encryption: __aws_glue_security_configuration__encryption_configuration__job_bookmarks_encryption[]
    s3_encryption: __aws_glue_security_configuration__encryption_configuration__s3_encryption[]
}

export interface aws_glue_security_configuration_config {
    encryption_configuration: _aws_glue_security_configuration__encryption_configuration[]
    name: rstring
}

export class aws_glue_security_configuration implements Resource {
    config: aws_glue_security_configuration_config
    private _is_data: boolean = false
    private _name: string = "aws_glue_security_configuration"
    private _id: string;
    constructor(id: string, config: aws_glue_security_configuration_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_encryption_configuration(): Reference<_aws_glue_security_configuration__encryption_configuration[]> {
        return new Reference(`${this._name}.${this._id}.encryption_configuration`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_glue_trigger__actions {
    arguments?: {[propName: string]: rstring}
    job_name: rstring
    timeout?: rnumber
}

export interface __aws_glue_trigger__predicate__conditions {
    job_name: rstring
    logical_operator?: rstring
    state: rstring
}

export interface _aws_glue_trigger__predicate {
    conditions: __aws_glue_trigger__predicate__conditions[]
    logical?: rstring
}

export interface aws_glue_trigger_config {
    actions: _aws_glue_trigger__actions[]
    description?: rstring
    enabled?: rboolean
    name: rstring
    predicate?: _aws_glue_trigger__predicate[]
    schedule?: rstring
    type: rstring
}

export class aws_glue_trigger implements Resource {
    config: aws_glue_trigger_config
    private _is_data: boolean = false
    private _name: string = "aws_glue_trigger"
    private _id: string;
    constructor(id: string, config: aws_glue_trigger_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_actions(): Reference<_aws_glue_trigger__actions[]> {
        return new Reference(`${this._name}.${this._id}.actions`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_predicate(): Reference<_aws_glue_trigger__predicate[]> {
        return new Reference(`${this._name}.${this._id}.predicate`)
    }
    get ref_schedule(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.schedule`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_guardduty_detector_config {
    account_id?: rstring
    enable?: rboolean
    finding_publishing_frequency?: rstring
}

export class aws_guardduty_detector implements Resource {
    config: aws_guardduty_detector_config
    private _is_data: boolean = false
    private _name: string = "aws_guardduty_detector"
    private _id: string;
    constructor(id: string, config: aws_guardduty_detector_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.account_id`)
    }
    get ref_enable(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable`)
    }
    get ref_finding_publishing_frequency(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.finding_publishing_frequency`)
    }
}

export interface aws_guardduty_ipset_config {
    activate: rboolean
    detector_id: rstring
    format: rstring
    location: rstring
    name: rstring
}

export class aws_guardduty_ipset implements Resource {
    config: aws_guardduty_ipset_config
    private _is_data: boolean = false
    private _name: string = "aws_guardduty_ipset"
    private _id: string;
    constructor(id: string, config: aws_guardduty_ipset_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_activate(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.activate`)
    }
    get ref_detector_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.detector_id`)
    }
    get ref_format(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.format`)
    }
    get ref_location(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.location`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_guardduty_member_config {
    account_id: rstring
    detector_id: rstring
    disable_email_notification?: rboolean
    email: rstring
    invitation_message?: rstring
    invite?: rboolean
    relationship_status?: rstring
}

export class aws_guardduty_member implements Resource {
    config: aws_guardduty_member_config
    private _is_data: boolean = false
    private _name: string = "aws_guardduty_member"
    private _id: string;
    constructor(id: string, config: aws_guardduty_member_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.account_id`)
    }
    get ref_detector_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.detector_id`)
    }
    get ref_disable_email_notification(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.disable_email_notification`)
    }
    get ref_email(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.email`)
    }
    get ref_invitation_message(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.invitation_message`)
    }
    get ref_invite(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.invite`)
    }
    get ref_relationship_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.relationship_status`)
    }
}

export interface aws_guardduty_threatintelset_config {
    activate: rboolean
    detector_id: rstring
    format: rstring
    location: rstring
    name: rstring
}

export class aws_guardduty_threatintelset implements Resource {
    config: aws_guardduty_threatintelset_config
    private _is_data: boolean = false
    private _name: string = "aws_guardduty_threatintelset"
    private _id: string;
    constructor(id: string, config: aws_guardduty_threatintelset_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_activate(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.activate`)
    }
    get ref_detector_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.detector_id`)
    }
    get ref_format(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.format`)
    }
    get ref_location(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.location`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_iam_access_key_config {
    encrypted_secret?: rstring
    key_fingerprint?: rstring
    pgp_key?: rstring
    secret?: rstring
    ses_smtp_password?: rstring
    status?: rstring
    user: rstring
}

export class aws_iam_access_key implements Resource {
    config: aws_iam_access_key_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_access_key"
    private _id: string;
    constructor(id: string, config: aws_iam_access_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_encrypted_secret(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.encrypted_secret`)
    }
    get ref_key_fingerprint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_fingerprint`)
    }
    get ref_pgp_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.pgp_key`)
    }
    get ref_secret(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.secret`)
    }
    get ref_ses_smtp_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ses_smtp_password`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_user(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user`)
    }
}

export interface aws_iam_account_alias_config {
    account_alias: rstring
}

export class aws_iam_account_alias implements Resource {
    config: aws_iam_account_alias_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_account_alias"
    private _id: string;
    constructor(id: string, config: aws_iam_account_alias_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_alias(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.account_alias`)
    }
}

export interface aws_iam_account_password_policy_config {
    allow_users_to_change_password?: rboolean
    expire_passwords?: rboolean
    hard_expiry?: rboolean
    max_password_age?: rnumber
    minimum_password_length?: rnumber
    password_reuse_prevention?: rnumber
    require_lowercase_characters?: rboolean
    require_numbers?: rboolean
    require_symbols?: rboolean
    require_uppercase_characters?: rboolean
}

export class aws_iam_account_password_policy implements Resource {
    config: aws_iam_account_password_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_account_password_policy"
    private _id: string;
    constructor(id: string, config: aws_iam_account_password_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allow_users_to_change_password(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_users_to_change_password`)
    }
    get ref_expire_passwords(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.expire_passwords`)
    }
    get ref_hard_expiry(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.hard_expiry`)
    }
    get ref_max_password_age(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.max_password_age`)
    }
    get ref_minimum_password_length(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.minimum_password_length`)
    }
    get ref_password_reuse_prevention(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.password_reuse_prevention`)
    }
    get ref_require_lowercase_characters(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.require_lowercase_characters`)
    }
    get ref_require_numbers(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.require_numbers`)
    }
    get ref_require_symbols(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.require_symbols`)
    }
    get ref_require_uppercase_characters(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.require_uppercase_characters`)
    }
}

export interface aws_iam_group_config {
    arn?: rstring
    name: rstring
    path?: rstring
    unique_id?: rstring
}

export class aws_iam_group implements Resource {
    config: aws_iam_group_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_group"
    private _id: string;
    constructor(id: string, config: aws_iam_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.path`)
    }
    get ref_unique_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.unique_id`)
    }
}

export interface aws_iam_group_membership_config {
    group: rstring
    name: rstring
    users: rstring[]
}

export class aws_iam_group_membership implements Resource {
    config: aws_iam_group_membership_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_group_membership"
    private _id: string;
    constructor(id: string, config: aws_iam_group_membership_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_group(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.group`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_users(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.users`)
    }
}

export interface aws_iam_group_policy_config {
    group: rstring
    name?: rstring
    name_prefix?: rstring
    policy: rstring
}

export class aws_iam_group_policy implements Resource {
    config: aws_iam_group_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_group_policy"
    private _id: string;
    constructor(id: string, config: aws_iam_group_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_group(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.group`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
}

export interface aws_iam_group_policy_attachment_config {
    group: rstring
    policy_arn: rstring
}

export class aws_iam_group_policy_attachment implements Resource {
    config: aws_iam_group_policy_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_group_policy_attachment"
    private _id: string;
    constructor(id: string, config: aws_iam_group_policy_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_group(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.group`)
    }
    get ref_policy_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_arn`)
    }
}

export interface aws_iam_instance_profile_config {
    arn?: rstring
    create_date?: rstring
    name?: rstring
    name_prefix?: rstring
    path?: rstring
    role?: rstring
    roles?: rstring[]
    unique_id?: rstring
}

export class aws_iam_instance_profile implements Resource {
    config: aws_iam_instance_profile_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_instance_profile"
    private _id: string;
    constructor(id: string, config: aws_iam_instance_profile_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_create_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.create_date`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.path`)
    }
    get ref_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role`)
    }
    get ref_roles(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.roles`)
    }
    get ref_unique_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.unique_id`)
    }
}

export interface aws_iam_openid_connect_provider_config {
    arn?: rstring
    client_id_list: rstring[]
    thumbprint_list: rstring[]
    url: rstring
}

export class aws_iam_openid_connect_provider implements Resource {
    config: aws_iam_openid_connect_provider_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_openid_connect_provider"
    private _id: string;
    constructor(id: string, config: aws_iam_openid_connect_provider_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_client_id_list(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.client_id_list`)
    }
    get ref_thumbprint_list(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.thumbprint_list`)
    }
    get ref_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.url`)
    }
}

export interface aws_iam_policy_config {
    arn?: rstring
    description?: rstring
    name?: rstring
    name_prefix?: rstring
    path?: rstring
    policy: rstring
}

export class aws_iam_policy implements Resource {
    config: aws_iam_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_policy"
    private _id: string;
    constructor(id: string, config: aws_iam_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.path`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
}

export interface aws_iam_policy_attachment_config {
    groups?: rstring[]
    name: rstring
    policy_arn: rstring
    roles?: rstring[]
    users?: rstring[]
}

export class aws_iam_policy_attachment implements Resource {
    config: aws_iam_policy_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_policy_attachment"
    private _id: string;
    constructor(id: string, config: aws_iam_policy_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.groups`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_policy_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_arn`)
    }
    get ref_roles(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.roles`)
    }
    get ref_users(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.users`)
    }
}

export interface aws_iam_role_config {
    arn?: rstring
    assume_role_policy: rstring
    create_date?: rstring
    description?: rstring
    force_detach_policies?: rboolean
    max_session_duration?: rnumber
    name?: rstring
    name_prefix?: rstring
    path?: rstring
    permissions_boundary?: rstring
    tags?: {[propName: string]: rstring}
    unique_id?: rstring
}

export class aws_iam_role implements Resource {
    config: aws_iam_role_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_role"
    private _id: string;
    constructor(id: string, config: aws_iam_role_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_assume_role_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.assume_role_policy`)
    }
    get ref_create_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.create_date`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_force_detach_policies(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_detach_policies`)
    }
    get ref_max_session_duration(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.max_session_duration`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.path`)
    }
    get ref_permissions_boundary(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.permissions_boundary`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_unique_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.unique_id`)
    }
}

export interface aws_iam_role_policy_config {
    name?: rstring
    name_prefix?: rstring
    policy: rstring
    role: rstring
}

export class aws_iam_role_policy implements Resource {
    config: aws_iam_role_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_role_policy"
    private _id: string;
    constructor(id: string, config: aws_iam_role_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role`)
    }
}

export interface aws_iam_role_policy_attachment_config {
    policy_arn: rstring
    role: rstring
}

export class aws_iam_role_policy_attachment implements Resource {
    config: aws_iam_role_policy_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_role_policy_attachment"
    private _id: string;
    constructor(id: string, config: aws_iam_role_policy_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_policy_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_arn`)
    }
    get ref_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role`)
    }
}

export interface aws_iam_saml_provider_config {
    arn?: rstring
    name: rstring
    saml_metadata_document: rstring
    valid_until?: rstring
}

export class aws_iam_saml_provider implements Resource {
    config: aws_iam_saml_provider_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_saml_provider"
    private _id: string;
    constructor(id: string, config: aws_iam_saml_provider_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_saml_metadata_document(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.saml_metadata_document`)
    }
    get ref_valid_until(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.valid_until`)
    }
}

export interface aws_iam_server_certificate_config {
    arn?: rstring
    certificate_body: rstring
    certificate_chain?: rstring
    name?: rstring
    name_prefix?: rstring
    path?: rstring
    private_key: rstring
}

export class aws_iam_server_certificate implements Resource {
    config: aws_iam_server_certificate_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_server_certificate"
    private _id: string;
    constructor(id: string, config: aws_iam_server_certificate_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_certificate_body(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_body`)
    }
    get ref_certificate_chain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_chain`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.path`)
    }
    get ref_private_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_key`)
    }
}

export interface aws_iam_service_linked_role_config {
    arn?: rstring
    aws_service_name: rstring
    create_date?: rstring
    custom_suffix?: rstring
    description?: rstring
    name?: rstring
    path?: rstring
    unique_id?: rstring
}

export class aws_iam_service_linked_role implements Resource {
    config: aws_iam_service_linked_role_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_service_linked_role"
    private _id: string;
    constructor(id: string, config: aws_iam_service_linked_role_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_aws_service_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.aws_service_name`)
    }
    get ref_create_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.create_date`)
    }
    get ref_custom_suffix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_suffix`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.path`)
    }
    get ref_unique_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.unique_id`)
    }
}

export interface aws_iam_user_config {
    arn?: rstring
    /**
     * Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices    
     */
    force_destroy?: rboolean
    name: rstring
    path?: rstring
    permissions_boundary?: rstring
    tags?: {[propName: string]: rstring}
    unique_id?: rstring
}

export class aws_iam_user implements Resource {
    config: aws_iam_user_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_user"
    private _id: string;
    constructor(id: string, config: aws_iam_user_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_force_destroy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_destroy`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.path`)
    }
    get ref_permissions_boundary(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.permissions_boundary`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_unique_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.unique_id`)
    }
}

export interface aws_iam_user_group_membership_config {
    groups: rstring[]
    user: rstring
}

export class aws_iam_user_group_membership implements Resource {
    config: aws_iam_user_group_membership_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_user_group_membership"
    private _id: string;
    constructor(id: string, config: aws_iam_user_group_membership_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.groups`)
    }
    get ref_user(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user`)
    }
}

export interface aws_iam_user_login_profile_config {
    encrypted_password?: rstring
    key_fingerprint?: rstring
    password_length?: rnumber
    password_reset_required?: rboolean
    pgp_key: rstring
    user: rstring
}

export class aws_iam_user_login_profile implements Resource {
    config: aws_iam_user_login_profile_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_user_login_profile"
    private _id: string;
    constructor(id: string, config: aws_iam_user_login_profile_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_encrypted_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.encrypted_password`)
    }
    get ref_key_fingerprint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_fingerprint`)
    }
    get ref_password_length(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.password_length`)
    }
    get ref_password_reset_required(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.password_reset_required`)
    }
    get ref_pgp_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.pgp_key`)
    }
    get ref_user(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user`)
    }
}

export interface aws_iam_user_policy_config {
    name?: rstring
    name_prefix?: rstring
    policy: rstring
    user: rstring
}

export class aws_iam_user_policy implements Resource {
    config: aws_iam_user_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_user_policy"
    private _id: string;
    constructor(id: string, config: aws_iam_user_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_user(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user`)
    }
}

export interface aws_iam_user_policy_attachment_config {
    policy_arn: rstring
    user: rstring
}

export class aws_iam_user_policy_attachment implements Resource {
    config: aws_iam_user_policy_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_user_policy_attachment"
    private _id: string;
    constructor(id: string, config: aws_iam_user_policy_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_policy_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_arn`)
    }
    get ref_user(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user`)
    }
}

export interface aws_iam_user_ssh_key_config {
    encoding: rstring
    fingerprint?: rstring
    public_key: rstring
    ssh_public_key_id?: rstring
    status?: rstring
    username: rstring
}

export class aws_iam_user_ssh_key implements Resource {
    config: aws_iam_user_ssh_key_config
    private _is_data: boolean = false
    private _name: string = "aws_iam_user_ssh_key"
    private _id: string;
    constructor(id: string, config: aws_iam_user_ssh_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_encoding(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.encoding`)
    }
    get ref_fingerprint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.fingerprint`)
    }
    get ref_public_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_key`)
    }
    get ref_ssh_public_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ssh_public_key_id`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_username(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.username`)
    }
}

export interface aws_inspector_assessment_target_config {
    arn?: rstring
    name: rstring
    resource_group_arn?: rstring
}

export class aws_inspector_assessment_target implements Resource {
    config: aws_inspector_assessment_target_config
    private _is_data: boolean = false
    private _name: string = "aws_inspector_assessment_target"
    private _id: string;
    constructor(id: string, config: aws_inspector_assessment_target_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_resource_group_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_group_arn`)
    }
}

export interface aws_inspector_assessment_template_config {
    arn?: rstring
    duration: rnumber
    name: rstring
    rules_package_arns: rstring[]
    target_arn: rstring
}

export class aws_inspector_assessment_template implements Resource {
    config: aws_inspector_assessment_template_config
    private _is_data: boolean = false
    private _name: string = "aws_inspector_assessment_template"
    private _id: string;
    constructor(id: string, config: aws_inspector_assessment_template_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_duration(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.duration`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_rules_package_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.rules_package_arns`)
    }
    get ref_target_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_arn`)
    }
}

export interface aws_inspector_resource_group_config {
    arn?: rstring
    tags: {[propName: string]: rstring}
}

export class aws_inspector_resource_group implements Resource {
    config: aws_inspector_resource_group_config
    private _is_data: boolean = false
    private _name: string = "aws_inspector_resource_group"
    private _id: string;
    constructor(id: string, config: aws_inspector_resource_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_instance__credit_specification {
    cpu_credits?: rstring
}

export interface _aws_instance__ebs_block_device {
    delete_on_termination?: rboolean
    device_name: rstring
    encrypted?: rboolean
    iops?: rnumber
    snapshot_id?: rstring
    volume_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_instance__ephemeral_block_device {
    device_name: rstring
    no_device?: rboolean
    virtual_name?: rstring
}

export interface _aws_instance__network_interface {
    delete_on_termination?: rboolean
    device_index: rnumber
    network_interface_id: rstring
}

export interface _aws_instance__root_block_device {
    delete_on_termination?: rboolean
    iops?: rnumber
    volume_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface aws_instance_config {
    ami: rstring
    arn?: rstring
    associate_public_ip_address?: rboolean
    availability_zone?: rstring
    block_device?: {[propName: string]: rstring}
    cpu_core_count?: rnumber
    cpu_threads_per_core?: rnumber
    credit_specification?: _aws_instance__credit_specification[]
    disable_api_termination?: rboolean
    ebs_block_device?: _aws_instance__ebs_block_device[]
    ebs_optimized?: rboolean
    ephemeral_block_device?: _aws_instance__ephemeral_block_device[]
    get_password_data?: rboolean
    host_id?: rstring
    iam_instance_profile?: rstring
    instance_initiated_shutdown_behavior?: rstring
    instance_state?: rstring
    instance_type: rstring
    ipv6_address_count?: rnumber
    ipv6_addresses?: rstring[]
    key_name?: rstring
    monitoring?: rboolean
    network_interface?: _aws_instance__network_interface[]
    network_interface_id?: rstring
    password_data?: rstring
    placement_group?: rstring
    primary_network_interface_id?: rstring
    private_dns?: rstring
    private_ip?: rstring
    public_dns?: rstring
    public_ip?: rstring
    root_block_device?: _aws_instance__root_block_device[]
    security_groups?: rstring[]
    source_dest_check?: rboolean
    subnet_id?: rstring
    tags?: {[propName: string]: rstring}
    tenancy?: rstring
    user_data?: rstring
    user_data_base64?: rstring
    volume_tags?: {[propName: string]: rstring}
    vpc_security_group_ids?: rstring[]
}

export class aws_instance implements Resource {
    config: aws_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_instance"
    private _id: string;
    constructor(id: string, config: aws_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_ami(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ami`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_associate_public_ip_address(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.associate_public_ip_address`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_block_device(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.block_device`)
    }
    get ref_cpu_core_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.cpu_core_count`)
    }
    get ref_cpu_threads_per_core(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.cpu_threads_per_core`)
    }
    get ref_credit_specification(): Reference<_aws_instance__credit_specification[]> {
        return new Reference(`${this._name}.${this._id}.credit_specification`)
    }
    get ref_disable_api_termination(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.disable_api_termination`)
    }
    get ref_ebs_block_device(): Reference<_aws_instance__ebs_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ebs_block_device`)
    }
    get ref_ebs_optimized(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ebs_optimized`)
    }
    get ref_ephemeral_block_device(): Reference<_aws_instance__ephemeral_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ephemeral_block_device`)
    }
    get ref_get_password_data(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.get_password_data`)
    }
    get ref_host_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.host_id`)
    }
    get ref_iam_instance_profile(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_instance_profile`)
    }
    get ref_instance_initiated_shutdown_behavior(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_initiated_shutdown_behavior`)
    }
    get ref_instance_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_state`)
    }
    get ref_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_type`)
    }
    get ref_ipv6_address_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.ipv6_address_count`)
    }
    get ref_ipv6_addresses(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.ipv6_addresses`)
    }
    get ref_key_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_name`)
    }
    get ref_monitoring(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.monitoring`)
    }
    get ref_network_interface(): Reference<_aws_instance__network_interface[]> {
        return new Reference(`${this._name}.${this._id}.network_interface`)
    }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface_id`)
    }
    get ref_password_data(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.password_data`)
    }
    get ref_placement_group(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.placement_group`)
    }
    get ref_primary_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.primary_network_interface_id`)
    }
    get ref_private_dns(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_dns`)
    }
    get ref_private_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_ip`)
    }
    get ref_public_dns(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_dns`)
    }
    get ref_public_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_ip`)
    }
    get ref_root_block_device(): Reference<_aws_instance__root_block_device[]> {
        return new Reference(`${this._name}.${this._id}.root_block_device`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_source_dest_check(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.source_dest_check`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_tenancy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tenancy`)
    }
    get ref_user_data(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_data`)
    }
    get ref_user_data_base64(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_data_base64`)
    }
    get ref_volume_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.volume_tags`)
    }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_security_group_ids`)
    }
}

export interface aws_internet_gateway_config {
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_internet_gateway implements Resource {
    config: aws_internet_gateway_config
    private _is_data: boolean = false
    private _name: string = "aws_internet_gateway"
    private _id: string;
    constructor(id: string, config: aws_internet_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_iot_certificate_config {
    active: rboolean
    arn?: rstring
    csr: rstring
}

export class aws_iot_certificate implements Resource {
    config: aws_iot_certificate_config
    private _is_data: boolean = false
    private _name: string = "aws_iot_certificate"
    private _id: string;
    constructor(id: string, config: aws_iot_certificate_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_active(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.active`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_csr(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.csr`)
    }
}

export interface aws_iot_policy_config {
    arn?: rstring
    default_version_id?: rstring
    name: rstring
    policy: rstring
}

export class aws_iot_policy implements Resource {
    config: aws_iot_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_iot_policy"
    private _id: string;
    constructor(id: string, config: aws_iot_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_default_version_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_version_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
}

export interface aws_iot_policy_attachment_config {
    policy: rstring
    target: rstring
}

export class aws_iot_policy_attachment implements Resource {
    config: aws_iot_policy_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_iot_policy_attachment"
    private _id: string;
    constructor(id: string, config: aws_iot_policy_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_target(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target`)
    }
}

export interface aws_iot_role_alias_config {
    alias: rstring
    credential_duration?: rnumber
    role_arn: rstring
}

export class aws_iot_role_alias implements Resource {
    config: aws_iot_role_alias_config
    private _is_data: boolean = false
    private _name: string = "aws_iot_role_alias"
    private _id: string;
    constructor(id: string, config: aws_iot_role_alias_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_alias(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.alias`)
    }
    get ref_credential_duration(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.credential_duration`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
}

export interface aws_iot_thing_config {
    arn?: rstring
    attributes?: {[propName: string]: rstring}
    default_client_id?: rstring
    name: rstring
    thing_type_name?: rstring
    version?: rnumber
}

export class aws_iot_thing implements Resource {
    config: aws_iot_thing_config
    private _is_data: boolean = false
    private _name: string = "aws_iot_thing"
    private _id: string;
    constructor(id: string, config: aws_iot_thing_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_attributes(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.attributes`)
    }
    get ref_default_client_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_client_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_thing_type_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.thing_type_name`)
    }
    get ref_version(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.version`)
    }
}

export interface aws_iot_thing_principal_attachment_config {
    principal: rstring
    thing: rstring
}

export class aws_iot_thing_principal_attachment implements Resource {
    config: aws_iot_thing_principal_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_iot_thing_principal_attachment"
    private _id: string;
    constructor(id: string, config: aws_iot_thing_principal_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_principal(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.principal`)
    }
    get ref_thing(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.thing`)
    }
}

export interface _aws_iot_thing_type__properties {
    description?: rstring
    searchable_attributes?: rstring[]
}

export interface aws_iot_thing_type_config {
    arn?: rstring
    deprecated?: rboolean
    name: rstring
    properties?: _aws_iot_thing_type__properties[]
}

export class aws_iot_thing_type implements Resource {
    config: aws_iot_thing_type_config
    private _is_data: boolean = false
    private _name: string = "aws_iot_thing_type"
    private _id: string;
    constructor(id: string, config: aws_iot_thing_type_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_deprecated(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.deprecated`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_properties(): Reference<_aws_iot_thing_type__properties[]> {
        return new Reference(`${this._name}.${this._id}.properties`)
    }
}

export interface _aws_iot_topic_rule__cloudwatch_alarm {
    alarm_name: rstring
    role_arn: rstring
    state_reason: rstring
    state_value: rstring
}

export interface _aws_iot_topic_rule__cloudwatch_metric {
    metric_name: rstring
    metric_namespace: rstring
    metric_timestamp?: rstring
    metric_unit: rstring
    metric_value: rstring
    role_arn: rstring
}

export interface _aws_iot_topic_rule__dynamodb {
    hash_key_field: rstring
    hash_key_type?: rstring
    hash_key_value: rstring
    payload_field?: rstring
    range_key_field?: rstring
    range_key_type?: rstring
    range_key_value?: rstring
    role_arn: rstring
    table_name: rstring
}

export interface _aws_iot_topic_rule__elasticsearch {
    endpoint: rstring
    id: rstring
    index: rstring
    role_arn: rstring
    type: rstring
}

export interface _aws_iot_topic_rule__firehose {
    delivery_stream_name: rstring
    role_arn: rstring
    separator?: rstring
}

export interface _aws_iot_topic_rule__kinesis {
    partition_key?: rstring
    role_arn: rstring
    stream_name: rstring
}

export interface _aws_iot_topic_rule__lambda {
    function_arn: rstring
}

export interface _aws_iot_topic_rule__republish {
    role_arn: rstring
    topic: rstring
}

export interface _aws_iot_topic_rule__s3 {
    bucket_name: rstring
    key: rstring
    role_arn: rstring
}

export interface _aws_iot_topic_rule__sns {
    message_format?: rstring
    role_arn: rstring
    target_arn: rstring
}

export interface _aws_iot_topic_rule__sqs {
    queue_url: rstring
    role_arn: rstring
    use_base64: rboolean
}

export interface aws_iot_topic_rule_config {
    arn?: rstring
    cloudwatch_alarm?: _aws_iot_topic_rule__cloudwatch_alarm[]
    cloudwatch_metric?: _aws_iot_topic_rule__cloudwatch_metric[]
    description?: rstring
    dynamodb?: _aws_iot_topic_rule__dynamodb[]
    elasticsearch?: _aws_iot_topic_rule__elasticsearch[]
    enabled: rboolean
    firehose?: _aws_iot_topic_rule__firehose[]
    kinesis?: _aws_iot_topic_rule__kinesis[]
    lambda?: _aws_iot_topic_rule__lambda[]
    name: rstring
    republish?: _aws_iot_topic_rule__republish[]
    s3?: _aws_iot_topic_rule__s3[]
    sns?: _aws_iot_topic_rule__sns[]
    sql: rstring
    sql_version: rstring
    sqs?: _aws_iot_topic_rule__sqs[]
}

export class aws_iot_topic_rule implements Resource {
    config: aws_iot_topic_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_iot_topic_rule"
    private _id: string;
    constructor(id: string, config: aws_iot_topic_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_cloudwatch_alarm(): Reference<_aws_iot_topic_rule__cloudwatch_alarm[]> {
        return new Reference(`${this._name}.${this._id}.cloudwatch_alarm`)
    }
    get ref_cloudwatch_metric(): Reference<_aws_iot_topic_rule__cloudwatch_metric[]> {
        return new Reference(`${this._name}.${this._id}.cloudwatch_metric`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_dynamodb(): Reference<_aws_iot_topic_rule__dynamodb[]> {
        return new Reference(`${this._name}.${this._id}.dynamodb`)
    }
    get ref_elasticsearch(): Reference<_aws_iot_topic_rule__elasticsearch[]> {
        return new Reference(`${this._name}.${this._id}.elasticsearch`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_firehose(): Reference<_aws_iot_topic_rule__firehose[]> {
        return new Reference(`${this._name}.${this._id}.firehose`)
    }
    get ref_kinesis(): Reference<_aws_iot_topic_rule__kinesis[]> {
        return new Reference(`${this._name}.${this._id}.kinesis`)
    }
    get ref_lambda(): Reference<_aws_iot_topic_rule__lambda[]> {
        return new Reference(`${this._name}.${this._id}.lambda`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_republish(): Reference<_aws_iot_topic_rule__republish[]> {
        return new Reference(`${this._name}.${this._id}.republish`)
    }
    get ref_s3(): Reference<_aws_iot_topic_rule__s3[]> {
        return new Reference(`${this._name}.${this._id}.s3`)
    }
    get ref_sns(): Reference<_aws_iot_topic_rule__sns[]> {
        return new Reference(`${this._name}.${this._id}.sns`)
    }
    get ref_sql(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sql`)
    }
    get ref_sql_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sql_version`)
    }
    get ref_sqs(): Reference<_aws_iot_topic_rule__sqs[]> {
        return new Reference(`${this._name}.${this._id}.sqs`)
    }
}

export interface aws_key_pair_config {
    fingerprint?: rstring
    key_name?: rstring
    key_name_prefix?: rstring
    public_key: rstring
}

export class aws_key_pair implements Resource {
    config: aws_key_pair_config
    private _is_data: boolean = false
    private _name: string = "aws_key_pair"
    private _id: string;
    constructor(id: string, config: aws_key_pair_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_fingerprint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.fingerprint`)
    }
    get ref_key_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_name`)
    }
    get ref_key_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_name_prefix`)
    }
    get ref_public_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_key`)
    }
}

export interface _aws_kinesis_analytics_application__cloudwatch_logging_options {
    id?: rstring
    log_stream_arn: rstring
    role_arn: rstring
}

export interface __aws_kinesis_analytics_application__inputs__kinesis_firehose {
    resource_arn: rstring
    role_arn: rstring
}

export interface __aws_kinesis_analytics_application__inputs__kinesis_stream {
    resource_arn: rstring
    role_arn: rstring
}

export interface __aws_kinesis_analytics_application__inputs__parallelism {
    count: rnumber
}

export interface __aws_kinesis_analytics_application__inputs__processing_configuration__lambda {
    resource_arn: rstring
    role_arn: rstring
}

export interface __aws_kinesis_analytics_application__inputs__processing_configuration {
    lambda: __aws_kinesis_analytics_application__inputs__processing_configuration__lambda[]
}

export interface __aws_kinesis_analytics_application__inputs__schema__record_columns {
    mapping?: rstring
    name: rstring
    sql_type: rstring
}

export interface __aws_kinesis_analytics_application__inputs__schema__record_format__mapping_parameters__csv {
    record_column_delimiter: rstring
    record_row_delimiter: rstring
}

export interface __aws_kinesis_analytics_application__inputs__schema__record_format__mapping_parameters__json {
    record_row_path: rstring
}

export interface __aws_kinesis_analytics_application__inputs__schema__record_format__mapping_parameters {
    csv?: __aws_kinesis_analytics_application__inputs__schema__record_format__mapping_parameters__csv[]
    json?: __aws_kinesis_analytics_application__inputs__schema__record_format__mapping_parameters__json[]
}

export interface __aws_kinesis_analytics_application__inputs__schema__record_format {
    mapping_parameters?: __aws_kinesis_analytics_application__inputs__schema__record_format__mapping_parameters[]
    record_format_type?: rstring
}

export interface __aws_kinesis_analytics_application__inputs__schema {
    record_columns: __aws_kinesis_analytics_application__inputs__schema__record_columns[]
    record_encoding?: rstring
    record_format: __aws_kinesis_analytics_application__inputs__schema__record_format[]
}

export interface __aws_kinesis_analytics_application__inputs__starting_position_configuration {
    starting_position?: rstring
}

export interface _aws_kinesis_analytics_application__inputs {
    id?: rstring
    kinesis_firehose?: __aws_kinesis_analytics_application__inputs__kinesis_firehose[]
    kinesis_stream?: __aws_kinesis_analytics_application__inputs__kinesis_stream[]
    name_prefix: rstring
    parallelism?: __aws_kinesis_analytics_application__inputs__parallelism[]
    processing_configuration?: __aws_kinesis_analytics_application__inputs__processing_configuration[]
    schema: __aws_kinesis_analytics_application__inputs__schema[]
    starting_position_configuration?: __aws_kinesis_analytics_application__inputs__starting_position_configuration[]
    stream_names?: rstring[]
}

export interface __aws_kinesis_analytics_application__outputs__kinesis_firehose {
    resource_arn: rstring
    role_arn: rstring
}

export interface __aws_kinesis_analytics_application__outputs__kinesis_stream {
    resource_arn: rstring
    role_arn: rstring
}

export interface __aws_kinesis_analytics_application__outputs__lambda {
    resource_arn: rstring
    role_arn: rstring
}

export interface __aws_kinesis_analytics_application__outputs__schema {
    record_format_type?: rstring
}

export interface _aws_kinesis_analytics_application__outputs {
    id?: rstring
    kinesis_firehose?: __aws_kinesis_analytics_application__outputs__kinesis_firehose[]
    kinesis_stream?: __aws_kinesis_analytics_application__outputs__kinesis_stream[]
    lambda?: __aws_kinesis_analytics_application__outputs__lambda[]
    name: rstring
    schema: __aws_kinesis_analytics_application__outputs__schema[]
}

export interface __aws_kinesis_analytics_application__reference_data_sources__s3 {
    bucket_arn: rstring
    file_key: rstring
    role_arn: rstring
}

export interface __aws_kinesis_analytics_application__reference_data_sources__schema__record_columns {
    mapping?: rstring
    name: rstring
    sql_type: rstring
}

export interface __aws_kinesis_analytics_application__reference_data_sources__schema__record_format__mapping_parameters__csv {
    record_column_delimiter: rstring
    record_row_delimiter: rstring
}

export interface __aws_kinesis_analytics_application__reference_data_sources__schema__record_format__mapping_parameters__json {
    record_row_path: rstring
}

export interface __aws_kinesis_analytics_application__reference_data_sources__schema__record_format__mapping_parameters {
    csv?: __aws_kinesis_analytics_application__reference_data_sources__schema__record_format__mapping_parameters__csv[]
    json?: __aws_kinesis_analytics_application__reference_data_sources__schema__record_format__mapping_parameters__json[]
}

export interface __aws_kinesis_analytics_application__reference_data_sources__schema__record_format {
    mapping_parameters?: __aws_kinesis_analytics_application__reference_data_sources__schema__record_format__mapping_parameters[]
    record_format_type?: rstring
}

export interface __aws_kinesis_analytics_application__reference_data_sources__schema {
    record_columns: __aws_kinesis_analytics_application__reference_data_sources__schema__record_columns[]
    record_encoding?: rstring
    record_format: __aws_kinesis_analytics_application__reference_data_sources__schema__record_format[]
}

export interface _aws_kinesis_analytics_application__reference_data_sources {
    id?: rstring
    s3: __aws_kinesis_analytics_application__reference_data_sources__s3[]
    schema: __aws_kinesis_analytics_application__reference_data_sources__schema[]
    table_name: rstring
}

export interface aws_kinesis_analytics_application_config {
    arn?: rstring
    cloudwatch_logging_options?: _aws_kinesis_analytics_application__cloudwatch_logging_options[]
    code?: rstring
    create_timestamp?: rstring
    description?: rstring
    inputs?: _aws_kinesis_analytics_application__inputs[]
    last_update_timestamp?: rstring
    name: rstring
    outputs?: _aws_kinesis_analytics_application__outputs[]
    reference_data_sources?: _aws_kinesis_analytics_application__reference_data_sources[]
    status?: rstring
    version?: rnumber
}

export class aws_kinesis_analytics_application implements Resource {
    config: aws_kinesis_analytics_application_config
    private _is_data: boolean = false
    private _name: string = "aws_kinesis_analytics_application"
    private _id: string;
    constructor(id: string, config: aws_kinesis_analytics_application_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_cloudwatch_logging_options(): Reference<_aws_kinesis_analytics_application__cloudwatch_logging_options[]> {
        return new Reference(`${this._name}.${this._id}.cloudwatch_logging_options`)
    }
    get ref_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.code`)
    }
    get ref_create_timestamp(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.create_timestamp`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_inputs(): Reference<_aws_kinesis_analytics_application__inputs[]> {
        return new Reference(`${this._name}.${this._id}.inputs`)
    }
    get ref_last_update_timestamp(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_update_timestamp`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_outputs(): Reference<_aws_kinesis_analytics_application__outputs[]> {
        return new Reference(`${this._name}.${this._id}.outputs`)
    }
    get ref_reference_data_sources(): Reference<_aws_kinesis_analytics_application__reference_data_sources[]> {
        return new Reference(`${this._name}.${this._id}.reference_data_sources`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_version(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.version`)
    }
}

export interface __aws_kinesis_firehose_delivery_stream__elasticsearch_configuration__cloudwatch_logging_options {
    enabled?: rboolean
    log_group_name?: rstring
    log_stream_name?: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__elasticsearch_configuration__processing_configuration__processors__parameters {
    parameter_name: rstring
    parameter_value: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__elasticsearch_configuration__processing_configuration__processors {
    parameters?: __aws_kinesis_firehose_delivery_stream__elasticsearch_configuration__processing_configuration__processors__parameters[]
    type: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__elasticsearch_configuration__processing_configuration {
    enabled?: rboolean
    processors?: __aws_kinesis_firehose_delivery_stream__elasticsearch_configuration__processing_configuration__processors[]
}

export interface _aws_kinesis_firehose_delivery_stream__elasticsearch_configuration {
    buffering_interval?: rnumber
    buffering_size?: rnumber
    cloudwatch_logging_options?: __aws_kinesis_firehose_delivery_stream__elasticsearch_configuration__cloudwatch_logging_options[]
    domain_arn: rstring
    index_name: rstring
    index_rotation_period?: rstring
    processing_configuration?: __aws_kinesis_firehose_delivery_stream__elasticsearch_configuration__processing_configuration[]
    retry_duration?: rnumber
    role_arn: rstring
    s3_backup_mode?: rstring
    type_name?: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__cloudwatch_logging_options {
    enabled?: rboolean
    log_group_name?: rstring
    log_stream_name?: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__input_format_configuration__deserializer__hive_json_ser_de {
    timestamp_formats?: rstring[]
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__input_format_configuration__deserializer__open_x_json_ser_de {
    case_insensitive?: rboolean
    column_to_json_key_mappings?: {[propName: string]: rstring}
    convert_dots_in_json_keys_to_underscores?: rboolean
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__input_format_configuration__deserializer {
    hive_json_ser_de?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__input_format_configuration__deserializer__hive_json_ser_de[]
    open_x_json_ser_de?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__input_format_configuration__deserializer__open_x_json_ser_de[]
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__input_format_configuration {
    deserializer: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__input_format_configuration__deserializer[]
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__output_format_configuration__serializer__orc_ser_de {
    block_size_bytes?: rnumber
    bloom_filter_columns?: rstring[]
    bloom_filter_false_positive_probability?: rnumber
    compression?: rstring
    dictionary_key_threshold?: rnumber
    enable_padding?: rboolean
    format_version?: rstring
    padding_tolerance?: rnumber
    row_index_stride?: rnumber
    stripe_size_bytes?: rnumber
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__output_format_configuration__serializer__parquet_ser_de {
    block_size_bytes?: rnumber
    compression?: rstring
    enable_dictionary_compression?: rboolean
    max_padding_bytes?: rnumber
    page_size_bytes?: rnumber
    writer_version?: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__output_format_configuration__serializer {
    orc_ser_de?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__output_format_configuration__serializer__orc_ser_de[]
    parquet_ser_de?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__output_format_configuration__serializer__parquet_ser_de[]
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__output_format_configuration {
    serializer: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__output_format_configuration__serializer[]
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__schema_configuration {
    catalog_id?: rstring
    database_name: rstring
    region?: rstring
    role_arn: rstring
    table_name: rstring
    version_id?: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration {
    enabled?: rboolean
    input_format_configuration: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__input_format_configuration[]
    output_format_configuration: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__output_format_configuration[]
    schema_configuration: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration__schema_configuration[]
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__processing_configuration__processors__parameters {
    parameter_name: rstring
    parameter_value: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__processing_configuration__processors {
    parameters?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__processing_configuration__processors__parameters[]
    type: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__processing_configuration {
    enabled?: rboolean
    processors?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__processing_configuration__processors[]
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__s3_backup_configuration__cloudwatch_logging_options {
    enabled?: rboolean
    log_group_name?: rstring
    log_stream_name?: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__s3_backup_configuration {
    bucket_arn: rstring
    buffer_interval?: rnumber
    buffer_size?: rnumber
    cloudwatch_logging_options?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__s3_backup_configuration__cloudwatch_logging_options[]
    compression_format?: rstring
    kms_key_arn?: rstring
    prefix?: rstring
    role_arn: rstring
}

export interface _aws_kinesis_firehose_delivery_stream__extended_s3_configuration {
    bucket_arn: rstring
    buffer_interval?: rnumber
    buffer_size?: rnumber
    cloudwatch_logging_options?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__cloudwatch_logging_options[]
    compression_format?: rstring
    data_format_conversion_configuration?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__data_format_conversion_configuration[]
    error_output_prefix?: rstring
    kms_key_arn?: rstring
    prefix?: rstring
    processing_configuration?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__processing_configuration[]
    role_arn: rstring
    s3_backup_configuration?: __aws_kinesis_firehose_delivery_stream__extended_s3_configuration__s3_backup_configuration[]
    s3_backup_mode?: rstring
}

export interface _aws_kinesis_firehose_delivery_stream__kinesis_source_configuration {
    kinesis_stream_arn: rstring
    role_arn: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__redshift_configuration__cloudwatch_logging_options {
    enabled?: rboolean
    log_group_name?: rstring
    log_stream_name?: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__redshift_configuration__processing_configuration__processors__parameters {
    parameter_name: rstring
    parameter_value: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__redshift_configuration__processing_configuration__processors {
    parameters?: __aws_kinesis_firehose_delivery_stream__redshift_configuration__processing_configuration__processors__parameters[]
    type: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__redshift_configuration__processing_configuration {
    enabled?: rboolean
    processors?: __aws_kinesis_firehose_delivery_stream__redshift_configuration__processing_configuration__processors[]
}

export interface __aws_kinesis_firehose_delivery_stream__redshift_configuration__s3_backup_configuration__cloudwatch_logging_options {
    enabled?: rboolean
    log_group_name?: rstring
    log_stream_name?: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__redshift_configuration__s3_backup_configuration {
    bucket_arn: rstring
    buffer_interval?: rnumber
    buffer_size?: rnumber
    cloudwatch_logging_options?: __aws_kinesis_firehose_delivery_stream__redshift_configuration__s3_backup_configuration__cloudwatch_logging_options[]
    compression_format?: rstring
    kms_key_arn?: rstring
    prefix?: rstring
    role_arn: rstring
}

export interface _aws_kinesis_firehose_delivery_stream__redshift_configuration {
    cloudwatch_logging_options?: __aws_kinesis_firehose_delivery_stream__redshift_configuration__cloudwatch_logging_options[]
    cluster_jdbcurl: rstring
    copy_options?: rstring
    data_table_columns?: rstring
    data_table_name: rstring
    password: rstring
    processing_configuration?: __aws_kinesis_firehose_delivery_stream__redshift_configuration__processing_configuration[]
    retry_duration?: rnumber
    role_arn: rstring
    s3_backup_configuration?: __aws_kinesis_firehose_delivery_stream__redshift_configuration__s3_backup_configuration[]
    s3_backup_mode?: rstring
    username: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__s3_configuration__cloudwatch_logging_options {
    enabled?: rboolean
    log_group_name?: rstring
    log_stream_name?: rstring
}

export interface _aws_kinesis_firehose_delivery_stream__s3_configuration {
    bucket_arn: rstring
    buffer_interval?: rnumber
    buffer_size?: rnumber
    cloudwatch_logging_options?: __aws_kinesis_firehose_delivery_stream__s3_configuration__cloudwatch_logging_options[]
    compression_format?: rstring
    kms_key_arn?: rstring
    prefix?: rstring
    role_arn: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__splunk_configuration__cloudwatch_logging_options {
    enabled?: rboolean
    log_group_name?: rstring
    log_stream_name?: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__splunk_configuration__processing_configuration__processors__parameters {
    parameter_name: rstring
    parameter_value: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__splunk_configuration__processing_configuration__processors {
    parameters?: __aws_kinesis_firehose_delivery_stream__splunk_configuration__processing_configuration__processors__parameters[]
    type: rstring
}

export interface __aws_kinesis_firehose_delivery_stream__splunk_configuration__processing_configuration {
    enabled?: rboolean
    processors?: __aws_kinesis_firehose_delivery_stream__splunk_configuration__processing_configuration__processors[]
}

export interface _aws_kinesis_firehose_delivery_stream__splunk_configuration {
    cloudwatch_logging_options?: __aws_kinesis_firehose_delivery_stream__splunk_configuration__cloudwatch_logging_options[]
    hec_acknowledgment_timeout?: rnumber
    hec_endpoint: rstring
    hec_endpoint_type?: rstring
    hec_token: rstring
    processing_configuration?: __aws_kinesis_firehose_delivery_stream__splunk_configuration__processing_configuration[]
    retry_duration?: rnumber
    s3_backup_mode?: rstring
}

export interface aws_kinesis_firehose_delivery_stream_config {
    arn?: rstring
    destination: rstring
    destination_id?: rstring
    elasticsearch_configuration?: _aws_kinesis_firehose_delivery_stream__elasticsearch_configuration[]
    extended_s3_configuration?: _aws_kinesis_firehose_delivery_stream__extended_s3_configuration[]
    kinesis_source_configuration?: _aws_kinesis_firehose_delivery_stream__kinesis_source_configuration[]
    name: rstring
    redshift_configuration?: _aws_kinesis_firehose_delivery_stream__redshift_configuration[]
    s3_configuration?: _aws_kinesis_firehose_delivery_stream__s3_configuration[]
    splunk_configuration?: _aws_kinesis_firehose_delivery_stream__splunk_configuration[]
    tags?: {[propName: string]: rstring}
    version_id?: rstring
}

export class aws_kinesis_firehose_delivery_stream implements Resource {
    config: aws_kinesis_firehose_delivery_stream_config
    private _is_data: boolean = false
    private _name: string = "aws_kinesis_firehose_delivery_stream"
    private _id: string;
    constructor(id: string, config: aws_kinesis_firehose_delivery_stream_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_destination(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination`)
    }
    get ref_destination_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_id`)
    }
    get ref_elasticsearch_configuration(): Reference<_aws_kinesis_firehose_delivery_stream__elasticsearch_configuration[]> {
        return new Reference(`${this._name}.${this._id}.elasticsearch_configuration`)
    }
    get ref_extended_s3_configuration(): Reference<_aws_kinesis_firehose_delivery_stream__extended_s3_configuration[]> {
        return new Reference(`${this._name}.${this._id}.extended_s3_configuration`)
    }
    get ref_kinesis_source_configuration(): Reference<_aws_kinesis_firehose_delivery_stream__kinesis_source_configuration[]> {
        return new Reference(`${this._name}.${this._id}.kinesis_source_configuration`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_redshift_configuration(): Reference<_aws_kinesis_firehose_delivery_stream__redshift_configuration[]> {
        return new Reference(`${this._name}.${this._id}.redshift_configuration`)
    }
    get ref_s3_configuration(): Reference<_aws_kinesis_firehose_delivery_stream__s3_configuration[]> {
        return new Reference(`${this._name}.${this._id}.s3_configuration`)
    }
    get ref_splunk_configuration(): Reference<_aws_kinesis_firehose_delivery_stream__splunk_configuration[]> {
        return new Reference(`${this._name}.${this._id}.splunk_configuration`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_version_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version_id`)
    }
}

export interface aws_kinesis_stream_config {
    arn?: rstring
    encryption_type?: rstring
    kms_key_id?: rstring
    name: rstring
    retention_period?: rnumber
    shard_count: rnumber
    shard_level_metrics?: rstring[]
    tags?: {[propName: string]: rstring}
}

export class aws_kinesis_stream implements Resource {
    config: aws_kinesis_stream_config
    private _is_data: boolean = false
    private _name: string = "aws_kinesis_stream"
    private _id: string;
    constructor(id: string, config: aws_kinesis_stream_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_encryption_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.encryption_type`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_retention_period(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.retention_period`)
    }
    get ref_shard_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.shard_count`)
    }
    get ref_shard_level_metrics(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.shard_level_metrics`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_kms_alias_config {
    arn?: rstring
    name?: rstring
    name_prefix?: rstring
    target_key_arn?: rstring
    target_key_id: rstring
}

export class aws_kms_alias implements Resource {
    config: aws_kms_alias_config
    private _is_data: boolean = false
    private _name: string = "aws_kms_alias"
    private _id: string;
    constructor(id: string, config: aws_kms_alias_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_target_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_key_arn`)
    }
    get ref_target_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_key_id`)
    }
}

export interface _aws_kms_grant__constraints {
    encryption_context_equals?: {[propName: string]: rstring}
    encryption_context_subset?: {[propName: string]: rstring}
}

export interface aws_kms_grant_config {
    constraints?: _aws_kms_grant__constraints[]
    grant_creation_tokens?: rstring[]
    grant_id?: rstring
    grant_token?: rstring
    grantee_principal: rstring
    key_id: rstring
    name?: rstring
    operations: rstring[]
    retire_on_delete?: rboolean
    retiring_principal?: rstring
}

export class aws_kms_grant implements Resource {
    config: aws_kms_grant_config
    private _is_data: boolean = false
    private _name: string = "aws_kms_grant"
    private _id: string;
    constructor(id: string, config: aws_kms_grant_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_constraints(): Reference<_aws_kms_grant__constraints[]> {
        return new Reference(`${this._name}.${this._id}.constraints`)
    }
    get ref_grant_creation_tokens(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.grant_creation_tokens`)
    }
    get ref_grant_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.grant_id`)
    }
    get ref_grant_token(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.grant_token`)
    }
    get ref_grantee_principal(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.grantee_principal`)
    }
    get ref_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_operations(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.operations`)
    }
    get ref_retire_on_delete(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.retire_on_delete`)
    }
    get ref_retiring_principal(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.retiring_principal`)
    }
}

export interface aws_kms_key_config {
    arn?: rstring
    deletion_window_in_days?: rnumber
    description?: rstring
    enable_key_rotation?: rboolean
    is_enabled?: rboolean
    key_id?: rstring
    key_usage?: rstring
    policy?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_kms_key implements Resource {
    config: aws_kms_key_config
    private _is_data: boolean = false
    private _name: string = "aws_kms_key"
    private _id: string;
    constructor(id: string, config: aws_kms_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_deletion_window_in_days(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.deletion_window_in_days`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_enable_key_rotation(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_key_rotation`)
    }
    get ref_is_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.is_enabled`)
    }
    get ref_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_id`)
    }
    get ref_key_usage(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_usage`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_lambda_alias__routing_config {
    additional_version_weights?: {[propName: string]: rstring}
}

export interface aws_lambda_alias_config {
    arn?: rstring
    description?: rstring
    function_name: rstring
    function_version: rstring
    invoke_arn?: rstring
    name: rstring
    routing_config?: _aws_lambda_alias__routing_config[]
}

export class aws_lambda_alias implements Resource {
    config: aws_lambda_alias_config
    private _is_data: boolean = false
    private _name: string = "aws_lambda_alias"
    private _id: string;
    constructor(id: string, config: aws_lambda_alias_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_function_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.function_name`)
    }
    get ref_function_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.function_version`)
    }
    get ref_invoke_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.invoke_arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_routing_config(): Reference<_aws_lambda_alias__routing_config[]> {
        return new Reference(`${this._name}.${this._id}.routing_config`)
    }
}

export interface aws_lambda_event_source_mapping_config {
    batch_size?: rnumber
    enabled?: rboolean
    event_source_arn: rstring
    function_arn?: rstring
    function_name: rstring
    last_modified?: rstring
    last_processing_result?: rstring
    starting_position?: rstring
    starting_position_timestamp?: rstring
    state?: rstring
    state_transition_reason?: rstring
    uuid?: rstring
}

export class aws_lambda_event_source_mapping implements Resource {
    config: aws_lambda_event_source_mapping_config
    private _is_data: boolean = false
    private _name: string = "aws_lambda_event_source_mapping"
    private _id: string;
    constructor(id: string, config: aws_lambda_event_source_mapping_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_batch_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.batch_size`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_event_source_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.event_source_arn`)
    }
    get ref_function_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.function_arn`)
    }
    get ref_function_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.function_name`)
    }
    get ref_last_modified(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_modified`)
    }
    get ref_last_processing_result(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_processing_result`)
    }
    get ref_starting_position(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.starting_position`)
    }
    get ref_starting_position_timestamp(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.starting_position_timestamp`)
    }
    get ref_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state`)
    }
    get ref_state_transition_reason(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state_transition_reason`)
    }
    get ref_uuid(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.uuid`)
    }
}

export interface _aws_lambda_function__dead_letter_config {
    target_arn: rstring
}

export interface _aws_lambda_function__environment {
    variables?: {[propName: string]: rstring}
}

export interface _aws_lambda_function__tracing_config {
    mode: rstring
}

export interface _aws_lambda_function__vpc_config {
    security_group_ids: rstring[]
    subnet_ids: rstring[]
    vpc_id?: rstring
}

export interface aws_lambda_function_config {
    arn?: rstring
    dead_letter_config?: _aws_lambda_function__dead_letter_config[]
    description?: rstring
    environment?: _aws_lambda_function__environment[]
    filename?: rstring
    function_name: rstring
    handler: rstring
    invoke_arn?: rstring
    kms_key_arn?: rstring
    last_modified?: rstring
    layers?: rstring[]
    memory_size?: rnumber
    publish?: rboolean
    qualified_arn?: rstring
    reserved_concurrent_executions?: rnumber
    role: rstring
    runtime: rstring
    s3_bucket?: rstring
    s3_key?: rstring
    s3_object_version?: rstring
    source_code_hash?: rstring
    source_code_size?: rnumber
    tags?: {[propName: string]: rstring}
    timeout?: rnumber
    tracing_config?: _aws_lambda_function__tracing_config[]
    version?: rstring
    vpc_config?: _aws_lambda_function__vpc_config[]
}

export class aws_lambda_function implements Resource {
    config: aws_lambda_function_config
    private _is_data: boolean = false
    private _name: string = "aws_lambda_function"
    private _id: string;
    constructor(id: string, config: aws_lambda_function_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_dead_letter_config(): Reference<_aws_lambda_function__dead_letter_config[]> {
        return new Reference(`${this._name}.${this._id}.dead_letter_config`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_environment(): Reference<_aws_lambda_function__environment[]> {
        return new Reference(`${this._name}.${this._id}.environment`)
    }
    get ref_filename(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.filename`)
    }
    get ref_function_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.function_name`)
    }
    get ref_handler(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.handler`)
    }
    get ref_invoke_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.invoke_arn`)
    }
    get ref_kms_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_arn`)
    }
    get ref_last_modified(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_modified`)
    }
    get ref_layers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.layers`)
    }
    get ref_memory_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.memory_size`)
    }
    get ref_publish(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.publish`)
    }
    get ref_qualified_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.qualified_arn`)
    }
    get ref_reserved_concurrent_executions(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.reserved_concurrent_executions`)
    }
    get ref_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role`)
    }
    get ref_runtime(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.runtime`)
    }
    get ref_s3_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_bucket`)
    }
    get ref_s3_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_key`)
    }
    get ref_s3_object_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_object_version`)
    }
    get ref_source_code_hash(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_code_hash`)
    }
    get ref_source_code_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.source_code_size`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.timeout`)
    }
    get ref_tracing_config(): Reference<_aws_lambda_function__tracing_config[]> {
        return new Reference(`${this._name}.${this._id}.tracing_config`)
    }
    get ref_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version`)
    }
    get ref_vpc_config(): Reference<_aws_lambda_function__vpc_config[]> {
        return new Reference(`${this._name}.${this._id}.vpc_config`)
    }
}

export interface aws_lambda_layer_version_config {
    arn?: rstring
    compatible_runtimes?: rstring[]
    created_date?: rstring
    description?: rstring
    filename?: rstring
    layer_arn?: rstring
    layer_name: rstring
    license_info?: rstring
    s3_bucket?: rstring
    s3_key?: rstring
    s3_object_version?: rstring
    source_code_hash?: rstring
    source_code_size?: rnumber
    version?: rstring
}

export class aws_lambda_layer_version implements Resource {
    config: aws_lambda_layer_version_config
    private _is_data: boolean = false
    private _name: string = "aws_lambda_layer_version"
    private _id: string;
    constructor(id: string, config: aws_lambda_layer_version_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_compatible_runtimes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.compatible_runtimes`)
    }
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_filename(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.filename`)
    }
    get ref_layer_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.layer_arn`)
    }
    get ref_layer_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.layer_name`)
    }
    get ref_license_info(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.license_info`)
    }
    get ref_s3_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_bucket`)
    }
    get ref_s3_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_key`)
    }
    get ref_s3_object_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_object_version`)
    }
    get ref_source_code_hash(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_code_hash`)
    }
    get ref_source_code_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.source_code_size`)
    }
    get ref_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version`)
    }
}

export interface aws_lambda_permission_config {
    action: rstring
    event_source_token?: rstring
    function_name: rstring
    principal: rstring
    qualifier?: rstring
    source_account?: rstring
    source_arn?: rstring
    statement_id?: rstring
    statement_id_prefix?: rstring
}

export class aws_lambda_permission implements Resource {
    config: aws_lambda_permission_config
    private _is_data: boolean = false
    private _name: string = "aws_lambda_permission"
    private _id: string;
    constructor(id: string, config: aws_lambda_permission_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_action(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.action`)
    }
    get ref_event_source_token(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.event_source_token`)
    }
    get ref_function_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.function_name`)
    }
    get ref_principal(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.principal`)
    }
    get ref_qualifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.qualifier`)
    }
    get ref_source_account(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_account`)
    }
    get ref_source_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_arn`)
    }
    get ref_statement_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.statement_id`)
    }
    get ref_statement_id_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.statement_id_prefix`)
    }
}

export interface _aws_launch_configuration__ebs_block_device {
    delete_on_termination?: rboolean
    device_name: rstring
    encrypted?: rboolean
    iops?: rnumber
    no_device?: rboolean
    snapshot_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_launch_configuration__ephemeral_block_device {
    device_name: rstring
    virtual_name: rstring
}

export interface _aws_launch_configuration__root_block_device {
    delete_on_termination?: rboolean
    iops?: rnumber
    volume_size?: rnumber
    volume_type?: rstring
}

export interface aws_launch_configuration_config {
    associate_public_ip_address?: rboolean
    ebs_block_device?: _aws_launch_configuration__ebs_block_device[]
    ebs_optimized?: rboolean
    enable_monitoring?: rboolean
    ephemeral_block_device?: _aws_launch_configuration__ephemeral_block_device[]
    iam_instance_profile?: rstring
    image_id: rstring
    instance_type: rstring
    key_name?: rstring
    name?: rstring
    name_prefix?: rstring
    placement_tenancy?: rstring
    root_block_device?: _aws_launch_configuration__root_block_device[]
    security_groups?: rstring[]
    spot_price?: rstring
    user_data?: rstring
    user_data_base64?: rstring
    vpc_classic_link_id?: rstring
    vpc_classic_link_security_groups?: rstring[]
}

export class aws_launch_configuration implements Resource {
    config: aws_launch_configuration_config
    private _is_data: boolean = false
    private _name: string = "aws_launch_configuration"
    private _id: string;
    constructor(id: string, config: aws_launch_configuration_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_associate_public_ip_address(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.associate_public_ip_address`)
    }
    get ref_ebs_block_device(): Reference<_aws_launch_configuration__ebs_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ebs_block_device`)
    }
    get ref_ebs_optimized(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ebs_optimized`)
    }
    get ref_enable_monitoring(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_monitoring`)
    }
    get ref_ephemeral_block_device(): Reference<_aws_launch_configuration__ephemeral_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ephemeral_block_device`)
    }
    get ref_iam_instance_profile(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_instance_profile`)
    }
    get ref_image_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.image_id`)
    }
    get ref_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_type`)
    }
    get ref_key_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_placement_tenancy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.placement_tenancy`)
    }
    get ref_root_block_device(): Reference<_aws_launch_configuration__root_block_device[]> {
        return new Reference(`${this._name}.${this._id}.root_block_device`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_spot_price(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.spot_price`)
    }
    get ref_user_data(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_data`)
    }
    get ref_user_data_base64(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_data_base64`)
    }
    get ref_vpc_classic_link_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_classic_link_id`)
    }
    get ref_vpc_classic_link_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_classic_link_security_groups`)
    }
}

export interface __aws_launch_template__block_device_mappings__ebs {
    delete_on_termination?: rstring
    encrypted?: rstring
    iops?: rnumber
    kms_key_id?: rstring
    snapshot_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_launch_template__block_device_mappings {
    device_name?: rstring
    ebs?: __aws_launch_template__block_device_mappings__ebs[]
    no_device?: rstring
    virtual_name?: rstring
}

export interface __aws_launch_template__capacity_reservation_specification__capacity_reservation_target {
    capacity_reservation_id?: rstring
}

export interface _aws_launch_template__capacity_reservation_specification {
    capacity_reservation_preference?: rstring
    capacity_reservation_target?: __aws_launch_template__capacity_reservation_specification__capacity_reservation_target[]
}

export interface _aws_launch_template__credit_specification {
    cpu_credits?: rstring
}

export interface _aws_launch_template__elastic_gpu_specifications {
    type: rstring
}

export interface _aws_launch_template__iam_instance_profile {
    arn?: rstring
    name?: rstring
}

export interface __aws_launch_template__instance_market_options__spot_options {
    block_duration_minutes?: rnumber
    instance_interruption_behavior?: rstring
    max_price?: rstring
    spot_instance_type?: rstring
    valid_until?: rstring
}

export interface _aws_launch_template__instance_market_options {
    market_type?: rstring
    spot_options?: __aws_launch_template__instance_market_options__spot_options[]
}

export interface _aws_launch_template__license_specification {
    license_configuration_arn: rstring
}

export interface _aws_launch_template__monitoring {
    enabled?: rboolean
}

export interface _aws_launch_template__network_interfaces {
    associate_public_ip_address?: rboolean
    delete_on_termination?: rboolean
    description?: rstring
    device_index?: rnumber
    ipv4_address_count?: rnumber
    ipv4_addresses?: rstring[]
    ipv6_address_count?: rnumber
    ipv6_addresses?: rstring[]
    network_interface_id?: rstring
    private_ip_address?: rstring
    security_groups?: rstring[]
    subnet_id?: rstring
}

export interface _aws_launch_template__placement {
    affinity?: rstring
    availability_zone?: rstring
    group_name?: rstring
    host_id?: rstring
    spread_domain?: rstring
    tenancy?: rstring
}

export interface _aws_launch_template__tag_specifications {
    resource_type?: rstring
    tags?: {[propName: string]: rstring}
}

export interface aws_launch_template_config {
    arn?: rstring
    block_device_mappings?: _aws_launch_template__block_device_mappings[]
    capacity_reservation_specification?: _aws_launch_template__capacity_reservation_specification[]
    credit_specification?: _aws_launch_template__credit_specification[]
    default_version?: rnumber
    description?: rstring
    disable_api_termination?: rboolean
    ebs_optimized?: rstring
    elastic_gpu_specifications?: _aws_launch_template__elastic_gpu_specifications[]
    iam_instance_profile?: _aws_launch_template__iam_instance_profile[]
    image_id?: rstring
    instance_initiated_shutdown_behavior?: rstring
    instance_market_options?: _aws_launch_template__instance_market_options[]
    instance_type?: rstring
    kernel_id?: rstring
    key_name?: rstring
    latest_version?: rnumber
    license_specification?: _aws_launch_template__license_specification[]
    monitoring?: _aws_launch_template__monitoring[]
    name?: rstring
    name_prefix?: rstring
    network_interfaces?: _aws_launch_template__network_interfaces[]
    placement?: _aws_launch_template__placement[]
    ram_disk_id?: rstring
    security_group_names?: rstring[]
    tag_specifications?: _aws_launch_template__tag_specifications[]
    tags?: {[propName: string]: rstring}
    user_data?: rstring
    vpc_security_group_ids?: rstring[]
}

export class aws_launch_template implements Resource {
    config: aws_launch_template_config
    private _is_data: boolean = false
    private _name: string = "aws_launch_template"
    private _id: string;
    constructor(id: string, config: aws_launch_template_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_block_device_mappings(): Reference<_aws_launch_template__block_device_mappings[]> {
        return new Reference(`${this._name}.${this._id}.block_device_mappings`)
    }
    get ref_capacity_reservation_specification(): Reference<_aws_launch_template__capacity_reservation_specification[]> {
        return new Reference(`${this._name}.${this._id}.capacity_reservation_specification`)
    }
    get ref_credit_specification(): Reference<_aws_launch_template__credit_specification[]> {
        return new Reference(`${this._name}.${this._id}.credit_specification`)
    }
    get ref_default_version(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.default_version`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_disable_api_termination(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.disable_api_termination`)
    }
    get ref_ebs_optimized(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ebs_optimized`)
    }
    get ref_elastic_gpu_specifications(): Reference<_aws_launch_template__elastic_gpu_specifications[]> {
        return new Reference(`${this._name}.${this._id}.elastic_gpu_specifications`)
    }
    get ref_iam_instance_profile(): Reference<_aws_launch_template__iam_instance_profile[]> {
        return new Reference(`${this._name}.${this._id}.iam_instance_profile`)
    }
    get ref_image_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.image_id`)
    }
    get ref_instance_initiated_shutdown_behavior(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_initiated_shutdown_behavior`)
    }
    get ref_instance_market_options(): Reference<_aws_launch_template__instance_market_options[]> {
        return new Reference(`${this._name}.${this._id}.instance_market_options`)
    }
    get ref_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_type`)
    }
    get ref_kernel_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kernel_id`)
    }
    get ref_key_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_name`)
    }
    get ref_latest_version(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.latest_version`)
    }
    get ref_license_specification(): Reference<_aws_launch_template__license_specification[]> {
        return new Reference(`${this._name}.${this._id}.license_specification`)
    }
    get ref_monitoring(): Reference<_aws_launch_template__monitoring[]> {
        return new Reference(`${this._name}.${this._id}.monitoring`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_network_interfaces(): Reference<_aws_launch_template__network_interfaces[]> {
        return new Reference(`${this._name}.${this._id}.network_interfaces`)
    }
    get ref_placement(): Reference<_aws_launch_template__placement[]> {
        return new Reference(`${this._name}.${this._id}.placement`)
    }
    get ref_ram_disk_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ram_disk_id`)
    }
    get ref_security_group_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_names`)
    }
    get ref_tag_specifications(): Reference<_aws_launch_template__tag_specifications[]> {
        return new Reference(`${this._name}.${this._id}.tag_specifications`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_user_data(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_data`)
    }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_security_group_ids`)
    }
}

export interface _aws_lb__access_logs {
    bucket: rstring
    enabled?: rboolean
    prefix?: rstring
}

export interface _aws_lb__subnet_mapping {
    allocation_id?: rstring
    subnet_id: rstring
}

export interface aws_lb_config {
    access_logs?: _aws_lb__access_logs[]
    arn?: rstring
    arn_suffix?: rstring
    dns_name?: rstring
    enable_cross_zone_load_balancing?: rboolean
    enable_deletion_protection?: rboolean
    enable_http2?: rboolean
    idle_timeout?: rnumber
    internal?: rboolean
    ip_address_type?: rstring
    load_balancer_type?: rstring
    name?: rstring
    name_prefix?: rstring
    security_groups?: rstring[]
    subnet_mapping?: _aws_lb__subnet_mapping[]
    subnets?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
    zone_id?: rstring
}

export class aws_lb implements Resource {
    config: aws_lb_config
    private _is_data: boolean = false
    private _name: string = "aws_lb"
    private _id: string;
    constructor(id: string, config: aws_lb_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_logs(): Reference<_aws_lb__access_logs[]> {
        return new Reference(`${this._name}.${this._id}.access_logs`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_arn_suffix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn_suffix`)
    }
    get ref_dns_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dns_name`)
    }
    get ref_enable_cross_zone_load_balancing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_cross_zone_load_balancing`)
    }
    get ref_enable_deletion_protection(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_deletion_protection`)
    }
    get ref_enable_http2(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_http2`)
    }
    get ref_idle_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.idle_timeout`)
    }
    get ref_internal(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.internal`)
    }
    get ref_ip_address_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ip_address_type`)
    }
    get ref_load_balancer_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer_type`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_subnet_mapping(): Reference<_aws_lb__subnet_mapping[]> {
        return new Reference(`${this._name}.${this._id}.subnet_mapping`)
    }
    get ref_subnets(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnets`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
    get ref_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.zone_id`)
    }
}

export interface aws_lb_cookie_stickiness_policy_config {
    cookie_expiration_period?: rnumber
    lb_port: rnumber
    load_balancer: rstring
    name: rstring
}

export class aws_lb_cookie_stickiness_policy implements Resource {
    config: aws_lb_cookie_stickiness_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_lb_cookie_stickiness_policy"
    private _id: string;
    constructor(id: string, config: aws_lb_cookie_stickiness_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cookie_expiration_period(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.cookie_expiration_period`)
    }
    get ref_lb_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.lb_port`)
    }
    get ref_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface __aws_lb_listener__default_action__authenticate_cognito {
    authentication_request_extra_params?: {[propName: string]: rstring}
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    user_pool_arn: rstring
    user_pool_client_id: rstring
    user_pool_domain: rstring
}

export interface __aws_lb_listener__default_action__authenticate_oidc {
    authentication_request_extra_params?: {[propName: string]: rstring}
    authorization_endpoint: rstring
    client_id: rstring
    client_secret: rstring
    issuer: rstring
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    token_endpoint: rstring
    user_info_endpoint: rstring
}

export interface __aws_lb_listener__default_action__fixed_response {
    content_type: rstring
    message_body?: rstring
    status_code?: rstring
}

export interface __aws_lb_listener__default_action__redirect {
    host?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    query?: rstring
    status_code: rstring
}

export interface _aws_lb_listener__default_action {
    authenticate_cognito?: __aws_lb_listener__default_action__authenticate_cognito[]
    authenticate_oidc?: __aws_lb_listener__default_action__authenticate_oidc[]
    fixed_response?: __aws_lb_listener__default_action__fixed_response[]
    order?: rnumber
    redirect?: __aws_lb_listener__default_action__redirect[]
    target_group_arn?: rstring
    type: rstring
}

export interface aws_lb_listener_config {
    arn?: rstring
    certificate_arn?: rstring
    default_action: _aws_lb_listener__default_action[]
    load_balancer_arn: rstring
    port: rnumber
    protocol?: rstring
    ssl_policy?: rstring
}

export class aws_lb_listener implements Resource {
    config: aws_lb_listener_config
    private _is_data: boolean = false
    private _name: string = "aws_lb_listener"
    private _id: string;
    constructor(id: string, config: aws_lb_listener_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_arn`)
    }
    get ref_default_action(): Reference<_aws_lb_listener__default_action[]> {
        return new Reference(`${this._name}.${this._id}.default_action`)
    }
    get ref_load_balancer_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer_arn`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_protocol(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.protocol`)
    }
    get ref_ssl_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ssl_policy`)
    }
}

export interface aws_lb_listener_certificate_config {
    certificate_arn: rstring
    listener_arn: rstring
}

export class aws_lb_listener_certificate implements Resource {
    config: aws_lb_listener_certificate_config
    private _is_data: boolean = false
    private _name: string = "aws_lb_listener_certificate"
    private _id: string;
    constructor(id: string, config: aws_lb_listener_certificate_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate_arn`)
    }
    get ref_listener_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.listener_arn`)
    }
}

export interface __aws_lb_listener_rule__action__authenticate_cognito {
    authentication_request_extra_params?: {[propName: string]: rstring}
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    user_pool_arn: rstring
    user_pool_client_id: rstring
    user_pool_domain: rstring
}

export interface __aws_lb_listener_rule__action__authenticate_oidc {
    authentication_request_extra_params?: {[propName: string]: rstring}
    authorization_endpoint: rstring
    client_id: rstring
    client_secret: rstring
    issuer: rstring
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    token_endpoint: rstring
    user_info_endpoint: rstring
}

export interface __aws_lb_listener_rule__action__fixed_response {
    content_type: rstring
    message_body?: rstring
    status_code?: rstring
}

export interface __aws_lb_listener_rule__action__redirect {
    host?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    query?: rstring
    status_code: rstring
}

export interface _aws_lb_listener_rule__action {
    authenticate_cognito?: __aws_lb_listener_rule__action__authenticate_cognito[]
    authenticate_oidc?: __aws_lb_listener_rule__action__authenticate_oidc[]
    fixed_response?: __aws_lb_listener_rule__action__fixed_response[]
    order?: rnumber
    redirect?: __aws_lb_listener_rule__action__redirect[]
    target_group_arn?: rstring
    type: rstring
}

export interface _aws_lb_listener_rule__condition {
    field?: rstring
    values?: rstring[]
}

export interface aws_lb_listener_rule_config {
    action: _aws_lb_listener_rule__action[]
    arn?: rstring
    condition: _aws_lb_listener_rule__condition[]
    listener_arn: rstring
    priority?: rnumber
}

export class aws_lb_listener_rule implements Resource {
    config: aws_lb_listener_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_lb_listener_rule"
    private _id: string;
    constructor(id: string, config: aws_lb_listener_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_action(): Reference<_aws_lb_listener_rule__action[]> {
        return new Reference(`${this._name}.${this._id}.action`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_condition(): Reference<_aws_lb_listener_rule__condition[]> {
        return new Reference(`${this._name}.${this._id}.condition`)
    }
    get ref_listener_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.listener_arn`)
    }
    get ref_priority(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.priority`)
    }
}

export interface _aws_lb_ssl_negotiation_policy__attribute {
    name: rstring
    value: rstring
}

export interface aws_lb_ssl_negotiation_policy_config {
    attribute?: _aws_lb_ssl_negotiation_policy__attribute[]
    lb_port: rnumber
    load_balancer: rstring
    name: rstring
}

export class aws_lb_ssl_negotiation_policy implements Resource {
    config: aws_lb_ssl_negotiation_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_lb_ssl_negotiation_policy"
    private _id: string;
    constructor(id: string, config: aws_lb_ssl_negotiation_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_attribute(): Reference<_aws_lb_ssl_negotiation_policy__attribute[]> {
        return new Reference(`${this._name}.${this._id}.attribute`)
    }
    get ref_lb_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.lb_port`)
    }
    get ref_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_lb_target_group__health_check {
    healthy_threshold?: rnumber
    interval?: rnumber
    matcher?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    timeout?: rnumber
    unhealthy_threshold?: rnumber
}

export interface _aws_lb_target_group__stickiness {
    cookie_duration?: rnumber
    enabled?: rboolean
    type: rstring
}

export interface aws_lb_target_group_config {
    arn?: rstring
    arn_suffix?: rstring
    deregistration_delay?: rnumber
    health_check?: _aws_lb_target_group__health_check[]
    name?: rstring
    name_prefix?: rstring
    port?: rnumber
    protocol?: rstring
    proxy_protocol_v2?: rboolean
    slow_start?: rnumber
    stickiness?: _aws_lb_target_group__stickiness[]
    tags?: {[propName: string]: rstring}
    target_type?: rstring
    vpc_id?: rstring
}

export class aws_lb_target_group implements Resource {
    config: aws_lb_target_group_config
    private _is_data: boolean = false
    private _name: string = "aws_lb_target_group"
    private _id: string;
    constructor(id: string, config: aws_lb_target_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_arn_suffix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn_suffix`)
    }
    get ref_deregistration_delay(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.deregistration_delay`)
    }
    get ref_health_check(): Reference<_aws_lb_target_group__health_check[]> {
        return new Reference(`${this._name}.${this._id}.health_check`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_protocol(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.protocol`)
    }
    get ref_proxy_protocol_v2(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.proxy_protocol_v2`)
    }
    get ref_slow_start(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.slow_start`)
    }
    get ref_stickiness(): Reference<_aws_lb_target_group__stickiness[]> {
        return new Reference(`${this._name}.${this._id}.stickiness`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_target_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_type`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_lb_target_group_attachment_config {
    availability_zone?: rstring
    port?: rnumber
    target_group_arn: rstring
    target_id: rstring
}

export class aws_lb_target_group_attachment implements Resource {
    config: aws_lb_target_group_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_lb_target_group_attachment"
    private _id: string;
    constructor(id: string, config: aws_lb_target_group_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_target_group_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_group_arn`)
    }
    get ref_target_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_id`)
    }
}

export interface aws_licensemanager_association_config {
    license_configuration_arn: rstring
    resource_arn: rstring
}

export class aws_licensemanager_association implements Resource {
    config: aws_licensemanager_association_config
    private _is_data: boolean = false
    private _name: string = "aws_licensemanager_association"
    private _id: string;
    constructor(id: string, config: aws_licensemanager_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_license_configuration_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.license_configuration_arn`)
    }
    get ref_resource_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_arn`)
    }
}

export interface aws_licensemanager_license_configuration_config {
    description?: rstring
    license_count?: rnumber
    license_count_hard_limit?: rboolean
    license_counting_type: rstring
    license_rules?: rstring[]
    name: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_licensemanager_license_configuration implements Resource {
    config: aws_licensemanager_license_configuration_config
    private _is_data: boolean = false
    private _name: string = "aws_licensemanager_license_configuration"
    private _id: string;
    constructor(id: string, config: aws_licensemanager_license_configuration_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_license_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.license_count`)
    }
    get ref_license_count_hard_limit(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.license_count_hard_limit`)
    }
    get ref_license_counting_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.license_counting_type`)
    }
    get ref_license_rules(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.license_rules`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_lightsail_domain_config {
    arn?: rstring
    domain_name: rstring
}

export class aws_lightsail_domain implements Resource {
    config: aws_lightsail_domain_config
    private _is_data: boolean = false
    private _name: string = "aws_lightsail_domain"
    private _id: string;
    constructor(id: string, config: aws_lightsail_domain_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name`)
    }
}

export interface aws_lightsail_instance_config {
    arn?: rstring
    availability_zone: rstring
    blueprint_id: rstring
    bundle_id: rstring
    cpu_count?: rnumber
    created_at?: rstring
    ipv6_address?: rstring
    is_static_ip?: rboolean
    key_pair_name?: rstring
    name: rstring
    private_ip_address?: rstring
    public_ip_address?: rstring
    ram_size?: rnumber
    user_data?: rstring
    username?: rstring
}

export class aws_lightsail_instance implements Resource {
    config: aws_lightsail_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_lightsail_instance"
    private _id: string;
    constructor(id: string, config: aws_lightsail_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_blueprint_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.blueprint_id`)
    }
    get ref_bundle_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bundle_id`)
    }
    get ref_cpu_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.cpu_count`)
    }
    get ref_created_at(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_at`)
    }
    get ref_ipv6_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_address`)
    }
    get ref_is_static_ip(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.is_static_ip`)
    }
    get ref_key_pair_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_pair_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_private_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_ip_address`)
    }
    get ref_public_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_ip_address`)
    }
    get ref_ram_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.ram_size`)
    }
    get ref_user_data(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_data`)
    }
    get ref_username(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.username`)
    }
}

export interface aws_lightsail_key_pair_config {
    arn?: rstring
    encrypted_fingerprint?: rstring
    encrypted_private_key?: rstring
    fingerprint?: rstring
    name?: rstring
    name_prefix?: rstring
    pgp_key?: rstring
    private_key?: rstring
    public_key?: rstring
}

export class aws_lightsail_key_pair implements Resource {
    config: aws_lightsail_key_pair_config
    private _is_data: boolean = false
    private _name: string = "aws_lightsail_key_pair"
    private _id: string;
    constructor(id: string, config: aws_lightsail_key_pair_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_encrypted_fingerprint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.encrypted_fingerprint`)
    }
    get ref_encrypted_private_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.encrypted_private_key`)
    }
    get ref_fingerprint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.fingerprint`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_pgp_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.pgp_key`)
    }
    get ref_private_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_key`)
    }
    get ref_public_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_key`)
    }
}

export interface aws_lightsail_static_ip_config {
    arn?: rstring
    ip_address?: rstring
    name: rstring
    support_code?: rstring
}

export class aws_lightsail_static_ip implements Resource {
    config: aws_lightsail_static_ip_config
    private _is_data: boolean = false
    private _name: string = "aws_lightsail_static_ip"
    private _id: string;
    constructor(id: string, config: aws_lightsail_static_ip_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ip_address`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_support_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.support_code`)
    }
}

export interface aws_lightsail_static_ip_attachment_config {
    instance_name: rstring
    static_ip_name: rstring
}

export class aws_lightsail_static_ip_attachment implements Resource {
    config: aws_lightsail_static_ip_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_lightsail_static_ip_attachment"
    private _id: string;
    constructor(id: string, config: aws_lightsail_static_ip_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_instance_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_name`)
    }
    get ref_static_ip_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.static_ip_name`)
    }
}

export interface aws_load_balancer_backend_server_policy_config {
    instance_port: rnumber
    load_balancer_name: rstring
    policy_names?: rstring[]
}

export class aws_load_balancer_backend_server_policy implements Resource {
    config: aws_load_balancer_backend_server_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_load_balancer_backend_server_policy"
    private _id: string;
    constructor(id: string, config: aws_load_balancer_backend_server_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_instance_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_port`)
    }
    get ref_load_balancer_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer_name`)
    }
    get ref_policy_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.policy_names`)
    }
}

export interface aws_load_balancer_listener_policy_config {
    load_balancer_name: rstring
    load_balancer_port: rnumber
    policy_names?: rstring[]
}

export class aws_load_balancer_listener_policy implements Resource {
    config: aws_load_balancer_listener_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_load_balancer_listener_policy"
    private _id: string;
    constructor(id: string, config: aws_load_balancer_listener_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_load_balancer_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer_name`)
    }
    get ref_load_balancer_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.load_balancer_port`)
    }
    get ref_policy_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.policy_names`)
    }
}

export interface _aws_load_balancer_policy__policy_attribute {
    name?: rstring
    value?: rstring
}

export interface aws_load_balancer_policy_config {
    load_balancer_name: rstring
    policy_attribute?: _aws_load_balancer_policy__policy_attribute[]
    policy_name: rstring
    policy_type_name: rstring
}

export class aws_load_balancer_policy implements Resource {
    config: aws_load_balancer_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_load_balancer_policy"
    private _id: string;
    constructor(id: string, config: aws_load_balancer_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_load_balancer_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer_name`)
    }
    get ref_policy_attribute(): Reference<_aws_load_balancer_policy__policy_attribute[]> {
        return new Reference(`${this._name}.${this._id}.policy_attribute`)
    }
    get ref_policy_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_name`)
    }
    get ref_policy_type_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_type_name`)
    }
}

export interface aws_macie_member_account_association_config {
    member_account_id: rstring
}

export class aws_macie_member_account_association implements Resource {
    config: aws_macie_member_account_association_config
    private _is_data: boolean = false
    private _name: string = "aws_macie_member_account_association"
    private _id: string;
    constructor(id: string, config: aws_macie_member_account_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_member_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.member_account_id`)
    }
}

export interface _aws_macie_s3_bucket_association__classification_type {
    continuous?: rstring
    one_time?: rstring
}

export interface aws_macie_s3_bucket_association_config {
    bucket_name: rstring
    classification_type?: _aws_macie_s3_bucket_association__classification_type[]
    member_account_id?: rstring
    prefix?: rstring
}

export class aws_macie_s3_bucket_association implements Resource {
    config: aws_macie_s3_bucket_association_config
    private _is_data: boolean = false
    private _name: string = "aws_macie_s3_bucket_association"
    private _id: string;
    constructor(id: string, config: aws_macie_s3_bucket_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_bucket_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket_name`)
    }
    get ref_classification_type(): Reference<_aws_macie_s3_bucket_association__classification_type[]> {
        return new Reference(`${this._name}.${this._id}.classification_type`)
    }
    get ref_member_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.member_account_id`)
    }
    get ref_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.prefix`)
    }
}

export interface aws_main_route_table_association_config {
    original_route_table_id?: rstring
    route_table_id: rstring
    vpc_id: rstring
}

export class aws_main_route_table_association implements Resource {
    config: aws_main_route_table_association_config
    private _is_data: boolean = false
    private _name: string = "aws_main_route_table_association"
    private _id: string;
    constructor(id: string, config: aws_main_route_table_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_original_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.original_route_table_id`)
    }
    get ref_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.route_table_id`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface __aws_media_package_channel__hls_ingest__ingest_endpoints {
    password?: rstring
    url?: rstring
    username?: rstring
}

export interface _aws_media_package_channel__hls_ingest {
    ingest_endpoints?: __aws_media_package_channel__hls_ingest__ingest_endpoints[]
}

export interface aws_media_package_channel_config {
    arn?: rstring
    channel_id: rstring
    description?: rstring
    hls_ingest?: _aws_media_package_channel__hls_ingest[]
}

export class aws_media_package_channel implements Resource {
    config: aws_media_package_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_media_package_channel"
    private _id: string;
    constructor(id: string, config: aws_media_package_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_channel_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.channel_id`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_hls_ingest(): Reference<_aws_media_package_channel__hls_ingest[]> {
        return new Reference(`${this._name}.${this._id}.hls_ingest`)
    }
}

export interface aws_media_store_container_config {
    arn?: rstring
    endpoint?: rstring
    name: rstring
}

export class aws_media_store_container implements Resource {
    config: aws_media_store_container_config
    private _is_data: boolean = false
    private _name: string = "aws_media_store_container"
    private _id: string;
    constructor(id: string, config: aws_media_store_container_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_media_store_container_policy_config {
    container_name: rstring
    policy: rstring
}

export class aws_media_store_container_policy implements Resource {
    config: aws_media_store_container_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_media_store_container_policy"
    private _id: string;
    constructor(id: string, config: aws_media_store_container_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_container_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.container_name`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
}

export interface _aws_mq_broker__configuration {
    id?: rstring
    revision?: rnumber
}

export interface _aws_mq_broker__instances {
    console_url?: rstring
    endpoints?: rstring[]
    ip_address?: rstring
}

export interface _aws_mq_broker__logs {
    audit?: rboolean
    general?: rboolean
}

export interface _aws_mq_broker__maintenance_window_start_time {
    day_of_week: rstring
    time_of_day: rstring
    time_zone: rstring
}

export interface _aws_mq_broker__user {
    console_access?: rboolean
    groups?: rstring[]
    password: rstring
    username: rstring
}

export interface aws_mq_broker_config {
    apply_immediately?: rboolean
    arn?: rstring
    auto_minor_version_upgrade?: rboolean
    broker_name: rstring
    configuration?: _aws_mq_broker__configuration[]
    deployment_mode?: rstring
    engine_type: rstring
    engine_version: rstring
    host_instance_type: rstring
    instances?: _aws_mq_broker__instances[]
    logs?: _aws_mq_broker__logs[]
    maintenance_window_start_time?: _aws_mq_broker__maintenance_window_start_time[]
    publicly_accessible?: rboolean
    security_groups: rstring[]
    subnet_ids?: rstring[]
    tags?: {[propName: string]: rstring}
    user: _aws_mq_broker__user[]
}

export class aws_mq_broker implements Resource {
    config: aws_mq_broker_config
    private _is_data: boolean = false
    private _name: string = "aws_mq_broker"
    private _id: string;
    constructor(id: string, config: aws_mq_broker_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_auto_minor_version_upgrade(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_minor_version_upgrade`)
    }
    get ref_broker_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.broker_name`)
    }
    get ref_configuration(): Reference<_aws_mq_broker__configuration[]> {
        return new Reference(`${this._name}.${this._id}.configuration`)
    }
    get ref_deployment_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.deployment_mode`)
    }
    get ref_engine_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_type`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_host_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.host_instance_type`)
    }
    get ref_instances(): Reference<_aws_mq_broker__instances[]> {
        return new Reference(`${this._name}.${this._id}.instances`)
    }
    get ref_logs(): Reference<_aws_mq_broker__logs[]> {
        return new Reference(`${this._name}.${this._id}.logs`)
    }
    get ref_maintenance_window_start_time(): Reference<_aws_mq_broker__maintenance_window_start_time[]> {
        return new Reference(`${this._name}.${this._id}.maintenance_window_start_time`)
    }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.publicly_accessible`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_user(): Reference<_aws_mq_broker__user[]> {
        return new Reference(`${this._name}.${this._id}.user`)
    }
}

export interface aws_mq_configuration_config {
    arn?: rstring
    data: rstring
    description?: rstring
    engine_type: rstring
    engine_version: rstring
    latest_revision?: rnumber
    name: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_mq_configuration implements Resource {
    config: aws_mq_configuration_config
    private _is_data: boolean = false
    private _name: string = "aws_mq_configuration"
    private _id: string;
    constructor(id: string, config: aws_mq_configuration_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_data(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.data`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_engine_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_type`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_latest_revision(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.latest_revision`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_nat_gateway_config {
    allocation_id: rstring
    network_interface_id?: rstring
    private_ip?: rstring
    public_ip?: rstring
    subnet_id: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_nat_gateway implements Resource {
    config: aws_nat_gateway_config
    private _is_data: boolean = false
    private _name: string = "aws_nat_gateway"
    private _id: string;
    constructor(id: string, config: aws_nat_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocation_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.allocation_id`)
    }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface_id`)
    }
    get ref_private_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_ip`)
    }
    get ref_public_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_ip`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_neptune_cluster_config {
    apply_immediately?: rboolean
    arn?: rstring
    availability_zones?: rstring[]
    backup_retention_period?: rnumber
    cluster_identifier?: rstring
    cluster_identifier_prefix?: rstring
    cluster_members?: rstring[]
    cluster_resource_id?: rstring
    endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    final_snapshot_identifier?: rstring
    hosted_zone_id?: rstring
    iam_database_authentication_enabled?: rboolean
    iam_roles?: rstring[]
    kms_key_arn?: rstring
    neptune_cluster_parameter_group_name?: rstring
    neptune_subnet_group_name?: rstring
    port?: rnumber
    preferred_backup_window?: rstring
    preferred_maintenance_window?: rstring
    reader_endpoint?: rstring
    replication_source_identifier?: rstring
    skip_final_snapshot?: rboolean
    snapshot_identifier?: rstring
    storage_encrypted?: rboolean
    tags?: {[propName: string]: rstring}
    vpc_security_group_ids?: rstring[]
}

export class aws_neptune_cluster implements Resource {
    config: aws_neptune_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_neptune_cluster"
    private _id: string;
    constructor(id: string, config: aws_neptune_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_backup_retention_period(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.backup_retention_period`)
    }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier`)
    }
    get ref_cluster_identifier_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier_prefix`)
    }
    get ref_cluster_members(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.cluster_members`)
    }
    get ref_cluster_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_resource_id`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_final_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.final_snapshot_identifier`)
    }
    get ref_hosted_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hosted_zone_id`)
    }
    get ref_iam_database_authentication_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.iam_database_authentication_enabled`)
    }
    get ref_iam_roles(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.iam_roles`)
    }
    get ref_kms_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_arn`)
    }
    get ref_neptune_cluster_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.neptune_cluster_parameter_group_name`)
    }
    get ref_neptune_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.neptune_subnet_group_name`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_preferred_backup_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_backup_window`)
    }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_maintenance_window`)
    }
    get ref_reader_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reader_endpoint`)
    }
    get ref_replication_source_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_source_identifier`)
    }
    get ref_skip_final_snapshot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.skip_final_snapshot`)
    }
    get ref_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_identifier`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_security_group_ids`)
    }
}

export interface aws_neptune_cluster_instance_config {
    address?: rstring
    apply_immediately?: rboolean
    arn?: rstring
    auto_minor_version_upgrade?: rboolean
    availability_zone?: rstring
    cluster_identifier: rstring
    dbi_resource_id?: rstring
    endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    identifier?: rstring
    identifier_prefix?: rstring
    instance_class: rstring
    kms_key_arn?: rstring
    neptune_parameter_group_name?: rstring
    neptune_subnet_group_name?: rstring
    port?: rnumber
    preferred_backup_window?: rstring
    preferred_maintenance_window?: rstring
    promotion_tier?: rnumber
    publicly_accessible?: rboolean
    storage_encrypted?: rboolean
    tags?: {[propName: string]: rstring}
    writer?: rboolean
}

export class aws_neptune_cluster_instance implements Resource {
    config: aws_neptune_cluster_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_neptune_cluster_instance"
    private _id: string;
    constructor(id: string, config: aws_neptune_cluster_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.address`)
    }
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_auto_minor_version_upgrade(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_minor_version_upgrade`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier`)
    }
    get ref_dbi_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dbi_resource_id`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identifier`)
    }
    get ref_identifier_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identifier_prefix`)
    }
    get ref_instance_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_class`)
    }
    get ref_kms_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_arn`)
    }
    get ref_neptune_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.neptune_parameter_group_name`)
    }
    get ref_neptune_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.neptune_subnet_group_name`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_preferred_backup_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_backup_window`)
    }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_maintenance_window`)
    }
    get ref_promotion_tier(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.promotion_tier`)
    }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.publicly_accessible`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_writer(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.writer`)
    }
}

export interface _aws_neptune_cluster_parameter_group__parameter {
    apply_method?: rstring
    name: rstring
    value: rstring
}

export interface aws_neptune_cluster_parameter_group_config {
    arn?: rstring
    description?: rstring
    family: rstring
    name?: rstring
    name_prefix?: rstring
    parameter?: _aws_neptune_cluster_parameter_group__parameter[]
    tags?: {[propName: string]: rstring}
}

export class aws_neptune_cluster_parameter_group implements Resource {
    config: aws_neptune_cluster_parameter_group_config
    private _is_data: boolean = false
    private _name: string = "aws_neptune_cluster_parameter_group"
    private _id: string;
    constructor(id: string, config: aws_neptune_cluster_parameter_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.family`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_parameter(): Reference<_aws_neptune_cluster_parameter_group__parameter[]> {
        return new Reference(`${this._name}.${this._id}.parameter`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_neptune_cluster_snapshot_config {
    allocated_storage?: rnumber
    availability_zones?: rstring[]
    db_cluster_identifier: rstring
    db_cluster_snapshot_arn?: rstring
    db_cluster_snapshot_identifier: rstring
    engine?: rstring
    engine_version?: rstring
    kms_key_id?: rstring
    license_model?: rstring
    port?: rnumber
    snapshot_type?: rstring
    source_db_cluster_snapshot_arn?: rstring
    status?: rstring
    storage_encrypted?: rboolean
    vpc_id?: rstring
}

export class aws_neptune_cluster_snapshot implements Resource {
    config: aws_neptune_cluster_snapshot_config
    private _is_data: boolean = false
    private _name: string = "aws_neptune_cluster_snapshot"
    private _id: string;
    constructor(id: string, config: aws_neptune_cluster_snapshot_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocated_storage(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.allocated_storage`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_db_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_identifier`)
    }
    get ref_db_cluster_snapshot_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_snapshot_arn`)
    }
    get ref_db_cluster_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_snapshot_identifier`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_license_model(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.license_model`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_snapshot_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_type`)
    }
    get ref_source_db_cluster_snapshot_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_db_cluster_snapshot_arn`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_neptune_event_subscription_config {
    arn?: rstring
    customer_aws_id?: rstring
    enabled?: rboolean
    event_categories?: rstring[]
    name?: rstring
    name_prefix?: rstring
    sns_topic_arn: rstring
    source_ids?: rstring[]
    source_type?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_neptune_event_subscription implements Resource {
    config: aws_neptune_event_subscription_config
    private _is_data: boolean = false
    private _name: string = "aws_neptune_event_subscription"
    private _id: string;
    constructor(id: string, config: aws_neptune_event_subscription_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_customer_aws_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_aws_id`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_event_categories(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.event_categories`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_sns_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sns_topic_arn`)
    }
    get ref_source_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.source_ids`)
    }
    get ref_source_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_type`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_neptune_parameter_group__parameter {
    apply_method?: rstring
    name: rstring
    value: rstring
}

export interface aws_neptune_parameter_group_config {
    arn?: rstring
    description?: rstring
    family: rstring
    name: rstring
    parameter?: _aws_neptune_parameter_group__parameter[]
    tags?: {[propName: string]: rstring}
}

export class aws_neptune_parameter_group implements Resource {
    config: aws_neptune_parameter_group_config
    private _is_data: boolean = false
    private _name: string = "aws_neptune_parameter_group"
    private _id: string;
    constructor(id: string, config: aws_neptune_parameter_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.family`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_parameter(): Reference<_aws_neptune_parameter_group__parameter[]> {
        return new Reference(`${this._name}.${this._id}.parameter`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_neptune_subnet_group_config {
    arn?: rstring
    description?: rstring
    name?: rstring
    name_prefix?: rstring
    subnet_ids: rstring[]
    tags?: {[propName: string]: rstring}
}

export class aws_neptune_subnet_group implements Resource {
    config: aws_neptune_subnet_group_config
    private _is_data: boolean = false
    private _name: string = "aws_neptune_subnet_group"
    private _id: string;
    constructor(id: string, config: aws_neptune_subnet_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_network_acl__egress {
    action: rstring
    cidr_block?: rstring
    from_port: rnumber
    icmp_code?: rnumber
    icmp_type?: rnumber
    ipv6_cidr_block?: rstring
    protocol: rstring
    rule_no: rnumber
    to_port: rnumber
}

export interface _aws_network_acl__ingress {
    action: rstring
    cidr_block?: rstring
    from_port: rnumber
    icmp_code?: rnumber
    icmp_type?: rnumber
    ipv6_cidr_block?: rstring
    protocol: rstring
    rule_no: rnumber
    to_port: rnumber
}

export interface aws_network_acl_config {
    egress?: _aws_network_acl__egress[]
    ingress?: _aws_network_acl__ingress[]
    owner_id?: rstring
    subnet_id?: rstring
    subnet_ids?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id: rstring
}

export class aws_network_acl implements Resource {
    config: aws_network_acl_config
    private _is_data: boolean = false
    private _name: string = "aws_network_acl"
    private _id: string;
    constructor(id: string, config: aws_network_acl_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_egress(): Reference<_aws_network_acl__egress[]> {
        return new Reference(`${this._name}.${this._id}.egress`)
    }
    get ref_ingress(): Reference<_aws_network_acl__ingress[]> {
        return new Reference(`${this._name}.${this._id}.ingress`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_network_acl_rule_config {
    cidr_block?: rstring
    egress?: rboolean
    from_port?: rnumber
    icmp_code?: rstring
    icmp_type?: rstring
    ipv6_cidr_block?: rstring
    network_acl_id: rstring
    protocol: rstring
    rule_action: rstring
    rule_number: rnumber
    to_port?: rnumber
}

export class aws_network_acl_rule implements Resource {
    config: aws_network_acl_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_network_acl_rule"
    private _id: string;
    constructor(id: string, config: aws_network_acl_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cidr_block`)
    }
    get ref_egress(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.egress`)
    }
    get ref_from_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.from_port`)
    }
    get ref_icmp_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.icmp_code`)
    }
    get ref_icmp_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.icmp_type`)
    }
    get ref_ipv6_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_cidr_block`)
    }
    get ref_network_acl_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_acl_id`)
    }
    get ref_protocol(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.protocol`)
    }
    get ref_rule_action(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rule_action`)
    }
    get ref_rule_number(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.rule_number`)
    }
    get ref_to_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.to_port`)
    }
}

export interface _aws_network_interface__attachment {
    attachment_id?: rstring
    device_index: rnumber
    instance: rstring
}

export interface aws_network_interface_config {
    attachment?: _aws_network_interface__attachment[]
    description?: rstring
    private_dns_name?: rstring
    private_ip?: rstring
    private_ips?: rstring[]
    private_ips_count?: rnumber
    security_groups?: rstring[]
    source_dest_check?: rboolean
    subnet_id: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_network_interface implements Resource {
    config: aws_network_interface_config
    private _is_data: boolean = false
    private _name: string = "aws_network_interface"
    private _id: string;
    constructor(id: string, config: aws_network_interface_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_attachment(): Reference<_aws_network_interface__attachment[]> {
        return new Reference(`${this._name}.${this._id}.attachment`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_private_dns_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_dns_name`)
    }
    get ref_private_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_ip`)
    }
    get ref_private_ips(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.private_ips`)
    }
    get ref_private_ips_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.private_ips_count`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_source_dest_check(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.source_dest_check`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_network_interface_attachment_config {
    attachment_id?: rstring
    device_index: rnumber
    instance_id: rstring
    network_interface_id: rstring
    status?: rstring
}

export class aws_network_interface_attachment implements Resource {
    config: aws_network_interface_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_network_interface_attachment"
    private _id: string;
    constructor(id: string, config: aws_network_interface_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_attachment_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.attachment_id`)
    }
    get ref_device_index(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.device_index`)
    }
    get ref_instance_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_id`)
    }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface_id`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
}

export interface aws_network_interface_sg_attachment_config {
    network_interface_id: rstring
    security_group_id: rstring
}

export class aws_network_interface_sg_attachment implements Resource {
    config: aws_network_interface_sg_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_network_interface_sg_attachment"
    private _id: string;
    constructor(id: string, config: aws_network_interface_sg_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface_id`)
    }
    get ref_security_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.security_group_id`)
    }
}

export interface _aws_opsworks_application__app_source {
    password?: rstring
    revision?: rstring
    ssh_key?: rstring
    type: rstring
    url?: rstring
    username?: rstring
}

export interface _aws_opsworks_application__environment {
    key: rstring
    secure?: rboolean
    value: rstring
}

export interface _aws_opsworks_application__ssl_configuration {
    certificate: rstring
    chain?: rstring
    private_key: rstring
}

export interface aws_opsworks_application_config {
    app_source?: _aws_opsworks_application__app_source[]
    auto_bundle_on_deploy?: rstring
    aws_flow_ruby_settings?: rstring
    data_source_arn?: rstring
    data_source_database_name?: rstring
    data_source_type?: rstring
    description?: rstring
    document_root?: rstring
    domains?: rstring[]
    enable_ssl?: rboolean
    environment?: _aws_opsworks_application__environment[]
    name: rstring
    rails_env?: rstring
    short_name?: rstring
    ssl_configuration?: _aws_opsworks_application__ssl_configuration[]
    stack_id: rstring
    type: rstring
}

export class aws_opsworks_application implements Resource {
    config: aws_opsworks_application_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_application"
    private _id: string;
    constructor(id: string, config: aws_opsworks_application_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_app_source(): Reference<_aws_opsworks_application__app_source[]> {
        return new Reference(`${this._name}.${this._id}.app_source`)
    }
    get ref_auto_bundle_on_deploy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.auto_bundle_on_deploy`)
    }
    get ref_aws_flow_ruby_settings(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.aws_flow_ruby_settings`)
    }
    get ref_data_source_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.data_source_arn`)
    }
    get ref_data_source_database_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.data_source_database_name`)
    }
    get ref_data_source_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.data_source_type`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_document_root(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.document_root`)
    }
    get ref_domains(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.domains`)
    }
    get ref_enable_ssl(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_ssl`)
    }
    get ref_environment(): Reference<_aws_opsworks_application__environment[]> {
        return new Reference(`${this._name}.${this._id}.environment`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_rails_env(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rails_env`)
    }
    get ref_short_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.short_name`)
    }
    get ref_ssl_configuration(): Reference<_aws_opsworks_application__ssl_configuration[]> {
        return new Reference(`${this._name}.${this._id}.ssl_configuration`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface _aws_opsworks_custom_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_custom_layer_config {
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_custom_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    name: rstring
    short_name: rstring
    stack_id: rstring
    system_packages?: rstring[]
    use_ebs_optimized_instances?: rboolean
}

export class aws_opsworks_custom_layer implements Resource {
    config: aws_opsworks_custom_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_custom_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_custom_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_custom_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_short_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.short_name`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
}

export interface _aws_opsworks_ganglia_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_ganglia_layer_config {
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_ganglia_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    name?: rstring
    password: rstring
    stack_id: rstring
    system_packages?: rstring[]
    url?: rstring
    use_ebs_optimized_instances?: rboolean
    username?: rstring
}

export class aws_opsworks_ganglia_layer implements Resource {
    config: aws_opsworks_ganglia_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_ganglia_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_ganglia_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_ganglia_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.password`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.url`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
    get ref_username(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.username`)
    }
}

export interface _aws_opsworks_haproxy_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_haproxy_layer_config {
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_haproxy_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    healthcheck_method?: rstring
    healthcheck_url?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    name?: rstring
    stack_id: rstring
    stats_enabled?: rboolean
    stats_password: rstring
    stats_url?: rstring
    stats_user?: rstring
    system_packages?: rstring[]
    use_ebs_optimized_instances?: rboolean
}

export class aws_opsworks_haproxy_layer implements Resource {
    config: aws_opsworks_haproxy_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_haproxy_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_haproxy_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_haproxy_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_healthcheck_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.healthcheck_method`)
    }
    get ref_healthcheck_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.healthcheck_url`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_stats_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.stats_enabled`)
    }
    get ref_stats_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stats_password`)
    }
    get ref_stats_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stats_url`)
    }
    get ref_stats_user(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stats_user`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
}

export interface _aws_opsworks_instance__ebs_block_device {
    delete_on_termination?: rboolean
    device_name: rstring
    iops?: rnumber
    snapshot_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_opsworks_instance__ephemeral_block_device {
    device_name: rstring
    virtual_name: rstring
}

export interface _aws_opsworks_instance__root_block_device {
    delete_on_termination?: rboolean
    iops?: rnumber
    volume_size?: rnumber
    volume_type?: rstring
}

export interface aws_opsworks_instance_config {
    agent_version?: rstring
    ami_id?: rstring
    architecture?: rstring
    auto_scaling_type?: rstring
    availability_zone?: rstring
    created_at?: rstring
    delete_ebs?: rboolean
    delete_eip?: rboolean
    ebs_block_device?: _aws_opsworks_instance__ebs_block_device[]
    ebs_optimized?: rboolean
    ec2_instance_id?: rstring
    ecs_cluster_arn?: rstring
    elastic_ip?: rstring
    ephemeral_block_device?: _aws_opsworks_instance__ephemeral_block_device[]
    hostname?: rstring
    infrastructure_class?: rstring
    install_updates_on_boot?: rboolean
    instance_profile_arn?: rstring
    instance_type?: rstring
    last_service_error_id?: rstring
    layer_ids: rstring[]
    os?: rstring
    platform?: rstring
    private_dns?: rstring
    private_ip?: rstring
    public_dns?: rstring
    public_ip?: rstring
    registered_by?: rstring
    reported_agent_version?: rstring
    reported_os_family?: rstring
    reported_os_name?: rstring
    reported_os_version?: rstring
    root_block_device?: _aws_opsworks_instance__root_block_device[]
    root_device_type?: rstring
    root_device_volume_id?: rstring
    security_group_ids?: rstring[]
    ssh_host_dsa_key_fingerprint?: rstring
    ssh_host_rsa_key_fingerprint?: rstring
    ssh_key_name?: rstring
    stack_id: rstring
    state?: rstring
    status?: rstring
    subnet_id?: rstring
    tenancy?: rstring
    virtualization_type?: rstring
}

export class aws_opsworks_instance implements Resource {
    config: aws_opsworks_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_instance"
    private _id: string;
    constructor(id: string, config: aws_opsworks_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_agent_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.agent_version`)
    }
    get ref_ami_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ami_id`)
    }
    get ref_architecture(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.architecture`)
    }
    get ref_auto_scaling_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.auto_scaling_type`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_created_at(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_at`)
    }
    get ref_delete_ebs(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.delete_ebs`)
    }
    get ref_delete_eip(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.delete_eip`)
    }
    get ref_ebs_block_device(): Reference<_aws_opsworks_instance__ebs_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ebs_block_device`)
    }
    get ref_ebs_optimized(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ebs_optimized`)
    }
    get ref_ec2_instance_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ec2_instance_id`)
    }
    get ref_ecs_cluster_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ecs_cluster_arn`)
    }
    get ref_elastic_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_ip`)
    }
    get ref_ephemeral_block_device(): Reference<_aws_opsworks_instance__ephemeral_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ephemeral_block_device`)
    }
    get ref_hostname(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hostname`)
    }
    get ref_infrastructure_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.infrastructure_class`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_profile_arn`)
    }
    get ref_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_type`)
    }
    get ref_last_service_error_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_service_error_id`)
    }
    get ref_layer_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.layer_ids`)
    }
    get ref_os(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.os`)
    }
    get ref_platform(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.platform`)
    }
    get ref_private_dns(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_dns`)
    }
    get ref_private_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_ip`)
    }
    get ref_public_dns(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_dns`)
    }
    get ref_public_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_ip`)
    }
    get ref_registered_by(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.registered_by`)
    }
    get ref_reported_agent_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reported_agent_version`)
    }
    get ref_reported_os_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reported_os_family`)
    }
    get ref_reported_os_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reported_os_name`)
    }
    get ref_reported_os_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reported_os_version`)
    }
    get ref_root_block_device(): Reference<_aws_opsworks_instance__root_block_device[]> {
        return new Reference(`${this._name}.${this._id}.root_block_device`)
    }
    get ref_root_device_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_device_type`)
    }
    get ref_root_device_volume_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_device_volume_id`)
    }
    get ref_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_ids`)
    }
    get ref_ssh_host_dsa_key_fingerprint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ssh_host_dsa_key_fingerprint`)
    }
    get ref_ssh_host_rsa_key_fingerprint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ssh_host_rsa_key_fingerprint`)
    }
    get ref_ssh_key_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ssh_key_name`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_tenancy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tenancy`)
    }
    get ref_virtualization_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.virtualization_type`)
    }
}

export interface _aws_opsworks_java_app_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_java_app_layer_config {
    app_server?: rstring
    app_server_version?: rstring
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_java_app_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    jvm_options?: rstring
    jvm_type?: rstring
    jvm_version?: rstring
    name?: rstring
    stack_id: rstring
    system_packages?: rstring[]
    use_ebs_optimized_instances?: rboolean
}

export class aws_opsworks_java_app_layer implements Resource {
    config: aws_opsworks_java_app_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_java_app_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_java_app_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_app_server(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.app_server`)
    }
    get ref_app_server_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.app_server_version`)
    }
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_java_app_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_jvm_options(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.jvm_options`)
    }
    get ref_jvm_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.jvm_type`)
    }
    get ref_jvm_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.jvm_version`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
}

export interface _aws_opsworks_memcached_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_memcached_layer_config {
    allocated_memory?: rnumber
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_memcached_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    name?: rstring
    stack_id: rstring
    system_packages?: rstring[]
    use_ebs_optimized_instances?: rboolean
}

export class aws_opsworks_memcached_layer implements Resource {
    config: aws_opsworks_memcached_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_memcached_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_memcached_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocated_memory(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.allocated_memory`)
    }
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_memcached_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
}

export interface _aws_opsworks_mysql_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_mysql_layer_config {
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_mysql_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    name?: rstring
    root_password?: rstring
    root_password_on_all_instances?: rboolean
    stack_id: rstring
    system_packages?: rstring[]
    use_ebs_optimized_instances?: rboolean
}

export class aws_opsworks_mysql_layer implements Resource {
    config: aws_opsworks_mysql_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_mysql_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_mysql_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_mysql_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_root_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.root_password`)
    }
    get ref_root_password_on_all_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.root_password_on_all_instances`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
}

export interface _aws_opsworks_nodejs_app_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_nodejs_app_layer_config {
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_nodejs_app_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    name?: rstring
    nodejs_version?: rstring
    stack_id: rstring
    system_packages?: rstring[]
    use_ebs_optimized_instances?: rboolean
}

export class aws_opsworks_nodejs_app_layer implements Resource {
    config: aws_opsworks_nodejs_app_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_nodejs_app_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_nodejs_app_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_nodejs_app_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_nodejs_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.nodejs_version`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
}

export interface aws_opsworks_permission_config {
    allow_ssh?: rboolean
    allow_sudo?: rboolean
    level?: rstring
    stack_id?: rstring
    user_arn: rstring
}

export class aws_opsworks_permission implements Resource {
    config: aws_opsworks_permission_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_permission"
    private _id: string;
    constructor(id: string, config: aws_opsworks_permission_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allow_ssh(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_ssh`)
    }
    get ref_allow_sudo(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_sudo`)
    }
    get ref_level(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.level`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_user_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_arn`)
    }
}

export interface _aws_opsworks_php_app_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_php_app_layer_config {
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_php_app_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    name?: rstring
    stack_id: rstring
    system_packages?: rstring[]
    use_ebs_optimized_instances?: rboolean
}

export class aws_opsworks_php_app_layer implements Resource {
    config: aws_opsworks_php_app_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_php_app_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_php_app_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_php_app_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
}

export interface _aws_opsworks_rails_app_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_rails_app_layer_config {
    app_server?: rstring
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    bundler_version?: rstring
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_rails_app_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    manage_bundler?: rboolean
    name?: rstring
    passenger_version?: rstring
    ruby_version?: rstring
    rubygems_version?: rstring
    stack_id: rstring
    system_packages?: rstring[]
    use_ebs_optimized_instances?: rboolean
}

export class aws_opsworks_rails_app_layer implements Resource {
    config: aws_opsworks_rails_app_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_rails_app_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_rails_app_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_app_server(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.app_server`)
    }
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_bundler_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bundler_version`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_rails_app_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_manage_bundler(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.manage_bundler`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_passenger_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.passenger_version`)
    }
    get ref_ruby_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ruby_version`)
    }
    get ref_rubygems_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rubygems_version`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
}

export interface aws_opsworks_rds_db_instance_config {
    db_password: rstring
    db_user: rstring
    rds_db_instance_arn: rstring
    stack_id: rstring
}

export class aws_opsworks_rds_db_instance implements Resource {
    config: aws_opsworks_rds_db_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_rds_db_instance"
    private _id: string;
    constructor(id: string, config: aws_opsworks_rds_db_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_db_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_password`)
    }
    get ref_db_user(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_user`)
    }
    get ref_rds_db_instance_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rds_db_instance_arn`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
}

export interface _aws_opsworks_stack__custom_cookbooks_source {
    password?: rstring
    revision?: rstring
    ssh_key?: rstring
    type: rstring
    url: rstring
    username?: rstring
}

export interface aws_opsworks_stack_config {
    agent_version?: rstring
    arn?: rstring
    berkshelf_version?: rstring
    color?: rstring
    configuration_manager_name?: rstring
    configuration_manager_version?: rstring
    custom_cookbooks_source?: _aws_opsworks_stack__custom_cookbooks_source[]
    custom_json?: rstring
    default_availability_zone?: rstring
    default_instance_profile_arn: rstring
    default_os?: rstring
    default_root_device_type?: rstring
    default_ssh_key_name?: rstring
    default_subnet_id?: rstring
    hostname_theme?: rstring
    manage_berkshelf?: rboolean
    name: rstring
    region: rstring
    service_role_arn: rstring
    stack_endpoint?: rstring
    tags?: {[propName: string]: rstring}
    use_custom_cookbooks?: rboolean
    use_opsworks_security_groups?: rboolean
    vpc_id?: rstring
}

export class aws_opsworks_stack implements Resource {
    config: aws_opsworks_stack_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_stack"
    private _id: string;
    constructor(id: string, config: aws_opsworks_stack_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_agent_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.agent_version`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_berkshelf_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.berkshelf_version`)
    }
    get ref_color(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.color`)
    }
    get ref_configuration_manager_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configuration_manager_name`)
    }
    get ref_configuration_manager_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configuration_manager_version`)
    }
    get ref_custom_cookbooks_source(): Reference<_aws_opsworks_stack__custom_cookbooks_source[]> {
        return new Reference(`${this._name}.${this._id}.custom_cookbooks_source`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_default_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_availability_zone`)
    }
    get ref_default_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_instance_profile_arn`)
    }
    get ref_default_os(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_os`)
    }
    get ref_default_root_device_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_root_device_type`)
    }
    get ref_default_ssh_key_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_ssh_key_name`)
    }
    get ref_default_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_subnet_id`)
    }
    get ref_hostname_theme(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hostname_theme`)
    }
    get ref_manage_berkshelf(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.manage_berkshelf`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.region`)
    }
    get ref_service_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_role_arn`)
    }
    get ref_stack_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_endpoint`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_use_custom_cookbooks(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_custom_cookbooks`)
    }
    get ref_use_opsworks_security_groups(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_opsworks_security_groups`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface _aws_opsworks_static_web_layer__ebs_volume {
    iops?: rnumber
    mount_point: rstring
    number_of_disks: rnumber
    raid_level?: rstring
    size: rnumber
    type?: rstring
}

export interface aws_opsworks_static_web_layer_config {
    auto_assign_elastic_ips?: rboolean
    auto_assign_public_ips?: rboolean
    auto_healing?: rboolean
    custom_configure_recipes?: rstring[]
    custom_deploy_recipes?: rstring[]
    custom_instance_profile_arn?: rstring
    custom_json?: rstring
    custom_security_group_ids?: rstring[]
    custom_setup_recipes?: rstring[]
    custom_shutdown_recipes?: rstring[]
    custom_undeploy_recipes?: rstring[]
    drain_elb_on_shutdown?: rboolean
    ebs_volume?: _aws_opsworks_static_web_layer__ebs_volume[]
    elastic_load_balancer?: rstring
    install_updates_on_boot?: rboolean
    instance_shutdown_timeout?: rnumber
    name?: rstring
    stack_id: rstring
    system_packages?: rstring[]
    use_ebs_optimized_instances?: rboolean
}

export class aws_opsworks_static_web_layer implements Resource {
    config: aws_opsworks_static_web_layer_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_static_web_layer"
    private _id: string;
    constructor(id: string, config: aws_opsworks_static_web_layer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_auto_assign_elastic_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_elastic_ips`)
    }
    get ref_auto_assign_public_ips(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_assign_public_ips`)
    }
    get ref_auto_healing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_healing`)
    }
    get ref_custom_configure_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_configure_recipes`)
    }
    get ref_custom_deploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_deploy_recipes`)
    }
    get ref_custom_instance_profile_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_instance_profile_arn`)
    }
    get ref_custom_json(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_json`)
    }
    get ref_custom_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_security_group_ids`)
    }
    get ref_custom_setup_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_setup_recipes`)
    }
    get ref_custom_shutdown_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_shutdown_recipes`)
    }
    get ref_custom_undeploy_recipes(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.custom_undeploy_recipes`)
    }
    get ref_drain_elb_on_shutdown(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.drain_elb_on_shutdown`)
    }
    get ref_ebs_volume(): Reference<_aws_opsworks_static_web_layer__ebs_volume[]> {
        return new Reference(`${this._name}.${this._id}.ebs_volume`)
    }
    get ref_elastic_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_load_balancer`)
    }
    get ref_install_updates_on_boot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.install_updates_on_boot`)
    }
    get ref_instance_shutdown_timeout(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_shutdown_timeout`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_stack_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.stack_id`)
    }
    get ref_system_packages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.system_packages`)
    }
    get ref_use_ebs_optimized_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.use_ebs_optimized_instances`)
    }
}

export interface aws_opsworks_user_profile_config {
    allow_self_management?: rboolean
    ssh_public_key?: rstring
    ssh_username: rstring
    user_arn: rstring
}

export class aws_opsworks_user_profile implements Resource {
    config: aws_opsworks_user_profile_config
    private _is_data: boolean = false
    private _name: string = "aws_opsworks_user_profile"
    private _id: string;
    constructor(id: string, config: aws_opsworks_user_profile_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allow_self_management(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_self_management`)
    }
    get ref_ssh_public_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ssh_public_key`)
    }
    get ref_ssh_username(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ssh_username`)
    }
    get ref_user_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_arn`)
    }
}

export interface aws_organizations_account_config {
    arn?: rstring
    email: rstring
    iam_user_access_to_billing?: rstring
    joined_method?: rstring
    joined_timestamp?: rstring
    name: rstring
    role_name?: rstring
    status?: rstring
}

export class aws_organizations_account implements Resource {
    config: aws_organizations_account_config
    private _is_data: boolean = false
    private _name: string = "aws_organizations_account"
    private _id: string;
    constructor(id: string, config: aws_organizations_account_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_email(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.email`)
    }
    get ref_iam_user_access_to_billing(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_user_access_to_billing`)
    }
    get ref_joined_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.joined_method`)
    }
    get ref_joined_timestamp(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.joined_timestamp`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_role_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_name`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
}

export interface aws_organizations_organization_config {
    arn?: rstring
    aws_service_access_principals?: rstring[]
    feature_set?: rstring
    master_account_arn?: rstring
    master_account_email?: rstring
    master_account_id?: rstring
}

export class aws_organizations_organization implements Resource {
    config: aws_organizations_organization_config
    private _is_data: boolean = false
    private _name: string = "aws_organizations_organization"
    private _id: string;
    constructor(id: string, config: aws_organizations_organization_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_aws_service_access_principals(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.aws_service_access_principals`)
    }
    get ref_feature_set(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.feature_set`)
    }
    get ref_master_account_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_account_arn`)
    }
    get ref_master_account_email(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_account_email`)
    }
    get ref_master_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_account_id`)
    }
}

export interface aws_organizations_policy_config {
    arn?: rstring
    content: rstring
    description?: rstring
    name: rstring
    type?: rstring
}

export class aws_organizations_policy implements Resource {
    config: aws_organizations_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_organizations_policy"
    private _id: string;
    constructor(id: string, config: aws_organizations_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_content(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_organizations_policy_attachment_config {
    policy_id: rstring
    target_id: rstring
}

export class aws_organizations_policy_attachment implements Resource {
    config: aws_organizations_policy_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_organizations_policy_attachment"
    private _id: string;
    constructor(id: string, config: aws_organizations_policy_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_policy_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy_id`)
    }
    get ref_target_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_id`)
    }
}

export interface aws_pinpoint_adm_channel_config {
    application_id: rstring
    client_id: rstring
    client_secret: rstring
    enabled?: rboolean
}

export class aws_pinpoint_adm_channel implements Resource {
    config: aws_pinpoint_adm_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_adm_channel"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_adm_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_client_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.client_id`)
    }
    get ref_client_secret(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.client_secret`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
}

export interface aws_pinpoint_apns_channel_config {
    application_id: rstring
    bundle_id?: rstring
    certificate?: rstring
    default_authentication_method?: rstring
    enabled?: rboolean
    private_key?: rstring
    team_id?: rstring
    token_key?: rstring
    token_key_id?: rstring
}

export class aws_pinpoint_apns_channel implements Resource {
    config: aws_pinpoint_apns_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_apns_channel"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_apns_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_bundle_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bundle_id`)
    }
    get ref_certificate(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate`)
    }
    get ref_default_authentication_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_authentication_method`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_private_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_key`)
    }
    get ref_team_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.team_id`)
    }
    get ref_token_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.token_key`)
    }
    get ref_token_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.token_key_id`)
    }
}

export interface aws_pinpoint_apns_sandbox_channel_config {
    application_id: rstring
    bundle_id?: rstring
    certificate?: rstring
    default_authentication_method?: rstring
    enabled?: rboolean
    private_key?: rstring
    team_id?: rstring
    token_key?: rstring
    token_key_id?: rstring
}

export class aws_pinpoint_apns_sandbox_channel implements Resource {
    config: aws_pinpoint_apns_sandbox_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_apns_sandbox_channel"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_apns_sandbox_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_bundle_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bundle_id`)
    }
    get ref_certificate(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate`)
    }
    get ref_default_authentication_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_authentication_method`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_private_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_key`)
    }
    get ref_team_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.team_id`)
    }
    get ref_token_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.token_key`)
    }
    get ref_token_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.token_key_id`)
    }
}

export interface aws_pinpoint_apns_voip_channel_config {
    application_id: rstring
    bundle_id?: rstring
    certificate?: rstring
    default_authentication_method?: rstring
    enabled?: rboolean
    private_key?: rstring
    team_id?: rstring
    token_key?: rstring
    token_key_id?: rstring
}

export class aws_pinpoint_apns_voip_channel implements Resource {
    config: aws_pinpoint_apns_voip_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_apns_voip_channel"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_apns_voip_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_bundle_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bundle_id`)
    }
    get ref_certificate(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate`)
    }
    get ref_default_authentication_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_authentication_method`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_private_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_key`)
    }
    get ref_team_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.team_id`)
    }
    get ref_token_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.token_key`)
    }
    get ref_token_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.token_key_id`)
    }
}

export interface aws_pinpoint_apns_voip_sandbox_channel_config {
    application_id: rstring
    bundle_id?: rstring
    certificate?: rstring
    default_authentication_method?: rstring
    enabled?: rboolean
    private_key?: rstring
    team_id?: rstring
    token_key?: rstring
    token_key_id?: rstring
}

export class aws_pinpoint_apns_voip_sandbox_channel implements Resource {
    config: aws_pinpoint_apns_voip_sandbox_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_apns_voip_sandbox_channel"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_apns_voip_sandbox_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_bundle_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bundle_id`)
    }
    get ref_certificate(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.certificate`)
    }
    get ref_default_authentication_method(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_authentication_method`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_private_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_key`)
    }
    get ref_team_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.team_id`)
    }
    get ref_token_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.token_key`)
    }
    get ref_token_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.token_key_id`)
    }
}

export interface _aws_pinpoint_app__campaign_hook {
    lambda_function_name?: rstring
    mode?: rstring
    web_url?: rstring
}

export interface _aws_pinpoint_app__limits {
    daily?: rnumber
    maximum_duration?: rnumber
    messages_per_second?: rnumber
    total?: rnumber
}

export interface _aws_pinpoint_app__quiet_time {
    end?: rstring
    start?: rstring
}

export interface aws_pinpoint_app_config {
    application_id?: rstring
    campaign_hook?: _aws_pinpoint_app__campaign_hook[]
    limits?: _aws_pinpoint_app__limits[]
    name?: rstring
    name_prefix?: rstring
    quiet_time?: _aws_pinpoint_app__quiet_time[]
}

export class aws_pinpoint_app implements Resource {
    config: aws_pinpoint_app_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_app"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_app_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_campaign_hook(): Reference<_aws_pinpoint_app__campaign_hook[]> {
        return new Reference(`${this._name}.${this._id}.campaign_hook`)
    }
    get ref_limits(): Reference<_aws_pinpoint_app__limits[]> {
        return new Reference(`${this._name}.${this._id}.limits`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_quiet_time(): Reference<_aws_pinpoint_app__quiet_time[]> {
        return new Reference(`${this._name}.${this._id}.quiet_time`)
    }
}

export interface aws_pinpoint_baidu_channel_config {
    api_key: rstring
    application_id: rstring
    enabled?: rboolean
    secret_key: rstring
}

export class aws_pinpoint_baidu_channel implements Resource {
    config: aws_pinpoint_baidu_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_baidu_channel"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_baidu_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_api_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.api_key`)
    }
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_secret_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.secret_key`)
    }
}

export interface aws_pinpoint_email_channel_config {
    application_id: rstring
    enabled?: rboolean
    from_address: rstring
    identity: rstring
    messages_per_second?: rnumber
    role_arn: rstring
}

export class aws_pinpoint_email_channel implements Resource {
    config: aws_pinpoint_email_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_email_channel"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_email_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_from_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.from_address`)
    }
    get ref_identity(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identity`)
    }
    get ref_messages_per_second(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.messages_per_second`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
}

export interface aws_pinpoint_event_stream_config {
    application_id: rstring
    destination_stream_arn: rstring
    role_arn: rstring
}

export class aws_pinpoint_event_stream implements Resource {
    config: aws_pinpoint_event_stream_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_event_stream"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_event_stream_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_destination_stream_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_stream_arn`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
}

export interface aws_pinpoint_gcm_channel_config {
    api_key: rstring
    application_id: rstring
    enabled?: rboolean
}

export class aws_pinpoint_gcm_channel implements Resource {
    config: aws_pinpoint_gcm_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_gcm_channel"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_gcm_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_api_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.api_key`)
    }
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
}

export interface aws_pinpoint_sms_channel_config {
    application_id: rstring
    enabled?: rboolean
    promotional_messages_per_second?: rnumber
    sender_id?: rstring
    short_code?: rstring
    transactional_messages_per_second?: rnumber
}

export class aws_pinpoint_sms_channel implements Resource {
    config: aws_pinpoint_sms_channel_config
    private _is_data: boolean = false
    private _name: string = "aws_pinpoint_sms_channel"
    private _id: string;
    constructor(id: string, config: aws_pinpoint_sms_channel_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_id`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_promotional_messages_per_second(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.promotional_messages_per_second`)
    }
    get ref_sender_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sender_id`)
    }
    get ref_short_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.short_code`)
    }
    get ref_transactional_messages_per_second(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.transactional_messages_per_second`)
    }
}

export interface aws_placement_group_config {
    name: rstring
    strategy: rstring
}

export class aws_placement_group implements Resource {
    config: aws_placement_group_config
    private _is_data: boolean = false
    private _name: string = "aws_placement_group"
    private _id: string;
    constructor(id: string, config: aws_placement_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_strategy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.strategy`)
    }
}

export interface aws_proxy_protocol_policy_config {
    instance_ports: rstring[]
    load_balancer: rstring
}

export class aws_proxy_protocol_policy implements Resource {
    config: aws_proxy_protocol_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_proxy_protocol_policy"
    private _id: string;
    constructor(id: string, config: aws_proxy_protocol_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_instance_ports(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.instance_ports`)
    }
    get ref_load_balancer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.load_balancer`)
    }
}

export interface aws_ram_principal_association_config {
    principal: rstring
    resource_share_arn: rstring
}

export class aws_ram_principal_association implements Resource {
    config: aws_ram_principal_association_config
    private _is_data: boolean = false
    private _name: string = "aws_ram_principal_association"
    private _id: string;
    constructor(id: string, config: aws_ram_principal_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_principal(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.principal`)
    }
    get ref_resource_share_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_share_arn`)
    }
}

export interface aws_ram_resource_association_config {
    resource_arn: rstring
    resource_share_arn: rstring
}

export class aws_ram_resource_association implements Resource {
    config: aws_ram_resource_association_config
    private _is_data: boolean = false
    private _name: string = "aws_ram_resource_association"
    private _id: string;
    constructor(id: string, config: aws_ram_resource_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_resource_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_arn`)
    }
    get ref_resource_share_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_share_arn`)
    }
}

export interface aws_ram_resource_share_config {
    allow_external_principals?: rboolean
    name: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_ram_resource_share implements Resource {
    config: aws_ram_resource_share_config
    private _is_data: boolean = false
    private _name: string = "aws_ram_resource_share"
    private _id: string;
    constructor(id: string, config: aws_ram_resource_share_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allow_external_principals(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_external_principals`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_rds_cluster__s3_import {
    bucket_name: rstring
    bucket_prefix?: rstring
    ingestion_role: rstring
    source_engine: rstring
    source_engine_version: rstring
}

export interface _aws_rds_cluster__scaling_configuration {
    auto_pause?: rboolean
    max_capacity?: rnumber
    min_capacity?: rnumber
    seconds_until_auto_pause?: rnumber
}

export interface aws_rds_cluster_config {
    apply_immediately?: rboolean
    arn?: rstring
    availability_zones?: rstring[]
    backtrack_window?: rnumber
    backup_retention_period?: rnumber
    cluster_identifier?: rstring
    cluster_identifier_prefix?: rstring
    cluster_members?: rstring[]
    cluster_resource_id?: rstring
    database_name?: rstring
    db_cluster_parameter_group_name?: rstring
    db_subnet_group_name?: rstring
    deletion_protection?: rboolean
    enabled_cloudwatch_logs_exports?: rstring[]
    endpoint?: rstring
    engine?: rstring
    engine_mode?: rstring
    engine_version?: rstring
    final_snapshot_identifier?: rstring
    global_cluster_identifier?: rstring
    hosted_zone_id?: rstring
    iam_database_authentication_enabled?: rboolean
    iam_roles?: rstring[]
    kms_key_id?: rstring
    master_password?: rstring
    master_username?: rstring
    port?: rnumber
    preferred_backup_window?: rstring
    preferred_maintenance_window?: rstring
    reader_endpoint?: rstring
    replication_source_identifier?: rstring
    s3_import?: _aws_rds_cluster__s3_import[]
    scaling_configuration?: _aws_rds_cluster__scaling_configuration[]
    skip_final_snapshot?: rboolean
    snapshot_identifier?: rstring
    source_region?: rstring
    storage_encrypted?: rboolean
    tags?: {[propName: string]: rstring}
    vpc_security_group_ids?: rstring[]
}

export class aws_rds_cluster implements Resource {
    config: aws_rds_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_rds_cluster"
    private _id: string;
    constructor(id: string, config: aws_rds_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_backtrack_window(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.backtrack_window`)
    }
    get ref_backup_retention_period(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.backup_retention_period`)
    }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier`)
    }
    get ref_cluster_identifier_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier_prefix`)
    }
    get ref_cluster_members(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.cluster_members`)
    }
    get ref_cluster_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_resource_id`)
    }
    get ref_database_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.database_name`)
    }
    get ref_db_cluster_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_cluster_parameter_group_name`)
    }
    get ref_db_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_subnet_group_name`)
    }
    get ref_deletion_protection(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.deletion_protection`)
    }
    get ref_enabled_cloudwatch_logs_exports(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.enabled_cloudwatch_logs_exports`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_mode(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_mode`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_final_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.final_snapshot_identifier`)
    }
    get ref_global_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.global_cluster_identifier`)
    }
    get ref_hosted_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hosted_zone_id`)
    }
    get ref_iam_database_authentication_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.iam_database_authentication_enabled`)
    }
    get ref_iam_roles(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.iam_roles`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_master_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_password`)
    }
    get ref_master_username(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_username`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_preferred_backup_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_backup_window`)
    }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_maintenance_window`)
    }
    get ref_reader_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reader_endpoint`)
    }
    get ref_replication_source_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.replication_source_identifier`)
    }
    get ref_s3_import(): Reference<_aws_rds_cluster__s3_import[]> {
        return new Reference(`${this._name}.${this._id}.s3_import`)
    }
    get ref_scaling_configuration(): Reference<_aws_rds_cluster__scaling_configuration[]> {
        return new Reference(`${this._name}.${this._id}.scaling_configuration`)
    }
    get ref_skip_final_snapshot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.skip_final_snapshot`)
    }
    get ref_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_identifier`)
    }
    get ref_source_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_region`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_security_group_ids`)
    }
}

export interface aws_rds_cluster_endpoint_config {
    arn?: rstring
    cluster_endpoint_identifier: rstring
    cluster_identifier: rstring
    custom_endpoint_type: rstring
    endpoint?: rstring
    excluded_members?: rstring[]
    static_members?: rstring[]
}

export class aws_rds_cluster_endpoint implements Resource {
    config: aws_rds_cluster_endpoint_config
    private _is_data: boolean = false
    private _name: string = "aws_rds_cluster_endpoint"
    private _id: string;
    constructor(id: string, config: aws_rds_cluster_endpoint_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_cluster_endpoint_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_endpoint_identifier`)
    }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier`)
    }
    get ref_custom_endpoint_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.custom_endpoint_type`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_excluded_members(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.excluded_members`)
    }
    get ref_static_members(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.static_members`)
    }
}

export interface aws_rds_cluster_instance_config {
    apply_immediately?: rboolean
    arn?: rstring
    auto_minor_version_upgrade?: rboolean
    availability_zone?: rstring
    cluster_identifier: rstring
    copy_tags_to_snapshot?: rboolean
    db_parameter_group_name?: rstring
    db_subnet_group_name?: rstring
    dbi_resource_id?: rstring
    endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    identifier?: rstring
    identifier_prefix?: rstring
    instance_class: rstring
    kms_key_id?: rstring
    monitoring_interval?: rnumber
    monitoring_role_arn?: rstring
    performance_insights_enabled?: rboolean
    performance_insights_kms_key_id?: rstring
    port?: rnumber
    preferred_backup_window?: rstring
    preferred_maintenance_window?: rstring
    promotion_tier?: rnumber
    publicly_accessible?: rboolean
    storage_encrypted?: rboolean
    tags?: {[propName: string]: rstring}
    writer?: rboolean
}

export class aws_rds_cluster_instance implements Resource {
    config: aws_rds_cluster_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_rds_cluster_instance"
    private _id: string;
    constructor(id: string, config: aws_rds_cluster_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_apply_immediately(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.apply_immediately`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_auto_minor_version_upgrade(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_minor_version_upgrade`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier`)
    }
    get ref_copy_tags_to_snapshot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.copy_tags_to_snapshot`)
    }
    get ref_db_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_parameter_group_name`)
    }
    get ref_db_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.db_subnet_group_name`)
    }
    get ref_dbi_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dbi_resource_id`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identifier`)
    }
    get ref_identifier_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identifier_prefix`)
    }
    get ref_instance_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_class`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_monitoring_interval(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.monitoring_interval`)
    }
    get ref_monitoring_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.monitoring_role_arn`)
    }
    get ref_performance_insights_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.performance_insights_enabled`)
    }
    get ref_performance_insights_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.performance_insights_kms_key_id`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_preferred_backup_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_backup_window`)
    }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_maintenance_window`)
    }
    get ref_promotion_tier(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.promotion_tier`)
    }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.publicly_accessible`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_writer(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.writer`)
    }
}

export interface _aws_rds_cluster_parameter_group__parameter {
    apply_method?: rstring
    name: rstring
    value: rstring
}

export interface aws_rds_cluster_parameter_group_config {
    arn?: rstring
    description?: rstring
    family: rstring
    name?: rstring
    name_prefix?: rstring
    parameter?: _aws_rds_cluster_parameter_group__parameter[]
    tags?: {[propName: string]: rstring}
}

export class aws_rds_cluster_parameter_group implements Resource {
    config: aws_rds_cluster_parameter_group_config
    private _is_data: boolean = false
    private _name: string = "aws_rds_cluster_parameter_group"
    private _id: string;
    constructor(id: string, config: aws_rds_cluster_parameter_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.family`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_parameter(): Reference<_aws_rds_cluster_parameter_group__parameter[]> {
        return new Reference(`${this._name}.${this._id}.parameter`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_rds_global_cluster_config {
    arn?: rstring
    database_name?: rstring
    deletion_protection?: rboolean
    engine?: rstring
    engine_version?: rstring
    global_cluster_identifier: rstring
    global_cluster_resource_id?: rstring
    storage_encrypted?: rboolean
}

export class aws_rds_global_cluster implements Resource {
    config: aws_rds_global_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_rds_global_cluster"
    private _id: string;
    constructor(id: string, config: aws_rds_global_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_database_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.database_name`)
    }
    get ref_deletion_protection(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.deletion_protection`)
    }
    get ref_engine(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine`)
    }
    get ref_engine_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.engine_version`)
    }
    get ref_global_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.global_cluster_identifier`)
    }
    get ref_global_cluster_resource_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.global_cluster_resource_id`)
    }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.storage_encrypted`)
    }
}

export interface _aws_redshift_cluster__logging {
    bucket_name?: rstring
    enable: rboolean
    s3_key_prefix?: rstring
}

export interface _aws_redshift_cluster__snapshot_copy {
    destination_region: rstring
    grant_name?: rstring
    retention_period?: rnumber
}

export interface aws_redshift_cluster_config {
    allow_version_upgrade?: rboolean
    automated_snapshot_retention_period?: rnumber
    availability_zone?: rstring
    bucket_name?: rstring
    cluster_identifier: rstring
    cluster_parameter_group_name?: rstring
    cluster_public_key?: rstring
    cluster_revision_number?: rstring
    cluster_security_groups?: rstring[]
    cluster_subnet_group_name?: rstring
    cluster_type?: rstring
    cluster_version?: rstring
    database_name?: rstring
    dns_name?: rstring
    elastic_ip?: rstring
    enable_logging?: rboolean
    encrypted?: rboolean
    endpoint?: rstring
    enhanced_vpc_routing?: rboolean
    final_snapshot_identifier?: rstring
    iam_roles?: rstring[]
    kms_key_id?: rstring
    logging?: _aws_redshift_cluster__logging[]
    master_password?: rstring
    master_username?: rstring
    node_type: rstring
    number_of_nodes?: rnumber
    owner_account?: rstring
    port?: rnumber
    preferred_maintenance_window?: rstring
    publicly_accessible?: rboolean
    s3_key_prefix?: rstring
    skip_final_snapshot?: rboolean
    snapshot_cluster_identifier?: rstring
    snapshot_copy?: _aws_redshift_cluster__snapshot_copy[]
    snapshot_identifier?: rstring
    tags?: {[propName: string]: rstring}
    vpc_security_group_ids?: rstring[]
}

export class aws_redshift_cluster implements Resource {
    config: aws_redshift_cluster_config
    private _is_data: boolean = false
    private _name: string = "aws_redshift_cluster"
    private _id: string;
    constructor(id: string, config: aws_redshift_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allow_version_upgrade(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_version_upgrade`)
    }
    get ref_automated_snapshot_retention_period(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.automated_snapshot_retention_period`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_bucket_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket_name`)
    }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_identifier`)
    }
    get ref_cluster_parameter_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_parameter_group_name`)
    }
    get ref_cluster_public_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_public_key`)
    }
    get ref_cluster_revision_number(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_revision_number`)
    }
    get ref_cluster_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.cluster_security_groups`)
    }
    get ref_cluster_subnet_group_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_subnet_group_name`)
    }
    get ref_cluster_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_type`)
    }
    get ref_cluster_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cluster_version`)
    }
    get ref_database_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.database_name`)
    }
    get ref_dns_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dns_name`)
    }
    get ref_elastic_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.elastic_ip`)
    }
    get ref_enable_logging(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_logging`)
    }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.encrypted`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_enhanced_vpc_routing(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enhanced_vpc_routing`)
    }
    get ref_final_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.final_snapshot_identifier`)
    }
    get ref_iam_roles(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.iam_roles`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_logging(): Reference<_aws_redshift_cluster__logging[]> {
        return new Reference(`${this._name}.${this._id}.logging`)
    }
    get ref_master_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_password`)
    }
    get ref_master_username(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.master_username`)
    }
    get ref_node_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.node_type`)
    }
    get ref_number_of_nodes(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.number_of_nodes`)
    }
    get ref_owner_account(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_account`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.preferred_maintenance_window`)
    }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.publicly_accessible`)
    }
    get ref_s3_key_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.s3_key_prefix`)
    }
    get ref_skip_final_snapshot(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.skip_final_snapshot`)
    }
    get ref_snapshot_cluster_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_cluster_identifier`)
    }
    get ref_snapshot_copy(): Reference<_aws_redshift_cluster__snapshot_copy[]> {
        return new Reference(`${this._name}.${this._id}.snapshot_copy`)
    }
    get ref_snapshot_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_identifier`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_security_group_ids`)
    }
}

export interface aws_redshift_event_subscription_config {
    customer_aws_id?: rstring
    enabled?: rboolean
    event_categories?: rstring[]
    name: rstring
    severity?: rstring
    sns_topic_arn: rstring
    source_ids?: rstring[]
    source_type?: rstring
    status?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_redshift_event_subscription implements Resource {
    config: aws_redshift_event_subscription_config
    private _is_data: boolean = false
    private _name: string = "aws_redshift_event_subscription"
    private _id: string;
    constructor(id: string, config: aws_redshift_event_subscription_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_customer_aws_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_aws_id`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_event_categories(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.event_categories`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_severity(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.severity`)
    }
    get ref_sns_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sns_topic_arn`)
    }
    get ref_source_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.source_ids`)
    }
    get ref_source_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_type`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_redshift_parameter_group__parameter {
    name: rstring
    value: rstring
}

export interface aws_redshift_parameter_group_config {
    description?: rstring
    family: rstring
    name: rstring
    parameter?: _aws_redshift_parameter_group__parameter[]
}

export class aws_redshift_parameter_group implements Resource {
    config: aws_redshift_parameter_group_config
    private _is_data: boolean = false
    private _name: string = "aws_redshift_parameter_group"
    private _id: string;
    constructor(id: string, config: aws_redshift_parameter_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_family(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.family`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_parameter(): Reference<_aws_redshift_parameter_group__parameter[]> {
        return new Reference(`${this._name}.${this._id}.parameter`)
    }
}

export interface _aws_redshift_security_group__ingress {
    cidr?: rstring
    security_group_name?: rstring
    security_group_owner_id?: rstring
}

export interface aws_redshift_security_group_config {
    description?: rstring
    ingress: _aws_redshift_security_group__ingress[]
    name: rstring
}

export class aws_redshift_security_group implements Resource {
    config: aws_redshift_security_group_config
    private _is_data: boolean = false
    private _name: string = "aws_redshift_security_group"
    private _id: string;
    constructor(id: string, config: aws_redshift_security_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_ingress(): Reference<_aws_redshift_security_group__ingress[]> {
        return new Reference(`${this._name}.${this._id}.ingress`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_redshift_snapshot_copy_grant_config {
    kms_key_id?: rstring
    snapshot_copy_grant_name: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_redshift_snapshot_copy_grant implements Resource {
    config: aws_redshift_snapshot_copy_grant_config
    private _is_data: boolean = false
    private _name: string = "aws_redshift_snapshot_copy_grant"
    private _id: string;
    constructor(id: string, config: aws_redshift_snapshot_copy_grant_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_snapshot_copy_grant_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_copy_grant_name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_redshift_subnet_group_config {
    description?: rstring
    name: rstring
    subnet_ids: rstring[]
    tags?: {[propName: string]: rstring}
}

export class aws_redshift_subnet_group implements Resource {
    config: aws_redshift_subnet_group_config
    private _is_data: boolean = false
    private _name: string = "aws_redshift_subnet_group"
    private _id: string;
    constructor(id: string, config: aws_redshift_subnet_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_resourcegroups_group__resource_query {
    query: rstring
    type?: rstring
}

export interface aws_resourcegroups_group_config {
    arn?: rstring
    description?: rstring
    name: rstring
    resource_query: _aws_resourcegroups_group__resource_query[]
}

export class aws_resourcegroups_group implements Resource {
    config: aws_resourcegroups_group_config
    private _is_data: boolean = false
    private _name: string = "aws_resourcegroups_group"
    private _id: string;
    constructor(id: string, config: aws_resourcegroups_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_resource_query(): Reference<_aws_resourcegroups_group__resource_query[]> {
        return new Reference(`${this._name}.${this._id}.resource_query`)
    }
}

export interface aws_route_config {
    destination_cidr_block?: rstring
    destination_ipv6_cidr_block?: rstring
    destination_prefix_list_id?: rstring
    egress_only_gateway_id?: rstring
    gateway_id?: rstring
    instance_id?: rstring
    instance_owner_id?: rstring
    nat_gateway_id?: rstring
    network_interface_id?: rstring
    origin?: rstring
    route_table_id: rstring
    state?: rstring
    transit_gateway_id?: rstring
    vpc_peering_connection_id?: rstring
}

export class aws_route implements Resource {
    config: aws_route_config
    private _is_data: boolean = false
    private _name: string = "aws_route"
    private _id: string;
    constructor(id: string, config: aws_route_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_destination_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_cidr_block`)
    }
    get ref_destination_ipv6_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_ipv6_cidr_block`)
    }
    get ref_destination_prefix_list_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_prefix_list_id`)
    }
    get ref_egress_only_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.egress_only_gateway_id`)
    }
    get ref_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_id`)
    }
    get ref_instance_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_id`)
    }
    get ref_instance_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_owner_id`)
    }
    get ref_nat_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.nat_gateway_id`)
    }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface_id`)
    }
    get ref_origin(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.origin`)
    }
    get ref_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.route_table_id`)
    }
    get ref_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state`)
    }
    get ref_transit_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_id`)
    }
    get ref_vpc_peering_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_peering_connection_id`)
    }
}

export interface aws_route53_delegation_set_config {
    name_servers?: rstring[]
    reference_name?: rstring
}

export class aws_route53_delegation_set implements Resource {
    config: aws_route53_delegation_set_config
    private _is_data: boolean = false
    private _name: string = "aws_route53_delegation_set"
    private _id: string;
    constructor(id: string, config: aws_route53_delegation_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name_servers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.name_servers`)
    }
    get ref_reference_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reference_name`)
    }
}

export interface aws_route53_health_check_config {
    child_health_threshold?: rnumber
    child_healthchecks?: rstring[]
    cloudwatch_alarm_name?: rstring
    cloudwatch_alarm_region?: rstring
    enable_sni?: rboolean
    failure_threshold?: rnumber
    fqdn?: rstring
    insufficient_data_health_status?: rstring
    invert_healthcheck?: rboolean
    ip_address?: rstring
    measure_latency?: rboolean
    port?: rnumber
    reference_name?: rstring
    regions?: rstring[]
    request_interval?: rnumber
    resource_path?: rstring
    search_string?: rstring
    tags?: {[propName: string]: rstring}
    type: rstring
}

export class aws_route53_health_check implements Resource {
    config: aws_route53_health_check_config
    private _is_data: boolean = false
    private _name: string = "aws_route53_health_check"
    private _id: string;
    constructor(id: string, config: aws_route53_health_check_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_child_health_threshold(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.child_health_threshold`)
    }
    get ref_child_healthchecks(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.child_healthchecks`)
    }
    get ref_cloudwatch_alarm_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloudwatch_alarm_name`)
    }
    get ref_cloudwatch_alarm_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloudwatch_alarm_region`)
    }
    get ref_enable_sni(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_sni`)
    }
    get ref_failure_threshold(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.failure_threshold`)
    }
    get ref_fqdn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.fqdn`)
    }
    get ref_insufficient_data_health_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.insufficient_data_health_status`)
    }
    get ref_invert_healthcheck(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.invert_healthcheck`)
    }
    get ref_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ip_address`)
    }
    get ref_measure_latency(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.measure_latency`)
    }
    get ref_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.port`)
    }
    get ref_reference_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.reference_name`)
    }
    get ref_regions(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.regions`)
    }
    get ref_request_interval(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.request_interval`)
    }
    get ref_resource_path(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_path`)
    }
    get ref_search_string(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.search_string`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_route53_query_log_config {
    cloudwatch_log_group_arn: rstring
    zone_id: rstring
}

export class aws_route53_query_log implements Resource {
    config: aws_route53_query_log_config
    private _is_data: boolean = false
    private _name: string = "aws_route53_query_log"
    private _id: string;
    constructor(id: string, config: aws_route53_query_log_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cloudwatch_log_group_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cloudwatch_log_group_arn`)
    }
    get ref_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.zone_id`)
    }
}

export interface _aws_route53_record__alias {
    evaluate_target_health: rboolean
    name: rstring
    zone_id: rstring
}

export interface _aws_route53_record__failover_routing_policy {
    type: rstring
}

export interface _aws_route53_record__geolocation_routing_policy {
    continent?: rstring
    country?: rstring
    subdivision?: rstring
}

export interface _aws_route53_record__latency_routing_policy {
    region: rstring
}

export interface _aws_route53_record__weighted_routing_policy {
    weight: rnumber
}

export interface aws_route53_record_config {
    alias?: _aws_route53_record__alias[]
    allow_overwrite?: rboolean
    failover?: rstring
    failover_routing_policy?: _aws_route53_record__failover_routing_policy[]
    fqdn?: rstring
    geolocation_routing_policy?: _aws_route53_record__geolocation_routing_policy[]
    health_check_id?: rstring
    latency_routing_policy?: _aws_route53_record__latency_routing_policy[]
    multivalue_answer_routing_policy?: rboolean
    name: rstring
    records?: rstring[]
    set_identifier?: rstring
    ttl?: rnumber
    type: rstring
    weight?: rnumber
    weighted_routing_policy?: _aws_route53_record__weighted_routing_policy[]
    zone_id: rstring
}

export class aws_route53_record implements Resource {
    config: aws_route53_record_config
    private _is_data: boolean = false
    private _name: string = "aws_route53_record"
    private _id: string;
    constructor(id: string, config: aws_route53_record_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_alias(): Reference<_aws_route53_record__alias[]> {
        return new Reference(`${this._name}.${this._id}.alias`)
    }
    get ref_allow_overwrite(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_overwrite`)
    }
    get ref_failover(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.failover`)
    }
    get ref_failover_routing_policy(): Reference<_aws_route53_record__failover_routing_policy[]> {
        return new Reference(`${this._name}.${this._id}.failover_routing_policy`)
    }
    get ref_fqdn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.fqdn`)
    }
    get ref_geolocation_routing_policy(): Reference<_aws_route53_record__geolocation_routing_policy[]> {
        return new Reference(`${this._name}.${this._id}.geolocation_routing_policy`)
    }
    get ref_health_check_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.health_check_id`)
    }
    get ref_latency_routing_policy(): Reference<_aws_route53_record__latency_routing_policy[]> {
        return new Reference(`${this._name}.${this._id}.latency_routing_policy`)
    }
    get ref_multivalue_answer_routing_policy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.multivalue_answer_routing_policy`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_records(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.records`)
    }
    get ref_set_identifier(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.set_identifier`)
    }
    get ref_ttl(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.ttl`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
    get ref_weight(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.weight`)
    }
    get ref_weighted_routing_policy(): Reference<_aws_route53_record__weighted_routing_policy[]> {
        return new Reference(`${this._name}.${this._id}.weighted_routing_policy`)
    }
    get ref_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.zone_id`)
    }
}

export interface _aws_route53_zone__vpc {
    vpc_id: rstring
    vpc_region?: rstring
}

export interface aws_route53_zone_config {
    comment?: rstring
    delegation_set_id?: rstring
    force_destroy?: rboolean
    name: rstring
    name_servers?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc?: _aws_route53_zone__vpc[]
    vpc_id?: rstring
    vpc_region?: rstring
    zone_id?: rstring
}

export class aws_route53_zone implements Resource {
    config: aws_route53_zone_config
    private _is_data: boolean = false
    private _name: string = "aws_route53_zone"
    private _id: string;
    constructor(id: string, config: aws_route53_zone_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_comment(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.comment`)
    }
    get ref_delegation_set_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.delegation_set_id`)
    }
    get ref_force_destroy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_destroy`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_servers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.name_servers`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc(): Reference<_aws_route53_zone__vpc[]> {
        return new Reference(`${this._name}.${this._id}.vpc`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
    get ref_vpc_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_region`)
    }
    get ref_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.zone_id`)
    }
}

export interface aws_route53_zone_association_config {
    vpc_id: rstring
    vpc_region?: rstring
    zone_id: rstring
}

export class aws_route53_zone_association implements Resource {
    config: aws_route53_zone_association_config
    private _is_data: boolean = false
    private _name: string = "aws_route53_zone_association"
    private _id: string;
    constructor(id: string, config: aws_route53_zone_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
    get ref_vpc_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_region`)
    }
    get ref_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.zone_id`)
    }
}

export interface _aws_route_table__route {
    cidr_block?: rstring
    egress_only_gateway_id?: rstring
    gateway_id?: rstring
    instance_id?: rstring
    ipv6_cidr_block?: rstring
    nat_gateway_id?: rstring
    network_interface_id?: rstring
    transit_gateway_id?: rstring
    vpc_peering_connection_id?: rstring
}

export interface aws_route_table_config {
    owner_id?: rstring
    propagating_vgws?: rstring[]
    route?: _aws_route_table__route[]
    tags?: {[propName: string]: rstring}
    vpc_id: rstring
}

export class aws_route_table implements Resource {
    config: aws_route_table_config
    private _is_data: boolean = false
    private _name: string = "aws_route_table"
    private _id: string;
    constructor(id: string, config: aws_route_table_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_propagating_vgws(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.propagating_vgws`)
    }
    get ref_route(): Reference<_aws_route_table__route[]> {
        return new Reference(`${this._name}.${this._id}.route`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_route_table_association_config {
    route_table_id: rstring
    subnet_id: rstring
}

export class aws_route_table_association implements Resource {
    config: aws_route_table_association_config
    private _is_data: boolean = false
    private _name: string = "aws_route_table_association"
    private _id: string;
    constructor(id: string, config: aws_route_table_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.route_table_id`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
}

export interface aws_s3_account_public_access_block_config {
    account_id?: rstring
    block_public_acls?: rboolean
    block_public_policy?: rboolean
    ignore_public_acls?: rboolean
    restrict_public_buckets?: rboolean
}

export class aws_s3_account_public_access_block implements Resource {
    config: aws_s3_account_public_access_block_config
    private _is_data: boolean = false
    private _name: string = "aws_s3_account_public_access_block"
    private _id: string;
    constructor(id: string, config: aws_s3_account_public_access_block_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.account_id`)
    }
    get ref_block_public_acls(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.block_public_acls`)
    }
    get ref_block_public_policy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.block_public_policy`)
    }
    get ref_ignore_public_acls(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ignore_public_acls`)
    }
    get ref_restrict_public_buckets(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.restrict_public_buckets`)
    }
}

export interface _aws_s3_bucket__cors_rule {
    allowed_headers?: rstring[]
    allowed_methods: rstring[]
    allowed_origins: rstring[]
    expose_headers?: rstring[]
    max_age_seconds?: rnumber
}

export interface __aws_s3_bucket__lifecycle_rule__expiration {
    date?: rstring
    days?: rnumber
    expired_object_delete_marker?: rboolean
}

export interface __aws_s3_bucket__lifecycle_rule__noncurrent_version_expiration {
    days?: rnumber
}

export interface __aws_s3_bucket__lifecycle_rule__noncurrent_version_transition {
    days?: rnumber
    storage_class: rstring
}

export interface __aws_s3_bucket__lifecycle_rule__transition {
    date?: rstring
    days?: rnumber
    storage_class: rstring
}

export interface _aws_s3_bucket__lifecycle_rule {
    abort_incomplete_multipart_upload_days?: rnumber
    enabled: rboolean
    expiration?: __aws_s3_bucket__lifecycle_rule__expiration[]
    id?: rstring
    noncurrent_version_expiration?: __aws_s3_bucket__lifecycle_rule__noncurrent_version_expiration[]
    noncurrent_version_transition?: __aws_s3_bucket__lifecycle_rule__noncurrent_version_transition[]
    prefix?: rstring
    tags?: {[propName: string]: rstring}
    transition?: __aws_s3_bucket__lifecycle_rule__transition[]
}

export interface _aws_s3_bucket__logging {
    target_bucket: rstring
    target_prefix?: rstring
}

export interface __aws_s3_bucket__object_lock_configuration__rule__default_retention {
    days?: rnumber
    mode: rstring
    years?: rnumber
}

export interface __aws_s3_bucket__object_lock_configuration__rule {
    default_retention: __aws_s3_bucket__object_lock_configuration__rule__default_retention[]
}

export interface _aws_s3_bucket__object_lock_configuration {
    object_lock_enabled: rstring
    rule?: __aws_s3_bucket__object_lock_configuration__rule[]
}

export interface __aws_s3_bucket__replication_configuration__rules__destination__access_control_translation {
    owner: rstring
}

export interface __aws_s3_bucket__replication_configuration__rules__destination {
    access_control_translation?: __aws_s3_bucket__replication_configuration__rules__destination__access_control_translation[]
    account_id?: rstring
    bucket: rstring
    replica_kms_key_id?: rstring
    storage_class?: rstring
}

export interface __aws_s3_bucket__replication_configuration__rules__filter {
    prefix?: rstring
    tags?: {[propName: string]: rstring}
}

export interface __aws_s3_bucket__replication_configuration__rules__source_selection_criteria__sse_kms_encrypted_objects {
    enabled: rboolean
}

export interface __aws_s3_bucket__replication_configuration__rules__source_selection_criteria {
    sse_kms_encrypted_objects?: __aws_s3_bucket__replication_configuration__rules__source_selection_criteria__sse_kms_encrypted_objects[]
}

export interface __aws_s3_bucket__replication_configuration__rules {
    destination: __aws_s3_bucket__replication_configuration__rules__destination[]
    filter?: __aws_s3_bucket__replication_configuration__rules__filter[]
    id?: rstring
    prefix?: rstring
    priority?: rnumber
    source_selection_criteria?: __aws_s3_bucket__replication_configuration__rules__source_selection_criteria[]
    status: rstring
}

export interface _aws_s3_bucket__replication_configuration {
    role: rstring
    rules: __aws_s3_bucket__replication_configuration__rules[]
}

export interface __aws_s3_bucket__server_side_encryption_configuration__rule__apply_server_side_encryption_by_default {
    kms_master_key_id?: rstring
    sse_algorithm: rstring
}

export interface __aws_s3_bucket__server_side_encryption_configuration__rule {
    apply_server_side_encryption_by_default: __aws_s3_bucket__server_side_encryption_configuration__rule__apply_server_side_encryption_by_default[]
}

export interface _aws_s3_bucket__server_side_encryption_configuration {
    rule: __aws_s3_bucket__server_side_encryption_configuration__rule[]
}

export interface _aws_s3_bucket__versioning {
    enabled?: rboolean
    mfa_delete?: rboolean
}

export interface _aws_s3_bucket__website {
    error_document?: rstring
    index_document?: rstring
    redirect_all_requests_to?: rstring
    routing_rules?: rstring
}

export interface aws_s3_bucket_config {
    acceleration_status?: rstring
    acl?: rstring
    arn?: rstring
    bucket?: rstring
    bucket_domain_name?: rstring
    bucket_prefix?: rstring
    bucket_regional_domain_name?: rstring
    cors_rule?: _aws_s3_bucket__cors_rule[]
    force_destroy?: rboolean
    hosted_zone_id?: rstring
    lifecycle_rule?: _aws_s3_bucket__lifecycle_rule[]
    logging?: _aws_s3_bucket__logging[]
    object_lock_configuration?: _aws_s3_bucket__object_lock_configuration[]
    policy?: rstring
    region?: rstring
    replication_configuration?: _aws_s3_bucket__replication_configuration[]
    request_payer?: rstring
    server_side_encryption_configuration?: _aws_s3_bucket__server_side_encryption_configuration[]
    tags?: {[propName: string]: rstring}
    versioning?: _aws_s3_bucket__versioning[]
    website?: _aws_s3_bucket__website[]
    website_domain?: rstring
    website_endpoint?: rstring
}

export class aws_s3_bucket implements Resource {
    config: aws_s3_bucket_config
    private _is_data: boolean = false
    private _name: string = "aws_s3_bucket"
    private _id: string;
    constructor(id: string, config: aws_s3_bucket_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_acceleration_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.acceleration_status`)
    }
    get ref_acl(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.acl`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_bucket_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket_domain_name`)
    }
    get ref_bucket_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket_prefix`)
    }
    get ref_bucket_regional_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket_regional_domain_name`)
    }
    get ref_cors_rule(): Reference<_aws_s3_bucket__cors_rule[]> {
        return new Reference(`${this._name}.${this._id}.cors_rule`)
    }
    get ref_force_destroy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_destroy`)
    }
    get ref_hosted_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hosted_zone_id`)
    }
    get ref_lifecycle_rule(): Reference<_aws_s3_bucket__lifecycle_rule[]> {
        return new Reference(`${this._name}.${this._id}.lifecycle_rule`)
    }
    get ref_logging(): Reference<_aws_s3_bucket__logging[]> {
        return new Reference(`${this._name}.${this._id}.logging`)
    }
    get ref_object_lock_configuration(): Reference<_aws_s3_bucket__object_lock_configuration[]> {
        return new Reference(`${this._name}.${this._id}.object_lock_configuration`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.region`)
    }
    get ref_replication_configuration(): Reference<_aws_s3_bucket__replication_configuration[]> {
        return new Reference(`${this._name}.${this._id}.replication_configuration`)
    }
    get ref_request_payer(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.request_payer`)
    }
    get ref_server_side_encryption_configuration(): Reference<_aws_s3_bucket__server_side_encryption_configuration[]> {
        return new Reference(`${this._name}.${this._id}.server_side_encryption_configuration`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_versioning(): Reference<_aws_s3_bucket__versioning[]> {
        return new Reference(`${this._name}.${this._id}.versioning`)
    }
    get ref_website(): Reference<_aws_s3_bucket__website[]> {
        return new Reference(`${this._name}.${this._id}.website`)
    }
    get ref_website_domain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.website_domain`)
    }
    get ref_website_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.website_endpoint`)
    }
}

export interface __aws_s3_bucket_inventory__destination__bucket__encryption__sse_kms {
    key_id: rstring
}

export interface __aws_s3_bucket_inventory__destination__bucket__encryption {
    sse_kms?: __aws_s3_bucket_inventory__destination__bucket__encryption__sse_kms[]
    sse_s3?: __aws_s3_bucket_inventory__destination__bucket__encryption__sse_s3[]
}

export interface __aws_s3_bucket_inventory__destination__bucket {
    account_id?: rstring
    bucket_arn: rstring
    encryption?: __aws_s3_bucket_inventory__destination__bucket__encryption[]
    format: rstring
    prefix?: rstring
}

export interface _aws_s3_bucket_inventory__destination {
    bucket: __aws_s3_bucket_inventory__destination__bucket[]
}

export interface _aws_s3_bucket_inventory__filter {
    prefix?: rstring
}

export interface _aws_s3_bucket_inventory__schedule {
    frequency: rstring
}

export interface aws_s3_bucket_inventory_config {
    bucket: rstring
    destination: _aws_s3_bucket_inventory__destination[]
    enabled?: rboolean
    filter?: _aws_s3_bucket_inventory__filter[]
    included_object_versions: rstring
    name: rstring
    optional_fields?: rstring[]
    schedule: _aws_s3_bucket_inventory__schedule[]
}

export class aws_s3_bucket_inventory implements Resource {
    config: aws_s3_bucket_inventory_config
    private _is_data: boolean = false
    private _name: string = "aws_s3_bucket_inventory"
    private _id: string;
    constructor(id: string, config: aws_s3_bucket_inventory_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_destination(): Reference<_aws_s3_bucket_inventory__destination[]> {
        return new Reference(`${this._name}.${this._id}.destination`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_filter(): Reference<_aws_s3_bucket_inventory__filter[]> {
        return new Reference(`${this._name}.${this._id}.filter`)
    }
    get ref_included_object_versions(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.included_object_versions`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_optional_fields(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.optional_fields`)
    }
    get ref_schedule(): Reference<_aws_s3_bucket_inventory__schedule[]> {
        return new Reference(`${this._name}.${this._id}.schedule`)
    }
}

export interface _aws_s3_bucket_metric__filter {
    prefix?: rstring
    tags?: {[propName: string]: rstring}
}

export interface aws_s3_bucket_metric_config {
    bucket: rstring
    filter?: _aws_s3_bucket_metric__filter[]
    name: rstring
}

export class aws_s3_bucket_metric implements Resource {
    config: aws_s3_bucket_metric_config
    private _is_data: boolean = false
    private _name: string = "aws_s3_bucket_metric"
    private _id: string;
    constructor(id: string, config: aws_s3_bucket_metric_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_filter(): Reference<_aws_s3_bucket_metric__filter[]> {
        return new Reference(`${this._name}.${this._id}.filter`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_s3_bucket_notification__lambda_function {
    events: rstring[]
    filter_prefix?: rstring
    filter_suffix?: rstring
    id?: rstring
    lambda_function_arn?: rstring
}

export interface _aws_s3_bucket_notification__queue {
    events: rstring[]
    filter_prefix?: rstring
    filter_suffix?: rstring
    id?: rstring
    queue_arn: rstring
}

export interface _aws_s3_bucket_notification__topic {
    events: rstring[]
    filter_prefix?: rstring
    filter_suffix?: rstring
    id?: rstring
    topic_arn: rstring
}

export interface aws_s3_bucket_notification_config {
    bucket: rstring
    lambda_function?: _aws_s3_bucket_notification__lambda_function[]
    queue?: _aws_s3_bucket_notification__queue[]
    topic?: _aws_s3_bucket_notification__topic[]
}

export class aws_s3_bucket_notification implements Resource {
    config: aws_s3_bucket_notification_config
    private _is_data: boolean = false
    private _name: string = "aws_s3_bucket_notification"
    private _id: string;
    constructor(id: string, config: aws_s3_bucket_notification_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_lambda_function(): Reference<_aws_s3_bucket_notification__lambda_function[]> {
        return new Reference(`${this._name}.${this._id}.lambda_function`)
    }
    get ref_queue(): Reference<_aws_s3_bucket_notification__queue[]> {
        return new Reference(`${this._name}.${this._id}.queue`)
    }
    get ref_topic(): Reference<_aws_s3_bucket_notification__topic[]> {
        return new Reference(`${this._name}.${this._id}.topic`)
    }
}

export interface aws_s3_bucket_object_config {
    acl?: rstring
    bucket: rstring
    cache_control?: rstring
    content?: rstring
    content_base64?: rstring
    content_disposition?: rstring
    content_encoding?: rstring
    content_language?: rstring
    content_type?: rstring
    etag?: rstring
    key: rstring
    kms_key_id?: rstring
    server_side_encryption?: rstring
    source?: rstring
    storage_class?: rstring
    tags?: {[propName: string]: rstring}
    version_id?: rstring
    website_redirect?: rstring
}

export class aws_s3_bucket_object implements Resource {
    config: aws_s3_bucket_object_config
    private _is_data: boolean = false
    private _name: string = "aws_s3_bucket_object"
    private _id: string;
    constructor(id: string, config: aws_s3_bucket_object_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_acl(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.acl`)
    }
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_cache_control(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cache_control`)
    }
    get ref_content(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content`)
    }
    get ref_content_base64(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content_base64`)
    }
    get ref_content_disposition(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content_disposition`)
    }
    get ref_content_encoding(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content_encoding`)
    }
    get ref_content_language(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content_language`)
    }
    get ref_content_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content_type`)
    }
    get ref_etag(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.etag`)
    }
    get ref_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_server_side_encryption(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.server_side_encryption`)
    }
    get ref_source(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source`)
    }
    get ref_storage_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.storage_class`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_version_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version_id`)
    }
    get ref_website_redirect(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.website_redirect`)
    }
}

export interface aws_s3_bucket_policy_config {
    bucket: rstring
    policy: rstring
}

export class aws_s3_bucket_policy implements Resource {
    config: aws_s3_bucket_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_s3_bucket_policy"
    private _id: string;
    constructor(id: string, config: aws_s3_bucket_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
}

export interface aws_s3_bucket_public_access_block_config {
    block_public_acls?: rboolean
    block_public_policy?: rboolean
    bucket: rstring
    ignore_public_acls?: rboolean
    restrict_public_buckets?: rboolean
}

export class aws_s3_bucket_public_access_block implements Resource {
    config: aws_s3_bucket_public_access_block_config
    private _is_data: boolean = false
    private _name: string = "aws_s3_bucket_public_access_block"
    private _id: string;
    constructor(id: string, config: aws_s3_bucket_public_access_block_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_block_public_acls(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.block_public_acls`)
    }
    get ref_block_public_policy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.block_public_policy`)
    }
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_ignore_public_acls(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ignore_public_acls`)
    }
    get ref_restrict_public_buckets(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.restrict_public_buckets`)
    }
}

export interface _aws_sagemaker_model__container {
    container_hostname?: rstring
    environment?: {[propName: string]: rstring}
    image: rstring
    model_data_url?: rstring
}

export interface _aws_sagemaker_model__primary_container {
    container_hostname?: rstring
    environment?: {[propName: string]: rstring}
    image: rstring
    model_data_url?: rstring
}

export interface _aws_sagemaker_model__vpc_config {
    security_group_ids: rstring[]
    subnets: rstring[]
}

export interface aws_sagemaker_model_config {
    arn?: rstring
    container?: _aws_sagemaker_model__container[]
    enable_network_isolation?: rboolean
    execution_role_arn: rstring
    name?: rstring
    primary_container?: _aws_sagemaker_model__primary_container[]
    tags?: {[propName: string]: rstring}
    vpc_config?: _aws_sagemaker_model__vpc_config[]
}

export class aws_sagemaker_model implements Resource {
    config: aws_sagemaker_model_config
    private _is_data: boolean = false
    private _name: string = "aws_sagemaker_model"
    private _id: string;
    constructor(id: string, config: aws_sagemaker_model_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_container(): Reference<_aws_sagemaker_model__container[]> {
        return new Reference(`${this._name}.${this._id}.container`)
    }
    get ref_enable_network_isolation(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_network_isolation`)
    }
    get ref_execution_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.execution_role_arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_primary_container(): Reference<_aws_sagemaker_model__primary_container[]> {
        return new Reference(`${this._name}.${this._id}.primary_container`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_config(): Reference<_aws_sagemaker_model__vpc_config[]> {
        return new Reference(`${this._name}.${this._id}.vpc_config`)
    }
}

export interface aws_sagemaker_notebook_instance_config {
    arn?: rstring
    instance_type: rstring
    kms_key_id?: rstring
    name: rstring
    role_arn: rstring
    security_groups?: rstring[]
    subnet_id?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_sagemaker_notebook_instance implements Resource {
    config: aws_sagemaker_notebook_instance_config
    private _is_data: boolean = false
    private _name: string = "aws_sagemaker_notebook_instance"
    private _id: string;
    constructor(id: string, config: aws_sagemaker_notebook_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_type`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface _aws_secretsmanager_secret__rotation_rules {
    automatically_after_days: rnumber
}

export interface aws_secretsmanager_secret_config {
    arn?: rstring
    description?: rstring
    kms_key_id?: rstring
    name?: rstring
    name_prefix?: rstring
    policy?: rstring
    recovery_window_in_days?: rnumber
    rotation_enabled?: rboolean
    rotation_lambda_arn?: rstring
    rotation_rules?: _aws_secretsmanager_secret__rotation_rules[]
    tags?: {[propName: string]: rstring}
}

export class aws_secretsmanager_secret implements Resource {
    config: aws_secretsmanager_secret_config
    private _is_data: boolean = false
    private _name: string = "aws_secretsmanager_secret"
    private _id: string;
    constructor(id: string, config: aws_secretsmanager_secret_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_recovery_window_in_days(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.recovery_window_in_days`)
    }
    get ref_rotation_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.rotation_enabled`)
    }
    get ref_rotation_lambda_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rotation_lambda_arn`)
    }
    get ref_rotation_rules(): Reference<_aws_secretsmanager_secret__rotation_rules[]> {
        return new Reference(`${this._name}.${this._id}.rotation_rules`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_secretsmanager_secret_version_config {
    arn?: rstring
    secret_binary?: rstring
    secret_id: rstring
    secret_string?: rstring
    version_id?: rstring
    version_stages?: rstring[]
}

export class aws_secretsmanager_secret_version implements Resource {
    config: aws_secretsmanager_secret_version_config
    private _is_data: boolean = false
    private _name: string = "aws_secretsmanager_secret_version"
    private _id: string;
    constructor(id: string, config: aws_secretsmanager_secret_version_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_secret_binary(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.secret_binary`)
    }
    get ref_secret_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.secret_id`)
    }
    get ref_secret_string(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.secret_string`)
    }
    get ref_version_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.version_id`)
    }
    get ref_version_stages(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.version_stages`)
    }
}

export interface _aws_security_group__egress {
    cidr_blocks?: rstring[]
    description?: rstring
    from_port: rnumber
    ipv6_cidr_blocks?: rstring[]
    prefix_list_ids?: rstring[]
    protocol: rstring
    security_groups?: rstring[]
    self?: rboolean
    to_port: rnumber
}

export interface _aws_security_group__ingress {
    cidr_blocks?: rstring[]
    description?: rstring
    from_port: rnumber
    ipv6_cidr_blocks?: rstring[]
    prefix_list_ids?: rstring[]
    protocol: rstring
    security_groups?: rstring[]
    self?: rboolean
    to_port: rnumber
}

export interface aws_security_group_config {
    arn?: rstring
    description?: rstring
    egress?: _aws_security_group__egress[]
    ingress?: _aws_security_group__ingress[]
    name?: rstring
    name_prefix?: rstring
    owner_id?: rstring
    revoke_rules_on_delete?: rboolean
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_security_group implements Resource {
    config: aws_security_group_config
    private _is_data: boolean = false
    private _name: string = "aws_security_group"
    private _id: string;
    constructor(id: string, config: aws_security_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_egress(): Reference<_aws_security_group__egress[]> {
        return new Reference(`${this._name}.${this._id}.egress`)
    }
    get ref_ingress(): Reference<_aws_security_group__ingress[]> {
        return new Reference(`${this._name}.${this._id}.ingress`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_revoke_rules_on_delete(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.revoke_rules_on_delete`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_security_group_rule_config {
    cidr_blocks?: rstring[]
    description?: rstring
    from_port: rnumber
    ipv6_cidr_blocks?: rstring[]
    prefix_list_ids?: rstring[]
    protocol: rstring
    security_group_id: rstring
    self?: rboolean
    source_security_group_id?: rstring
    to_port: rnumber
    /**
     * Type of rule, ingress (inbound) or egress (outbound).    
     */
    type: rstring
}

export class aws_security_group_rule implements Resource {
    config: aws_security_group_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_security_group_rule"
    private _id: string;
    constructor(id: string, config: aws_security_group_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cidr_blocks(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.cidr_blocks`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_from_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.from_port`)
    }
    get ref_ipv6_cidr_blocks(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.ipv6_cidr_blocks`)
    }
    get ref_prefix_list_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.prefix_list_ids`)
    }
    get ref_protocol(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.protocol`)
    }
    get ref_security_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.security_group_id`)
    }
    get ref_self(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.self`)
    }
    get ref_source_security_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_security_group_id`)
    }
    get ref_to_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.to_port`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
}

export interface aws_securityhub_account_config {
}

export class aws_securityhub_account implements Resource {
    config: aws_securityhub_account_config
    private _is_data: boolean = false
    private _name: string = "aws_securityhub_account"
    private _id: string;
    constructor(id: string, config: aws_securityhub_account_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
}

export interface aws_securityhub_product_subscription_config {
    arn?: rstring
    product_arn: rstring
}

export class aws_securityhub_product_subscription implements Resource {
    config: aws_securityhub_product_subscription_config
    private _is_data: boolean = false
    private _name: string = "aws_securityhub_product_subscription"
    private _id: string;
    constructor(id: string, config: aws_securityhub_product_subscription_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_product_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.product_arn`)
    }
}

export interface aws_securityhub_standards_subscription_config {
    standards_arn: rstring
}

export class aws_securityhub_standards_subscription implements Resource {
    config: aws_securityhub_standards_subscription_config
    private _is_data: boolean = false
    private _name: string = "aws_securityhub_standards_subscription"
    private _id: string;
    constructor(id: string, config: aws_securityhub_standards_subscription_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_standards_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.standards_arn`)
    }
}

export interface aws_service_discovery_http_namespace_config {
    arn?: rstring
    description?: rstring
    name: rstring
}

export class aws_service_discovery_http_namespace implements Resource {
    config: aws_service_discovery_http_namespace_config
    private _is_data: boolean = false
    private _name: string = "aws_service_discovery_http_namespace"
    private _id: string;
    constructor(id: string, config: aws_service_discovery_http_namespace_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_service_discovery_private_dns_namespace_config {
    arn?: rstring
    description?: rstring
    hosted_zone?: rstring
    name: rstring
    vpc: rstring
}

export class aws_service_discovery_private_dns_namespace implements Resource {
    config: aws_service_discovery_private_dns_namespace_config
    private _is_data: boolean = false
    private _name: string = "aws_service_discovery_private_dns_namespace"
    private _id: string;
    constructor(id: string, config: aws_service_discovery_private_dns_namespace_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_hosted_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hosted_zone`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_vpc(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc`)
    }
}

export interface aws_service_discovery_public_dns_namespace_config {
    arn?: rstring
    description?: rstring
    hosted_zone?: rstring
    name: rstring
}

export class aws_service_discovery_public_dns_namespace implements Resource {
    config: aws_service_discovery_public_dns_namespace_config
    private _is_data: boolean = false
    private _name: string = "aws_service_discovery_public_dns_namespace"
    private _id: string;
    constructor(id: string, config: aws_service_discovery_public_dns_namespace_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_hosted_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hosted_zone`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface __aws_service_discovery_service__dns_config__dns_records {
    ttl: rnumber
    type: rstring
}

export interface _aws_service_discovery_service__dns_config {
    dns_records: __aws_service_discovery_service__dns_config__dns_records[]
    namespace_id: rstring
    routing_policy?: rstring
}

export interface _aws_service_discovery_service__health_check_config {
    failure_threshold?: rnumber
    resource_path?: rstring
    type?: rstring
}

export interface _aws_service_discovery_service__health_check_custom_config {
    failure_threshold?: rnumber
}

export interface aws_service_discovery_service_config {
    arn?: rstring
    description?: rstring
    dns_config: _aws_service_discovery_service__dns_config[]
    health_check_config?: _aws_service_discovery_service__health_check_config[]
    health_check_custom_config?: _aws_service_discovery_service__health_check_custom_config[]
    name: rstring
}

export class aws_service_discovery_service implements Resource {
    config: aws_service_discovery_service_config
    private _is_data: boolean = false
    private _name: string = "aws_service_discovery_service"
    private _id: string;
    constructor(id: string, config: aws_service_discovery_service_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_dns_config(): Reference<_aws_service_discovery_service__dns_config[]> {
        return new Reference(`${this._name}.${this._id}.dns_config`)
    }
    get ref_health_check_config(): Reference<_aws_service_discovery_service__health_check_config[]> {
        return new Reference(`${this._name}.${this._id}.health_check_config`)
    }
    get ref_health_check_custom_config(): Reference<_aws_service_discovery_service__health_check_custom_config[]> {
        return new Reference(`${this._name}.${this._id}.health_check_custom_config`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_servicecatalog_portfolio_config {
    arn?: rstring
    created_time?: rstring
    description?: rstring
    name: rstring
    provider_name?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_servicecatalog_portfolio implements Resource {
    config: aws_servicecatalog_portfolio_config
    private _is_data: boolean = false
    private _name: string = "aws_servicecatalog_portfolio"
    private _id: string;
    constructor(id: string, config: aws_servicecatalog_portfolio_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_created_time(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_time`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_provider_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.provider_name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_ses_active_receipt_rule_set_config {
    rule_set_name: rstring
}

export class aws_ses_active_receipt_rule_set implements Resource {
    config: aws_ses_active_receipt_rule_set_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_active_receipt_rule_set"
    private _id: string;
    constructor(id: string, config: aws_ses_active_receipt_rule_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_rule_set_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rule_set_name`)
    }
}

export interface aws_ses_configuration_set_config {
    name: rstring
}

export class aws_ses_configuration_set implements Resource {
    config: aws_ses_configuration_set_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_configuration_set"
    private _id: string;
    constructor(id: string, config: aws_ses_configuration_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_ses_domain_dkim_config {
    dkim_tokens?: rstring[]
    domain: rstring
}

export class aws_ses_domain_dkim implements Resource {
    config: aws_ses_domain_dkim_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_domain_dkim"
    private _id: string;
    constructor(id: string, config: aws_ses_domain_dkim_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dkim_tokens(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.dkim_tokens`)
    }
    get ref_domain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain`)
    }
}

export interface aws_ses_domain_identity_config {
    arn?: rstring
    domain: rstring
    verification_token?: rstring
}

export class aws_ses_domain_identity implements Resource {
    config: aws_ses_domain_identity_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_domain_identity"
    private _id: string;
    constructor(id: string, config: aws_ses_domain_identity_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_domain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain`)
    }
    get ref_verification_token(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.verification_token`)
    }
}

export interface aws_ses_domain_identity_verification_config {
    arn?: rstring
    domain: rstring
}

export class aws_ses_domain_identity_verification implements Resource {
    config: aws_ses_domain_identity_verification_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_domain_identity_verification"
    private _id: string;
    constructor(id: string, config: aws_ses_domain_identity_verification_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_domain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain`)
    }
}

export interface aws_ses_domain_mail_from_config {
    behavior_on_mx_failure?: rstring
    domain: rstring
    mail_from_domain: rstring
}

export class aws_ses_domain_mail_from implements Resource {
    config: aws_ses_domain_mail_from_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_domain_mail_from"
    private _id: string;
    constructor(id: string, config: aws_ses_domain_mail_from_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_behavior_on_mx_failure(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.behavior_on_mx_failure`)
    }
    get ref_domain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain`)
    }
    get ref_mail_from_domain(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.mail_from_domain`)
    }
}

export interface _aws_ses_event_destination__cloudwatch_destination {
    default_value: rstring
    dimension_name: rstring
    value_source: rstring
}

export interface _aws_ses_event_destination__kinesis_destination {
    role_arn: rstring
    stream_arn: rstring
}

export interface _aws_ses_event_destination__sns_destination {
    topic_arn: rstring
}

export interface aws_ses_event_destination_config {
    cloudwatch_destination?: _aws_ses_event_destination__cloudwatch_destination[]
    configuration_set_name: rstring
    enabled?: rboolean
    kinesis_destination?: _aws_ses_event_destination__kinesis_destination[]
    matching_types: rstring[]
    name: rstring
    sns_destination?: _aws_ses_event_destination__sns_destination[]
}

export class aws_ses_event_destination implements Resource {
    config: aws_ses_event_destination_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_event_destination"
    private _id: string;
    constructor(id: string, config: aws_ses_event_destination_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cloudwatch_destination(): Reference<_aws_ses_event_destination__cloudwatch_destination[]> {
        return new Reference(`${this._name}.${this._id}.cloudwatch_destination`)
    }
    get ref_configuration_set_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.configuration_set_name`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_kinesis_destination(): Reference<_aws_ses_event_destination__kinesis_destination[]> {
        return new Reference(`${this._name}.${this._id}.kinesis_destination`)
    }
    get ref_matching_types(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.matching_types`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_sns_destination(): Reference<_aws_ses_event_destination__sns_destination[]> {
        return new Reference(`${this._name}.${this._id}.sns_destination`)
    }
}

export interface aws_ses_identity_notification_topic_config {
    identity: rstring
    notification_type: rstring
    topic_arn?: rstring
}

export class aws_ses_identity_notification_topic implements Resource {
    config: aws_ses_identity_notification_topic_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_identity_notification_topic"
    private _id: string;
    constructor(id: string, config: aws_ses_identity_notification_topic_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_identity(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identity`)
    }
    get ref_notification_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.notification_type`)
    }
    get ref_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.topic_arn`)
    }
}

export interface aws_ses_receipt_filter_config {
    cidr: rstring
    name: rstring
    policy: rstring
}

export class aws_ses_receipt_filter implements Resource {
    config: aws_ses_receipt_filter_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_receipt_filter"
    private _id: string;
    constructor(id: string, config: aws_ses_receipt_filter_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cidr(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cidr`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
}

export interface _aws_ses_receipt_rule__add_header_action {
    header_name: rstring
    header_value: rstring
    position: rnumber
}

export interface _aws_ses_receipt_rule__bounce_action {
    message: rstring
    position: rnumber
    sender: rstring
    smtp_reply_code: rstring
    status_code?: rstring
    topic_arn?: rstring
}

export interface _aws_ses_receipt_rule__lambda_action {
    function_arn: rstring
    invocation_type?: rstring
    position: rnumber
    topic_arn?: rstring
}

export interface _aws_ses_receipt_rule__s3_action {
    bucket_name: rstring
    kms_key_arn?: rstring
    object_key_prefix?: rstring
    position: rnumber
    topic_arn?: rstring
}

export interface _aws_ses_receipt_rule__sns_action {
    position: rnumber
    topic_arn: rstring
}

export interface _aws_ses_receipt_rule__stop_action {
    position: rnumber
    scope: rstring
    topic_arn?: rstring
}

export interface _aws_ses_receipt_rule__workmail_action {
    organization_arn: rstring
    position: rnumber
    topic_arn?: rstring
}

export interface aws_ses_receipt_rule_config {
    add_header_action?: _aws_ses_receipt_rule__add_header_action[]
    after?: rstring
    bounce_action?: _aws_ses_receipt_rule__bounce_action[]
    enabled?: rboolean
    lambda_action?: _aws_ses_receipt_rule__lambda_action[]
    name: rstring
    recipients?: rstring[]
    rule_set_name: rstring
    s3_action?: _aws_ses_receipt_rule__s3_action[]
    scan_enabled?: rboolean
    sns_action?: _aws_ses_receipt_rule__sns_action[]
    stop_action?: _aws_ses_receipt_rule__stop_action[]
    tls_policy?: rstring
    workmail_action?: _aws_ses_receipt_rule__workmail_action[]
}

export class aws_ses_receipt_rule implements Resource {
    config: aws_ses_receipt_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_receipt_rule"
    private _id: string;
    constructor(id: string, config: aws_ses_receipt_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_add_header_action(): Reference<_aws_ses_receipt_rule__add_header_action[]> {
        return new Reference(`${this._name}.${this._id}.add_header_action`)
    }
    get ref_after(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.after`)
    }
    get ref_bounce_action(): Reference<_aws_ses_receipt_rule__bounce_action[]> {
        return new Reference(`${this._name}.${this._id}.bounce_action`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_lambda_action(): Reference<_aws_ses_receipt_rule__lambda_action[]> {
        return new Reference(`${this._name}.${this._id}.lambda_action`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_recipients(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.recipients`)
    }
    get ref_rule_set_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rule_set_name`)
    }
    get ref_s3_action(): Reference<_aws_ses_receipt_rule__s3_action[]> {
        return new Reference(`${this._name}.${this._id}.s3_action`)
    }
    get ref_scan_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.scan_enabled`)
    }
    get ref_sns_action(): Reference<_aws_ses_receipt_rule__sns_action[]> {
        return new Reference(`${this._name}.${this._id}.sns_action`)
    }
    get ref_stop_action(): Reference<_aws_ses_receipt_rule__stop_action[]> {
        return new Reference(`${this._name}.${this._id}.stop_action`)
    }
    get ref_tls_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tls_policy`)
    }
    get ref_workmail_action(): Reference<_aws_ses_receipt_rule__workmail_action[]> {
        return new Reference(`${this._name}.${this._id}.workmail_action`)
    }
}

export interface aws_ses_receipt_rule_set_config {
    rule_set_name: rstring
}

export class aws_ses_receipt_rule_set implements Resource {
    config: aws_ses_receipt_rule_set_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_receipt_rule_set"
    private _id: string;
    constructor(id: string, config: aws_ses_receipt_rule_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_rule_set_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rule_set_name`)
    }
}

export interface aws_ses_template_config {
    html?: rstring
    name: rstring
    subject?: rstring
    text?: rstring
}

export class aws_ses_template implements Resource {
    config: aws_ses_template_config
    private _is_data: boolean = false
    private _name: string = "aws_ses_template"
    private _id: string;
    constructor(id: string, config: aws_ses_template_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_html(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.html`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_subject(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subject`)
    }
    get ref_text(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.text`)
    }
}

export interface aws_sfn_activity_config {
    creation_date?: rstring
    name: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_sfn_activity implements Resource {
    config: aws_sfn_activity_config
    private _is_data: boolean = false
    private _name: string = "aws_sfn_activity"
    private _id: string;
    constructor(id: string, config: aws_sfn_activity_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_creation_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.creation_date`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_sfn_state_machine_config {
    creation_date?: rstring
    definition: rstring
    name: rstring
    role_arn: rstring
    status?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_sfn_state_machine implements Resource {
    config: aws_sfn_state_machine_config
    private _is_data: boolean = false
    private _name: string = "aws_sfn_state_machine"
    private _id: string;
    constructor(id: string, config: aws_sfn_state_machine_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_creation_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.creation_date`)
    }
    get ref_definition(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.definition`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_simpledb_domain_config {
    name: rstring
}

export class aws_simpledb_domain implements Resource {
    config: aws_simpledb_domain_config
    private _is_data: boolean = false
    private _name: string = "aws_simpledb_domain"
    private _id: string;
    constructor(id: string, config: aws_simpledb_domain_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface aws_snapshot_create_volume_permission_config {
    account_id: rstring
    snapshot_id: rstring
}

export class aws_snapshot_create_volume_permission implements Resource {
    config: aws_snapshot_create_volume_permission_config
    private _is_data: boolean = false
    private _name: string = "aws_snapshot_create_volume_permission"
    private _id: string;
    constructor(id: string, config: aws_snapshot_create_volume_permission_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.account_id`)
    }
    get ref_snapshot_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_id`)
    }
}

export interface aws_sns_platform_application_config {
    arn?: rstring
    event_delivery_failure_topic_arn?: rstring
    event_endpoint_created_topic_arn?: rstring
    event_endpoint_deleted_topic_arn?: rstring
    event_endpoint_updated_topic_arn?: rstring
    failure_feedback_role_arn?: rstring
    name: rstring
    platform: rstring
    platform_credential: rstring
    platform_principal?: rstring
    success_feedback_role_arn?: rstring
    success_feedback_sample_rate?: rstring
}

export class aws_sns_platform_application implements Resource {
    config: aws_sns_platform_application_config
    private _is_data: boolean = false
    private _name: string = "aws_sns_platform_application"
    private _id: string;
    constructor(id: string, config: aws_sns_platform_application_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_event_delivery_failure_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.event_delivery_failure_topic_arn`)
    }
    get ref_event_endpoint_created_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.event_endpoint_created_topic_arn`)
    }
    get ref_event_endpoint_deleted_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.event_endpoint_deleted_topic_arn`)
    }
    get ref_event_endpoint_updated_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.event_endpoint_updated_topic_arn`)
    }
    get ref_failure_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.failure_feedback_role_arn`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_platform(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.platform`)
    }
    get ref_platform_credential(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.platform_credential`)
    }
    get ref_platform_principal(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.platform_principal`)
    }
    get ref_success_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.success_feedback_role_arn`)
    }
    get ref_success_feedback_sample_rate(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.success_feedback_sample_rate`)
    }
}

export interface aws_sns_sms_preferences_config {
    default_sender_id?: rstring
    default_sms_type?: rstring
    delivery_status_iam_role_arn?: rstring
    delivery_status_success_sampling_rate?: rstring
    monthly_spend_limit?: rstring
    usage_report_s3_bucket?: rstring
}

export class aws_sns_sms_preferences implements Resource {
    config: aws_sns_sms_preferences_config
    private _is_data: boolean = false
    private _name: string = "aws_sns_sms_preferences"
    private _id: string;
    constructor(id: string, config: aws_sns_sms_preferences_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_default_sender_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_sender_id`)
    }
    get ref_default_sms_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_sms_type`)
    }
    get ref_delivery_status_iam_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.delivery_status_iam_role_arn`)
    }
    get ref_delivery_status_success_sampling_rate(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.delivery_status_success_sampling_rate`)
    }
    get ref_monthly_spend_limit(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.monthly_spend_limit`)
    }
    get ref_usage_report_s3_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.usage_report_s3_bucket`)
    }
}

export interface aws_sns_topic_config {
    application_failure_feedback_role_arn?: rstring
    application_success_feedback_role_arn?: rstring
    application_success_feedback_sample_rate?: rnumber
    arn?: rstring
    delivery_policy?: rstring
    display_name?: rstring
    http_failure_feedback_role_arn?: rstring
    http_success_feedback_role_arn?: rstring
    http_success_feedback_sample_rate?: rnumber
    kms_master_key_id?: rstring
    lambda_failure_feedback_role_arn?: rstring
    lambda_success_feedback_role_arn?: rstring
    lambda_success_feedback_sample_rate?: rnumber
    name?: rstring
    name_prefix?: rstring
    policy?: rstring
    sqs_failure_feedback_role_arn?: rstring
    sqs_success_feedback_role_arn?: rstring
    sqs_success_feedback_sample_rate?: rnumber
}

export class aws_sns_topic implements Resource {
    config: aws_sns_topic_config
    private _is_data: boolean = false
    private _name: string = "aws_sns_topic"
    private _id: string;
    constructor(id: string, config: aws_sns_topic_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_application_failure_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_failure_feedback_role_arn`)
    }
    get ref_application_success_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.application_success_feedback_role_arn`)
    }
    get ref_application_success_feedback_sample_rate(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.application_success_feedback_sample_rate`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_delivery_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.delivery_policy`)
    }
    get ref_display_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.display_name`)
    }
    get ref_http_failure_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.http_failure_feedback_role_arn`)
    }
    get ref_http_success_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.http_success_feedback_role_arn`)
    }
    get ref_http_success_feedback_sample_rate(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.http_success_feedback_sample_rate`)
    }
    get ref_kms_master_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_master_key_id`)
    }
    get ref_lambda_failure_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.lambda_failure_feedback_role_arn`)
    }
    get ref_lambda_success_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.lambda_success_feedback_role_arn`)
    }
    get ref_lambda_success_feedback_sample_rate(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.lambda_success_feedback_sample_rate`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_sqs_failure_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sqs_failure_feedback_role_arn`)
    }
    get ref_sqs_success_feedback_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.sqs_success_feedback_role_arn`)
    }
    get ref_sqs_success_feedback_sample_rate(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.sqs_success_feedback_sample_rate`)
    }
}

export interface aws_sns_topic_policy_config {
    arn: rstring
    policy: rstring
}

export class aws_sns_topic_policy implements Resource {
    config: aws_sns_topic_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_sns_topic_policy"
    private _id: string;
    constructor(id: string, config: aws_sns_topic_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
}

export interface aws_sns_topic_subscription_config {
    arn?: rstring
    confirmation_timeout_in_minutes?: rnumber
    delivery_policy?: rstring
    endpoint: rstring
    endpoint_auto_confirms?: rboolean
    filter_policy?: rstring
    protocol: rstring
    raw_message_delivery?: rboolean
    topic_arn: rstring
}

export class aws_sns_topic_subscription implements Resource {
    config: aws_sns_topic_subscription_config
    private _is_data: boolean = false
    private _name: string = "aws_sns_topic_subscription"
    private _id: string;
    constructor(id: string, config: aws_sns_topic_subscription_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_confirmation_timeout_in_minutes(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.confirmation_timeout_in_minutes`)
    }
    get ref_delivery_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.delivery_policy`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_endpoint_auto_confirms(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.endpoint_auto_confirms`)
    }
    get ref_filter_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.filter_policy`)
    }
    get ref_protocol(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.protocol`)
    }
    get ref_raw_message_delivery(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.raw_message_delivery`)
    }
    get ref_topic_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.topic_arn`)
    }
}

export interface aws_spot_datafeed_subscription_config {
    bucket: rstring
    prefix?: rstring
}

export class aws_spot_datafeed_subscription implements Resource {
    config: aws_spot_datafeed_subscription_config
    private _is_data: boolean = false
    private _name: string = "aws_spot_datafeed_subscription"
    private _id: string;
    constructor(id: string, config: aws_spot_datafeed_subscription_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_bucket(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.bucket`)
    }
    get ref_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.prefix`)
    }
}

export interface __aws_spot_fleet_request__launch_specification__ebs_block_device {
    delete_on_termination?: rboolean
    device_name: rstring
    encrypted?: rboolean
    iops?: rnumber
    snapshot_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface __aws_spot_fleet_request__launch_specification__ephemeral_block_device {
    device_name: rstring
    virtual_name: rstring
}

export interface __aws_spot_fleet_request__launch_specification__root_block_device {
    delete_on_termination?: rboolean
    iops?: rnumber
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_spot_fleet_request__launch_specification {
    ami: rstring
    associate_public_ip_address?: rboolean
    availability_zone?: rstring
    ebs_block_device?: __aws_spot_fleet_request__launch_specification__ebs_block_device[]
    ebs_optimized?: rboolean
    ephemeral_block_device?: __aws_spot_fleet_request__launch_specification__ephemeral_block_device[]
    iam_instance_profile?: rstring
    iam_instance_profile_arn?: rstring
    instance_type: rstring
    key_name?: rstring
    monitoring?: rboolean
    placement_group?: rstring
    placement_tenancy?: rstring
    root_block_device?: __aws_spot_fleet_request__launch_specification__root_block_device[]
    spot_price?: rstring
    subnet_id?: rstring
    tags?: {[propName: string]: rstring}
    user_data?: rstring
    vpc_security_group_ids?: rstring[]
    weighted_capacity?: rstring
}

export interface aws_spot_fleet_request_config {
    allocation_strategy?: rstring
    client_token?: rstring
    excess_capacity_termination_policy?: rstring
    fleet_type?: rstring
    iam_fleet_role: rstring
    instance_interruption_behaviour?: rstring
    instance_pools_to_use_count?: rnumber
    launch_specification: _aws_spot_fleet_request__launch_specification[]
    load_balancers?: rstring[]
    replace_unhealthy_instances?: rboolean
    spot_price?: rstring
    spot_request_state?: rstring
    target_capacity: rnumber
    target_group_arns?: rstring[]
    terminate_instances_with_expiration?: rboolean
    valid_from?: rstring
    valid_until?: rstring
    wait_for_fulfillment?: rboolean
}

export class aws_spot_fleet_request implements Resource {
    config: aws_spot_fleet_request_config
    private _is_data: boolean = false
    private _name: string = "aws_spot_fleet_request"
    private _id: string;
    constructor(id: string, config: aws_spot_fleet_request_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocation_strategy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.allocation_strategy`)
    }
    get ref_client_token(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.client_token`)
    }
    get ref_excess_capacity_termination_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.excess_capacity_termination_policy`)
    }
    get ref_fleet_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.fleet_type`)
    }
    get ref_iam_fleet_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_fleet_role`)
    }
    get ref_instance_interruption_behaviour(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_interruption_behaviour`)
    }
    get ref_instance_pools_to_use_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.instance_pools_to_use_count`)
    }
    get ref_launch_specification(): Reference<_aws_spot_fleet_request__launch_specification[]> {
        return new Reference(`${this._name}.${this._id}.launch_specification`)
    }
    get ref_load_balancers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.load_balancers`)
    }
    get ref_replace_unhealthy_instances(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.replace_unhealthy_instances`)
    }
    get ref_spot_price(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.spot_price`)
    }
    get ref_spot_request_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.spot_request_state`)
    }
    get ref_target_capacity(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.target_capacity`)
    }
    get ref_target_group_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.target_group_arns`)
    }
    get ref_terminate_instances_with_expiration(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.terminate_instances_with_expiration`)
    }
    get ref_valid_from(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.valid_from`)
    }
    get ref_valid_until(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.valid_until`)
    }
    get ref_wait_for_fulfillment(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.wait_for_fulfillment`)
    }
}

export interface _aws_spot_instance_request__credit_specification {
    cpu_credits?: rstring
}

export interface _aws_spot_instance_request__ebs_block_device {
    delete_on_termination?: rboolean
    device_name: rstring
    encrypted?: rboolean
    iops?: rnumber
    snapshot_id?: rstring
    volume_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _aws_spot_instance_request__ephemeral_block_device {
    device_name: rstring
    no_device?: rboolean
    virtual_name?: rstring
}

export interface _aws_spot_instance_request__network_interface {
    delete_on_termination?: rboolean
    device_index: rnumber
    network_interface_id: rstring
}

export interface _aws_spot_instance_request__root_block_device {
    delete_on_termination?: rboolean
    iops?: rnumber
    volume_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface aws_spot_instance_request_config {
    ami: rstring
    arn?: rstring
    associate_public_ip_address?: rboolean
    availability_zone?: rstring
    block_device?: {[propName: string]: rstring}
    block_duration_minutes?: rnumber
    cpu_core_count?: rnumber
    cpu_threads_per_core?: rnumber
    credit_specification?: _aws_spot_instance_request__credit_specification[]
    disable_api_termination?: rboolean
    ebs_block_device?: _aws_spot_instance_request__ebs_block_device[]
    ebs_optimized?: rboolean
    ephemeral_block_device?: _aws_spot_instance_request__ephemeral_block_device[]
    get_password_data?: rboolean
    host_id?: rstring
    iam_instance_profile?: rstring
    instance_initiated_shutdown_behavior?: rstring
    instance_interruption_behaviour?: rstring
    instance_state?: rstring
    instance_type: rstring
    ipv6_address_count?: rnumber
    ipv6_addresses?: rstring[]
    key_name?: rstring
    launch_group?: rstring
    monitoring?: rboolean
    network_interface?: _aws_spot_instance_request__network_interface[]
    network_interface_id?: rstring
    password_data?: rstring
    placement_group?: rstring
    primary_network_interface_id?: rstring
    private_dns?: rstring
    private_ip?: rstring
    public_dns?: rstring
    public_ip?: rstring
    root_block_device?: _aws_spot_instance_request__root_block_device[]
    security_groups?: rstring[]
    source_dest_check?: rboolean
    spot_bid_status?: rstring
    spot_instance_id?: rstring
    spot_price?: rstring
    spot_request_state?: rstring
    spot_type?: rstring
    subnet_id?: rstring
    tags?: {[propName: string]: rstring}
    tenancy?: rstring
    user_data?: rstring
    user_data_base64?: rstring
    valid_from?: rstring
    valid_until?: rstring
    volume_tags?: {[propName: string]: rstring}
    vpc_security_group_ids?: rstring[]
    wait_for_fulfillment?: rboolean
}

export class aws_spot_instance_request implements Resource {
    config: aws_spot_instance_request_config
    private _is_data: boolean = false
    private _name: string = "aws_spot_instance_request"
    private _id: string;
    constructor(id: string, config: aws_spot_instance_request_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_ami(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ami`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_associate_public_ip_address(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.associate_public_ip_address`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_block_device(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.block_device`)
    }
    get ref_block_duration_minutes(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.block_duration_minutes`)
    }
    get ref_cpu_core_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.cpu_core_count`)
    }
    get ref_cpu_threads_per_core(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.cpu_threads_per_core`)
    }
    get ref_credit_specification(): Reference<_aws_spot_instance_request__credit_specification[]> {
        return new Reference(`${this._name}.${this._id}.credit_specification`)
    }
    get ref_disable_api_termination(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.disable_api_termination`)
    }
    get ref_ebs_block_device(): Reference<_aws_spot_instance_request__ebs_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ebs_block_device`)
    }
    get ref_ebs_optimized(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.ebs_optimized`)
    }
    get ref_ephemeral_block_device(): Reference<_aws_spot_instance_request__ephemeral_block_device[]> {
        return new Reference(`${this._name}.${this._id}.ephemeral_block_device`)
    }
    get ref_get_password_data(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.get_password_data`)
    }
    get ref_host_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.host_id`)
    }
    get ref_iam_instance_profile(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_instance_profile`)
    }
    get ref_instance_initiated_shutdown_behavior(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_initiated_shutdown_behavior`)
    }
    get ref_instance_interruption_behaviour(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_interruption_behaviour`)
    }
    get ref_instance_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_state`)
    }
    get ref_instance_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_type`)
    }
    get ref_ipv6_address_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.ipv6_address_count`)
    }
    get ref_ipv6_addresses(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.ipv6_addresses`)
    }
    get ref_key_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_name`)
    }
    get ref_launch_group(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.launch_group`)
    }
    get ref_monitoring(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.monitoring`)
    }
    get ref_network_interface(): Reference<_aws_spot_instance_request__network_interface[]> {
        return new Reference(`${this._name}.${this._id}.network_interface`)
    }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface_id`)
    }
    get ref_password_data(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.password_data`)
    }
    get ref_placement_group(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.placement_group`)
    }
    get ref_primary_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.primary_network_interface_id`)
    }
    get ref_private_dns(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_dns`)
    }
    get ref_private_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_ip`)
    }
    get ref_public_dns(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_dns`)
    }
    get ref_public_ip(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.public_ip`)
    }
    get ref_root_block_device(): Reference<_aws_spot_instance_request__root_block_device[]> {
        return new Reference(`${this._name}.${this._id}.root_block_device`)
    }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_groups`)
    }
    get ref_source_dest_check(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.source_dest_check`)
    }
    get ref_spot_bid_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.spot_bid_status`)
    }
    get ref_spot_instance_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.spot_instance_id`)
    }
    get ref_spot_price(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.spot_price`)
    }
    get ref_spot_request_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.spot_request_state`)
    }
    get ref_spot_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.spot_type`)
    }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_tenancy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tenancy`)
    }
    get ref_user_data(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_data`)
    }
    get ref_user_data_base64(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_data_base64`)
    }
    get ref_valid_from(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.valid_from`)
    }
    get ref_valid_until(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.valid_until`)
    }
    get ref_volume_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.volume_tags`)
    }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.vpc_security_group_ids`)
    }
    get ref_wait_for_fulfillment(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.wait_for_fulfillment`)
    }
}

export interface aws_sqs_queue_config {
    arn?: rstring
    content_based_deduplication?: rboolean
    delay_seconds?: rnumber
    fifo_queue?: rboolean
    kms_data_key_reuse_period_seconds?: rnumber
    kms_master_key_id?: rstring
    max_message_size?: rnumber
    message_retention_seconds?: rnumber
    name?: rstring
    name_prefix?: rstring
    policy?: rstring
    receive_wait_time_seconds?: rnumber
    redrive_policy?: rstring
    tags?: {[propName: string]: rstring}
    visibility_timeout_seconds?: rnumber
}

export class aws_sqs_queue implements Resource {
    config: aws_sqs_queue_config
    private _is_data: boolean = false
    private _name: string = "aws_sqs_queue"
    private _id: string;
    constructor(id: string, config: aws_sqs_queue_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_content_based_deduplication(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.content_based_deduplication`)
    }
    get ref_delay_seconds(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.delay_seconds`)
    }
    get ref_fifo_queue(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.fifo_queue`)
    }
    get ref_kms_data_key_reuse_period_seconds(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.kms_data_key_reuse_period_seconds`)
    }
    get ref_kms_master_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_master_key_id`)
    }
    get ref_max_message_size(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.max_message_size`)
    }
    get ref_message_retention_seconds(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.message_retention_seconds`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_receive_wait_time_seconds(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.receive_wait_time_seconds`)
    }
    get ref_redrive_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.redrive_policy`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_visibility_timeout_seconds(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.visibility_timeout_seconds`)
    }
}

export interface aws_sqs_queue_policy_config {
    policy: rstring
    queue_url: rstring
}

export class aws_sqs_queue_policy implements Resource {
    config: aws_sqs_queue_policy_config
    private _is_data: boolean = false
    private _name: string = "aws_sqs_queue_policy"
    private _id: string;
    constructor(id: string, config: aws_sqs_queue_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_queue_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.queue_url`)
    }
}

export interface aws_ssm_activation_config {
    activation_code?: rstring
    description?: rstring
    expiration_date?: rstring
    expired?: rstring
    iam_role: rstring
    name?: rstring
    registration_count?: rnumber
    registration_limit?: rnumber
}

export class aws_ssm_activation implements Resource {
    config: aws_ssm_activation_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_activation"
    private _id: string;
    constructor(id: string, config: aws_ssm_activation_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_activation_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.activation_code`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_expiration_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.expiration_date`)
    }
    get ref_expired(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.expired`)
    }
    get ref_iam_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.iam_role`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_registration_count(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.registration_count`)
    }
    get ref_registration_limit(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.registration_limit`)
    }
}

export interface _aws_ssm_association__output_location {
    s3_bucket_name: rstring
    s3_key_prefix?: rstring
}

export interface _aws_ssm_association__targets {
    key: rstring
    values: rstring[]
}

export interface aws_ssm_association_config {
    association_id?: rstring
    association_name?: rstring
    document_version?: rstring
    instance_id?: rstring
    name: rstring
    output_location?: _aws_ssm_association__output_location[]
    parameters?: {[propName: string]: rstring}
    schedule_expression?: rstring
    targets?: _aws_ssm_association__targets[]
}

export class aws_ssm_association implements Resource {
    config: aws_ssm_association_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_association"
    private _id: string;
    constructor(id: string, config: aws_ssm_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_association_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.association_id`)
    }
    get ref_association_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.association_name`)
    }
    get ref_document_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.document_version`)
    }
    get ref_instance_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_output_location(): Reference<_aws_ssm_association__output_location[]> {
        return new Reference(`${this._name}.${this._id}.output_location`)
    }
    get ref_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.parameters`)
    }
    get ref_schedule_expression(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.schedule_expression`)
    }
    get ref_targets(): Reference<_aws_ssm_association__targets[]> {
        return new Reference(`${this._name}.${this._id}.targets`)
    }
}

export interface _aws_ssm_document__parameter {
    default_value?: rstring
    description?: rstring
    name?: rstring
    type?: rstring
}

export interface aws_ssm_document_config {
    arn?: rstring
    content: rstring
    created_date?: rstring
    default_version?: rstring
    description?: rstring
    document_format?: rstring
    document_type: rstring
    hash?: rstring
    hash_type?: rstring
    latest_version?: rstring
    name: rstring
    owner?: rstring
    parameter?: _aws_ssm_document__parameter[]
    permissions?: {[propName: string]: rstring}
    platform_types?: rstring[]
    schema_version?: rstring
    status?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_ssm_document implements Resource {
    config: aws_ssm_document_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_document"
    private _id: string;
    constructor(id: string, config: aws_ssm_document_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_content(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.content`)
    }
    get ref_created_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_date`)
    }
    get ref_default_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_version`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_document_format(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.document_format`)
    }
    get ref_document_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.document_type`)
    }
    get ref_hash(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hash`)
    }
    get ref_hash_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.hash_type`)
    }
    get ref_latest_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.latest_version`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_owner(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner`)
    }
    get ref_parameter(): Reference<_aws_ssm_document__parameter[]> {
        return new Reference(`${this._name}.${this._id}.parameter`)
    }
    get ref_permissions(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.permissions`)
    }
    get ref_platform_types(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.platform_types`)
    }
    get ref_schema_version(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.schema_version`)
    }
    get ref_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.status`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_ssm_maintenance_window_config {
    allow_unassociated_targets?: rboolean
    cutoff: rnumber
    duration: rnumber
    enabled?: rboolean
    end_date?: rstring
    name: rstring
    schedule: rstring
    schedule_timezone?: rstring
    start_date?: rstring
}

export class aws_ssm_maintenance_window implements Resource {
    config: aws_ssm_maintenance_window_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_maintenance_window"
    private _id: string;
    constructor(id: string, config: aws_ssm_maintenance_window_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allow_unassociated_targets(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.allow_unassociated_targets`)
    }
    get ref_cutoff(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.cutoff`)
    }
    get ref_duration(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.duration`)
    }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enabled`)
    }
    get ref_end_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.end_date`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_schedule(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.schedule`)
    }
    get ref_schedule_timezone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.schedule_timezone`)
    }
    get ref_start_date(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.start_date`)
    }
}

export interface _aws_ssm_maintenance_window_target__targets {
    key: rstring
    values: rstring[]
}

export interface aws_ssm_maintenance_window_target_config {
    owner_information?: rstring
    resource_type: rstring
    targets: _aws_ssm_maintenance_window_target__targets[]
    window_id: rstring
}

export class aws_ssm_maintenance_window_target implements Resource {
    config: aws_ssm_maintenance_window_target_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_maintenance_window_target"
    private _id: string;
    constructor(id: string, config: aws_ssm_maintenance_window_target_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_owner_information(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_information`)
    }
    get ref_resource_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_type`)
    }
    get ref_targets(): Reference<_aws_ssm_maintenance_window_target__targets[]> {
        return new Reference(`${this._name}.${this._id}.targets`)
    }
    get ref_window_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.window_id`)
    }
}

export interface _aws_ssm_maintenance_window_task__logging_info {
    s3_bucket_name: rstring
    s3_bucket_prefix?: rstring
    s3_region: rstring
}

export interface _aws_ssm_maintenance_window_task__targets {
    key: rstring
    values: rstring[]
}

export interface _aws_ssm_maintenance_window_task__task_parameters {
    name: rstring
    values: rstring[]
}

export interface aws_ssm_maintenance_window_task_config {
    description?: rstring
    logging_info?: _aws_ssm_maintenance_window_task__logging_info[]
    max_concurrency: rstring
    max_errors: rstring
    name?: rstring
    priority?: rnumber
    service_role_arn: rstring
    targets: _aws_ssm_maintenance_window_task__targets[]
    task_arn: rstring
    task_parameters?: _aws_ssm_maintenance_window_task__task_parameters[]
    task_type: rstring
    window_id: rstring
}

export class aws_ssm_maintenance_window_task implements Resource {
    config: aws_ssm_maintenance_window_task_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_maintenance_window_task"
    private _id: string;
    constructor(id: string, config: aws_ssm_maintenance_window_task_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_logging_info(): Reference<_aws_ssm_maintenance_window_task__logging_info[]> {
        return new Reference(`${this._name}.${this._id}.logging_info`)
    }
    get ref_max_concurrency(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.max_concurrency`)
    }
    get ref_max_errors(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.max_errors`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_priority(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.priority`)
    }
    get ref_service_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_role_arn`)
    }
    get ref_targets(): Reference<_aws_ssm_maintenance_window_task__targets[]> {
        return new Reference(`${this._name}.${this._id}.targets`)
    }
    get ref_task_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.task_arn`)
    }
    get ref_task_parameters(): Reference<_aws_ssm_maintenance_window_task__task_parameters[]> {
        return new Reference(`${this._name}.${this._id}.task_parameters`)
    }
    get ref_task_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.task_type`)
    }
    get ref_window_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.window_id`)
    }
}

export interface aws_ssm_parameter_config {
    allowed_pattern?: rstring
    arn?: rstring
    description?: rstring
    key_id?: rstring
    name: rstring
    overwrite?: rboolean
    tags?: {[propName: string]: rstring}
    type: rstring
    value: rstring
}

export class aws_ssm_parameter implements Resource {
    config: aws_ssm_parameter_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_parameter"
    private _id: string;
    constructor(id: string, config: aws_ssm_parameter_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allowed_pattern(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.allowed_pattern`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_key_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.key_id`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_overwrite(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.overwrite`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
    get ref_value(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.value`)
    }
}

export interface __aws_ssm_patch_baseline__approval_rule__patch_filter {
    key: rstring
    values: rstring[]
}

export interface _aws_ssm_patch_baseline__approval_rule {
    approve_after_days: rnumber
    compliance_level?: rstring
    enable_non_security?: rboolean
    patch_filter: __aws_ssm_patch_baseline__approval_rule__patch_filter[]
}

export interface _aws_ssm_patch_baseline__global_filter {
    key: rstring
    values: rstring[]
}

export interface aws_ssm_patch_baseline_config {
    approval_rule?: _aws_ssm_patch_baseline__approval_rule[]
    approved_patches?: rstring[]
    approved_patches_compliance_level?: rstring
    description?: rstring
    global_filter?: _aws_ssm_patch_baseline__global_filter[]
    name: rstring
    operating_system?: rstring
    rejected_patches?: rstring[]
}

export class aws_ssm_patch_baseline implements Resource {
    config: aws_ssm_patch_baseline_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_patch_baseline"
    private _id: string;
    constructor(id: string, config: aws_ssm_patch_baseline_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_approval_rule(): Reference<_aws_ssm_patch_baseline__approval_rule[]> {
        return new Reference(`${this._name}.${this._id}.approval_rule`)
    }
    get ref_approved_patches(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.approved_patches`)
    }
    get ref_approved_patches_compliance_level(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.approved_patches_compliance_level`)
    }
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_global_filter(): Reference<_aws_ssm_patch_baseline__global_filter[]> {
        return new Reference(`${this._name}.${this._id}.global_filter`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_operating_system(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.operating_system`)
    }
    get ref_rejected_patches(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.rejected_patches`)
    }
}

export interface aws_ssm_patch_group_config {
    baseline_id: rstring
    patch_group: rstring
}

export class aws_ssm_patch_group implements Resource {
    config: aws_ssm_patch_group_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_patch_group"
    private _id: string;
    constructor(id: string, config: aws_ssm_patch_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_baseline_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.baseline_id`)
    }
    get ref_patch_group(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.patch_group`)
    }
}

export interface _aws_ssm_resource_data_sync__s3_destination {
    bucket_name: rstring
    kms_key_arn?: rstring
    prefix?: rstring
    region: rstring
    sync_format?: rstring
}

export interface aws_ssm_resource_data_sync_config {
    name: rstring
    s3_destination: _aws_ssm_resource_data_sync__s3_destination[]
}

export class aws_ssm_resource_data_sync implements Resource {
    config: aws_ssm_resource_data_sync_config
    private _is_data: boolean = false
    private _name: string = "aws_ssm_resource_data_sync"
    private _id: string;
    constructor(id: string, config: aws_ssm_resource_data_sync_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_s3_destination(): Reference<_aws_ssm_resource_data_sync__s3_destination[]> {
        return new Reference(`${this._name}.${this._id}.s3_destination`)
    }
}

export interface aws_storagegateway_cache_config {
    disk_id: rstring
    gateway_arn: rstring
}

export class aws_storagegateway_cache implements Resource {
    config: aws_storagegateway_cache_config
    private _is_data: boolean = false
    private _name: string = "aws_storagegateway_cache"
    private _id: string;
    constructor(id: string, config: aws_storagegateway_cache_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_disk_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.disk_id`)
    }
    get ref_gateway_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_arn`)
    }
}

export interface aws_storagegateway_cached_iscsi_volume_config {
    arn?: rstring
    chap_enabled?: rboolean
    gateway_arn: rstring
    lun_number?: rnumber
    network_interface_id: rstring
    network_interface_port?: rnumber
    snapshot_id?: rstring
    source_volume_arn?: rstring
    target_arn?: rstring
    target_name: rstring
    volume_arn?: rstring
    volume_id?: rstring
    volume_size_in_bytes: rnumber
}

export class aws_storagegateway_cached_iscsi_volume implements Resource {
    config: aws_storagegateway_cached_iscsi_volume_config
    private _is_data: boolean = false
    private _name: string = "aws_storagegateway_cached_iscsi_volume"
    private _id: string;
    constructor(id: string, config: aws_storagegateway_cached_iscsi_volume_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_chap_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.chap_enabled`)
    }
    get ref_gateway_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_arn`)
    }
    get ref_lun_number(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.lun_number`)
    }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.network_interface_id`)
    }
    get ref_network_interface_port(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.network_interface_port`)
    }
    get ref_snapshot_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.snapshot_id`)
    }
    get ref_source_volume_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.source_volume_arn`)
    }
    get ref_target_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_arn`)
    }
    get ref_target_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.target_name`)
    }
    get ref_volume_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.volume_arn`)
    }
    get ref_volume_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.volume_id`)
    }
    get ref_volume_size_in_bytes(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.volume_size_in_bytes`)
    }
}

export interface _aws_storagegateway_gateway__smb_active_directory_settings {
    domain_name: rstring
    password: rstring
    username: rstring
}

export interface aws_storagegateway_gateway_config {
    activation_key?: rstring
    arn?: rstring
    gateway_id?: rstring
    gateway_ip_address?: rstring
    gateway_name: rstring
    gateway_timezone: rstring
    gateway_type?: rstring
    medium_changer_type?: rstring
    smb_active_directory_settings?: _aws_storagegateway_gateway__smb_active_directory_settings[]
    smb_guest_password?: rstring
    tape_drive_type?: rstring
}

export class aws_storagegateway_gateway implements Resource {
    config: aws_storagegateway_gateway_config
    private _is_data: boolean = false
    private _name: string = "aws_storagegateway_gateway"
    private _id: string;
    constructor(id: string, config: aws_storagegateway_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_activation_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.activation_key`)
    }
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_id`)
    }
    get ref_gateway_ip_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_ip_address`)
    }
    get ref_gateway_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_name`)
    }
    get ref_gateway_timezone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_timezone`)
    }
    get ref_gateway_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_type`)
    }
    get ref_medium_changer_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.medium_changer_type`)
    }
    get ref_smb_active_directory_settings(): Reference<_aws_storagegateway_gateway__smb_active_directory_settings[]> {
        return new Reference(`${this._name}.${this._id}.smb_active_directory_settings`)
    }
    get ref_smb_guest_password(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.smb_guest_password`)
    }
    get ref_tape_drive_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tape_drive_type`)
    }
}

export interface _aws_storagegateway_nfs_file_share__nfs_file_share_defaults {
    directory_mode?: rstring
    file_mode?: rstring
    group_id?: rnumber
    owner_id?: rnumber
}

export interface aws_storagegateway_nfs_file_share_config {
    arn?: rstring
    client_list: rstring[]
    default_storage_class?: rstring
    fileshare_id?: rstring
    gateway_arn: rstring
    guess_mime_type_enabled?: rboolean
    kms_encrypted?: rboolean
    kms_key_arn?: rstring
    location_arn: rstring
    nfs_file_share_defaults?: _aws_storagegateway_nfs_file_share__nfs_file_share_defaults[]
    object_acl?: rstring
    read_only?: rboolean
    requester_pays?: rboolean
    role_arn: rstring
    squash?: rstring
}

export class aws_storagegateway_nfs_file_share implements Resource {
    config: aws_storagegateway_nfs_file_share_config
    private _is_data: boolean = false
    private _name: string = "aws_storagegateway_nfs_file_share"
    private _id: string;
    constructor(id: string, config: aws_storagegateway_nfs_file_share_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_client_list(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.client_list`)
    }
    get ref_default_storage_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_storage_class`)
    }
    get ref_fileshare_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.fileshare_id`)
    }
    get ref_gateway_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_arn`)
    }
    get ref_guess_mime_type_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.guess_mime_type_enabled`)
    }
    get ref_kms_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.kms_encrypted`)
    }
    get ref_kms_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_arn`)
    }
    get ref_location_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.location_arn`)
    }
    get ref_nfs_file_share_defaults(): Reference<_aws_storagegateway_nfs_file_share__nfs_file_share_defaults[]> {
        return new Reference(`${this._name}.${this._id}.nfs_file_share_defaults`)
    }
    get ref_object_acl(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.object_acl`)
    }
    get ref_read_only(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.read_only`)
    }
    get ref_requester_pays(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.requester_pays`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_squash(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.squash`)
    }
}

export interface aws_storagegateway_smb_file_share_config {
    arn?: rstring
    authentication?: rstring
    default_storage_class?: rstring
    fileshare_id?: rstring
    gateway_arn: rstring
    guess_mime_type_enabled?: rboolean
    invalid_user_list?: rstring[]
    kms_encrypted?: rboolean
    kms_key_arn?: rstring
    location_arn: rstring
    object_acl?: rstring
    read_only?: rboolean
    requester_pays?: rboolean
    role_arn: rstring
    valid_user_list?: rstring[]
}

export class aws_storagegateway_smb_file_share implements Resource {
    config: aws_storagegateway_smb_file_share_config
    private _is_data: boolean = false
    private _name: string = "aws_storagegateway_smb_file_share"
    private _id: string;
    constructor(id: string, config: aws_storagegateway_smb_file_share_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_authentication(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.authentication`)
    }
    get ref_default_storage_class(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_storage_class`)
    }
    get ref_fileshare_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.fileshare_id`)
    }
    get ref_gateway_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_arn`)
    }
    get ref_guess_mime_type_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.guess_mime_type_enabled`)
    }
    get ref_invalid_user_list(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.invalid_user_list`)
    }
    get ref_kms_encrypted(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.kms_encrypted`)
    }
    get ref_kms_key_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.kms_key_arn`)
    }
    get ref_location_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.location_arn`)
    }
    get ref_object_acl(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.object_acl`)
    }
    get ref_read_only(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.read_only`)
    }
    get ref_requester_pays(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.requester_pays`)
    }
    get ref_role_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role_arn`)
    }
    get ref_valid_user_list(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.valid_user_list`)
    }
}

export interface aws_storagegateway_upload_buffer_config {
    disk_id: rstring
    gateway_arn: rstring
}

export class aws_storagegateway_upload_buffer implements Resource {
    config: aws_storagegateway_upload_buffer_config
    private _is_data: boolean = false
    private _name: string = "aws_storagegateway_upload_buffer"
    private _id: string;
    constructor(id: string, config: aws_storagegateway_upload_buffer_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_disk_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.disk_id`)
    }
    get ref_gateway_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_arn`)
    }
}

export interface aws_storagegateway_working_storage_config {
    disk_id: rstring
    gateway_arn: rstring
}

export class aws_storagegateway_working_storage implements Resource {
    config: aws_storagegateway_working_storage_config
    private _is_data: boolean = false
    private _name: string = "aws_storagegateway_working_storage"
    private _id: string;
    constructor(id: string, config: aws_storagegateway_working_storage_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_disk_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.disk_id`)
    }
    get ref_gateway_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.gateway_arn`)
    }
}

export interface aws_subnet_config {
    arn?: rstring
    assign_ipv6_address_on_creation?: rboolean
    availability_zone?: rstring
    availability_zone_id?: rstring
    cidr_block: rstring
    ipv6_cidr_block?: rstring
    ipv6_cidr_block_association_id?: rstring
    map_public_ip_on_launch?: rboolean
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id: rstring
}

export class aws_subnet implements Resource {
    config: aws_subnet_config
    private _is_data: boolean = false
    private _name: string = "aws_subnet"
    private _id: string;
    constructor(id: string, config: aws_subnet_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_assign_ipv6_address_on_creation(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.assign_ipv6_address_on_creation`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_availability_zone_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone_id`)
    }
    get ref_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cidr_block`)
    }
    get ref_ipv6_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_cidr_block`)
    }
    get ref_ipv6_cidr_block_association_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_cidr_block_association_id`)
    }
    get ref_map_public_ip_on_launch(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.map_public_ip_on_launch`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_swf_domain_config {
    description?: rstring
    name?: rstring
    name_prefix?: rstring
    workflow_execution_retention_period_in_days: rstring
}

export class aws_swf_domain implements Resource {
    config: aws_swf_domain_config
    private _is_data: boolean = false
    private _name: string = "aws_swf_domain"
    private _id: string;
    constructor(id: string, config: aws_swf_domain_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_description(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.description`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name_prefix`)
    }
    get ref_workflow_execution_retention_period_in_days(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.workflow_execution_retention_period_in_days`)
    }
}

export interface aws_transfer_server_config {
    arn?: rstring
    endpoint?: rstring
    force_destroy?: rboolean
    identity_provider_type?: rstring
    invocation_role?: rstring
    logging_role?: rstring
    tags?: {[propName: string]: rstring}
    url?: rstring
}

export class aws_transfer_server implements Resource {
    config: aws_transfer_server_config
    private _is_data: boolean = false
    private _name: string = "aws_transfer_server"
    private _id: string;
    constructor(id: string, config: aws_transfer_server_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_endpoint(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.endpoint`)
    }
    get ref_force_destroy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_destroy`)
    }
    get ref_identity_provider_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.identity_provider_type`)
    }
    get ref_invocation_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.invocation_role`)
    }
    get ref_logging_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.logging_role`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_url(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.url`)
    }
}

export interface aws_transfer_ssh_key_config {
    body: rstring
    server_id: rstring
    user_name: rstring
}

export class aws_transfer_ssh_key implements Resource {
    config: aws_transfer_ssh_key_config
    private _is_data: boolean = false
    private _name: string = "aws_transfer_ssh_key"
    private _id: string;
    constructor(id: string, config: aws_transfer_ssh_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_body(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.body`)
    }
    get ref_server_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.server_id`)
    }
    get ref_user_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_name`)
    }
}

export interface aws_transfer_user_config {
    arn?: rstring
    home_directory?: rstring
    policy?: rstring
    role: rstring
    server_id: rstring
    tags?: {[propName: string]: rstring}
    user_name: rstring
}

export class aws_transfer_user implements Resource {
    config: aws_transfer_user_config
    private _is_data: boolean = false
    private _name: string = "aws_transfer_user"
    private _id: string;
    constructor(id: string, config: aws_transfer_user_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_home_directory(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.home_directory`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_role(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.role`)
    }
    get ref_server_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.server_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_user_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.user_name`)
    }
}

export interface aws_volume_attachment_config {
    device_name: rstring
    force_detach?: rboolean
    instance_id: rstring
    skip_destroy?: rboolean
    volume_id: rstring
}

export class aws_volume_attachment implements Resource {
    config: aws_volume_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_volume_attachment"
    private _id: string;
    constructor(id: string, config: aws_volume_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_device_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.device_name`)
    }
    get ref_force_detach(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.force_detach`)
    }
    get ref_instance_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_id`)
    }
    get ref_skip_destroy(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.skip_destroy`)
    }
    get ref_volume_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.volume_id`)
    }
}

export interface aws_vpc_config {
    arn?: rstring
    assign_generated_ipv6_cidr_block?: rboolean
    cidr_block: rstring
    default_network_acl_id?: rstring
    default_route_table_id?: rstring
    default_security_group_id?: rstring
    dhcp_options_id?: rstring
    enable_classiclink?: rboolean
    enable_classiclink_dns_support?: rboolean
    enable_dns_hostnames?: rboolean
    enable_dns_support?: rboolean
    instance_tenancy?: rstring
    ipv6_association_id?: rstring
    ipv6_cidr_block?: rstring
    main_route_table_id?: rstring
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_vpc implements Resource {
    config: aws_vpc_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc"
    private _id: string;
    constructor(id: string, config: aws_vpc_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_assign_generated_ipv6_cidr_block(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.assign_generated_ipv6_cidr_block`)
    }
    get ref_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cidr_block`)
    }
    get ref_default_network_acl_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_network_acl_id`)
    }
    get ref_default_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_route_table_id`)
    }
    get ref_default_security_group_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.default_security_group_id`)
    }
    get ref_dhcp_options_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dhcp_options_id`)
    }
    get ref_enable_classiclink(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_classiclink`)
    }
    get ref_enable_classiclink_dns_support(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_classiclink_dns_support`)
    }
    get ref_enable_dns_hostnames(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_dns_hostnames`)
    }
    get ref_enable_dns_support(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.enable_dns_support`)
    }
    get ref_instance_tenancy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.instance_tenancy`)
    }
    get ref_ipv6_association_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_association_id`)
    }
    get ref_ipv6_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.ipv6_cidr_block`)
    }
    get ref_main_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.main_route_table_id`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_vpc_dhcp_options_config {
    domain_name?: rstring
    domain_name_servers?: rstring[]
    netbios_name_servers?: rstring[]
    netbios_node_type?: rstring
    ntp_servers?: rstring[]
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
}

export class aws_vpc_dhcp_options implements Resource {
    config: aws_vpc_dhcp_options_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_dhcp_options"
    private _id: string;
    constructor(id: string, config: aws_vpc_dhcp_options_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_domain_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.domain_name`)
    }
    get ref_domain_name_servers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.domain_name_servers`)
    }
    get ref_netbios_name_servers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.netbios_name_servers`)
    }
    get ref_netbios_node_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.netbios_node_type`)
    }
    get ref_ntp_servers(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.ntp_servers`)
    }
    get ref_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.owner_id`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
}

export interface aws_vpc_dhcp_options_association_config {
    dhcp_options_id: rstring
    vpc_id: rstring
}

export class aws_vpc_dhcp_options_association implements Resource {
    config: aws_vpc_dhcp_options_association_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_dhcp_options_association"
    private _id: string;
    constructor(id: string, config: aws_vpc_dhcp_options_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dhcp_options_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.dhcp_options_id`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface _aws_vpc_endpoint__dns_entry {
    dns_name?: rstring
    hosted_zone_id?: rstring
}

export interface aws_vpc_endpoint_config {
    auto_accept?: rboolean
    cidr_blocks?: rstring[]
    dns_entry?: _aws_vpc_endpoint__dns_entry[]
    network_interface_ids?: rstring[]
    policy?: rstring
    prefix_list_id?: rstring
    private_dns_enabled?: rboolean
    route_table_ids?: rstring[]
    security_group_ids?: rstring[]
    service_name: rstring
    state?: rstring
    subnet_ids?: rstring[]
    vpc_endpoint_type?: rstring
    vpc_id: rstring
}

export class aws_vpc_endpoint implements Resource {
    config: aws_vpc_endpoint_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_endpoint"
    private _id: string;
    constructor(id: string, config: aws_vpc_endpoint_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_auto_accept(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_accept`)
    }
    get ref_cidr_blocks(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.cidr_blocks`)
    }
    get ref_dns_entry(): Reference<_aws_vpc_endpoint__dns_entry[]> {
        return new Reference(`${this._name}.${this._id}.dns_entry`)
    }
    get ref_network_interface_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.network_interface_ids`)
    }
    get ref_policy(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.policy`)
    }
    get ref_prefix_list_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.prefix_list_id`)
    }
    get ref_private_dns_enabled(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.private_dns_enabled`)
    }
    get ref_route_table_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.route_table_ids`)
    }
    get ref_security_group_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.security_group_ids`)
    }
    get ref_service_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_name`)
    }
    get ref_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state`)
    }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.subnet_ids`)
    }
    get ref_vpc_endpoint_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_endpoint_type`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_vpc_endpoint_connection_notification_config {
    connection_events: rstring[]
    connection_notification_arn: rstring
    notification_type?: rstring
    state?: rstring
    vpc_endpoint_id?: rstring
    vpc_endpoint_service_id?: rstring
}

export class aws_vpc_endpoint_connection_notification implements Resource {
    config: aws_vpc_endpoint_connection_notification_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_endpoint_connection_notification"
    private _id: string;
    constructor(id: string, config: aws_vpc_endpoint_connection_notification_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_connection_events(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.connection_events`)
    }
    get ref_connection_notification_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.connection_notification_arn`)
    }
    get ref_notification_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.notification_type`)
    }
    get ref_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state`)
    }
    get ref_vpc_endpoint_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_endpoint_id`)
    }
    get ref_vpc_endpoint_service_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_endpoint_service_id`)
    }
}

export interface aws_vpc_endpoint_route_table_association_config {
    route_table_id: rstring
    vpc_endpoint_id: rstring
}

export class aws_vpc_endpoint_route_table_association implements Resource {
    config: aws_vpc_endpoint_route_table_association_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_endpoint_route_table_association"
    private _id: string;
    constructor(id: string, config: aws_vpc_endpoint_route_table_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.route_table_id`)
    }
    get ref_vpc_endpoint_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_endpoint_id`)
    }
}

export interface aws_vpc_endpoint_service_config {
    acceptance_required: rboolean
    allowed_principals?: rstring[]
    availability_zones?: rstring[]
    base_endpoint_dns_names?: rstring[]
    network_load_balancer_arns: rstring[]
    private_dns_name?: rstring
    service_name?: rstring
    service_type?: rstring
    state?: rstring
}

export class aws_vpc_endpoint_service implements Resource {
    config: aws_vpc_endpoint_service_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_endpoint_service"
    private _id: string;
    constructor(id: string, config: aws_vpc_endpoint_service_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_acceptance_required(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.acceptance_required`)
    }
    get ref_allowed_principals(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.allowed_principals`)
    }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.availability_zones`)
    }
    get ref_base_endpoint_dns_names(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.base_endpoint_dns_names`)
    }
    get ref_network_load_balancer_arns(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.network_load_balancer_arns`)
    }
    get ref_private_dns_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.private_dns_name`)
    }
    get ref_service_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_name`)
    }
    get ref_service_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.service_type`)
    }
    get ref_state(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.state`)
    }
}

export interface aws_vpc_endpoint_service_allowed_principal_config {
    principal_arn: rstring
    vpc_endpoint_service_id: rstring
}

export class aws_vpc_endpoint_service_allowed_principal implements Resource {
    config: aws_vpc_endpoint_service_allowed_principal_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_endpoint_service_allowed_principal"
    private _id: string;
    constructor(id: string, config: aws_vpc_endpoint_service_allowed_principal_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_principal_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.principal_arn`)
    }
    get ref_vpc_endpoint_service_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_endpoint_service_id`)
    }
}

export interface aws_vpc_endpoint_subnet_association_config {
    subnet_id: rstring
    vpc_endpoint_id: rstring
}

export class aws_vpc_endpoint_subnet_association implements Resource {
    config: aws_vpc_endpoint_subnet_association_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_endpoint_subnet_association"
    private _id: string;
    constructor(id: string, config: aws_vpc_endpoint_subnet_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_subnet_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.subnet_id`)
    }
    get ref_vpc_endpoint_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_endpoint_id`)
    }
}

export interface aws_vpc_ipv4_cidr_block_association_config {
    cidr_block: rstring
    vpc_id: rstring
}

export class aws_vpc_ipv4_cidr_block_association implements Resource {
    config: aws_vpc_ipv4_cidr_block_association_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_ipv4_cidr_block_association"
    private _id: string;
    constructor(id: string, config: aws_vpc_ipv4_cidr_block_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.cidr_block`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface _aws_vpc_peering_connection__accepter {
    allow_classic_link_to_remote_vpc?: rboolean
    allow_remote_vpc_dns_resolution?: rboolean
    allow_vpc_to_remote_classic_link?: rboolean
}

export interface _aws_vpc_peering_connection__requester {
    allow_classic_link_to_remote_vpc?: rboolean
    allow_remote_vpc_dns_resolution?: rboolean
    allow_vpc_to_remote_classic_link?: rboolean
}

export interface aws_vpc_peering_connection_config {
    accept_status?: rstring
    accepter?: _aws_vpc_peering_connection__accepter[]
    auto_accept?: rboolean
    peer_owner_id?: rstring
    peer_region?: rstring
    peer_vpc_id: rstring
    requester?: _aws_vpc_peering_connection__requester[]
    tags?: {[propName: string]: rstring}
    vpc_id: rstring
}

export class aws_vpc_peering_connection implements Resource {
    config: aws_vpc_peering_connection_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_peering_connection"
    private _id: string;
    constructor(id: string, config: aws_vpc_peering_connection_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_accept_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.accept_status`)
    }
    get ref_accepter(): Reference<_aws_vpc_peering_connection__accepter[]> {
        return new Reference(`${this._name}.${this._id}.accepter`)
    }
    get ref_auto_accept(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_accept`)
    }
    get ref_peer_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.peer_owner_id`)
    }
    get ref_peer_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.peer_region`)
    }
    get ref_peer_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.peer_vpc_id`)
    }
    get ref_requester(): Reference<_aws_vpc_peering_connection__requester[]> {
        return new Reference(`${this._name}.${this._id}.requester`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface _aws_vpc_peering_connection_accepter__accepter {
    allow_classic_link_to_remote_vpc?: rboolean
    allow_remote_vpc_dns_resolution?: rboolean
    allow_vpc_to_remote_classic_link?: rboolean
}

export interface _aws_vpc_peering_connection_accepter__requester {
    allow_classic_link_to_remote_vpc?: rboolean
    allow_remote_vpc_dns_resolution?: rboolean
    allow_vpc_to_remote_classic_link?: rboolean
}

export interface aws_vpc_peering_connection_accepter_config {
    accept_status?: rstring
    accepter?: _aws_vpc_peering_connection_accepter__accepter[]
    auto_accept?: rboolean
    peer_owner_id?: rstring
    peer_region?: rstring
    peer_vpc_id?: rstring
    requester?: _aws_vpc_peering_connection_accepter__requester[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
    vpc_peering_connection_id: rstring
}

export class aws_vpc_peering_connection_accepter implements Resource {
    config: aws_vpc_peering_connection_accepter_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_peering_connection_accepter"
    private _id: string;
    constructor(id: string, config: aws_vpc_peering_connection_accepter_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_accept_status(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.accept_status`)
    }
    get ref_accepter(): Reference<_aws_vpc_peering_connection_accepter__accepter[]> {
        return new Reference(`${this._name}.${this._id}.accepter`)
    }
    get ref_auto_accept(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.auto_accept`)
    }
    get ref_peer_owner_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.peer_owner_id`)
    }
    get ref_peer_region(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.peer_region`)
    }
    get ref_peer_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.peer_vpc_id`)
    }
    get ref_requester(): Reference<_aws_vpc_peering_connection_accepter__requester[]> {
        return new Reference(`${this._name}.${this._id}.requester`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
    get ref_vpc_peering_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_peering_connection_id`)
    }
}

export interface _aws_vpc_peering_connection_options__accepter {
    allow_classic_link_to_remote_vpc?: rboolean
    allow_remote_vpc_dns_resolution?: rboolean
    allow_vpc_to_remote_classic_link?: rboolean
}

export interface _aws_vpc_peering_connection_options__requester {
    allow_classic_link_to_remote_vpc?: rboolean
    allow_remote_vpc_dns_resolution?: rboolean
    allow_vpc_to_remote_classic_link?: rboolean
}

export interface aws_vpc_peering_connection_options_config {
    accepter?: _aws_vpc_peering_connection_options__accepter[]
    requester?: _aws_vpc_peering_connection_options__requester[]
    vpc_peering_connection_id: rstring
}

export class aws_vpc_peering_connection_options implements Resource {
    config: aws_vpc_peering_connection_options_config
    private _is_data: boolean = false
    private _name: string = "aws_vpc_peering_connection_options"
    private _id: string;
    constructor(id: string, config: aws_vpc_peering_connection_options_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_accepter(): Reference<_aws_vpc_peering_connection_options__accepter[]> {
        return new Reference(`${this._name}.${this._id}.accepter`)
    }
    get ref_requester(): Reference<_aws_vpc_peering_connection_options__requester[]> {
        return new Reference(`${this._name}.${this._id}.requester`)
    }
    get ref_vpc_peering_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_peering_connection_id`)
    }
}

export interface _aws_vpn_connection__routes {
    destination_cidr_block?: rstring
    source?: rstring
    state?: rstring
}

export interface _aws_vpn_connection__vgw_telemetry {
    accepted_route_count?: rnumber
    last_status_change?: rstring
    outside_ip_address?: rstring
    status?: rstring
    status_message?: rstring
}

export interface aws_vpn_connection_config {
    customer_gateway_configuration?: rstring
    customer_gateway_id: rstring
    routes?: _aws_vpn_connection__routes[]
    static_routes_only?: rboolean
    tags?: {[propName: string]: rstring}
    transit_gateway_id?: rstring
    tunnel1_address?: rstring
    tunnel1_bgp_asn?: rstring
    tunnel1_bgp_holdtime?: rnumber
    tunnel1_cgw_inside_address?: rstring
    tunnel1_inside_cidr?: rstring
    tunnel1_preshared_key?: rstring
    tunnel1_vgw_inside_address?: rstring
    tunnel2_address?: rstring
    tunnel2_bgp_asn?: rstring
    tunnel2_bgp_holdtime?: rnumber
    tunnel2_cgw_inside_address?: rstring
    tunnel2_inside_cidr?: rstring
    tunnel2_preshared_key?: rstring
    tunnel2_vgw_inside_address?: rstring
    type: rstring
    vgw_telemetry?: _aws_vpn_connection__vgw_telemetry[]
    vpn_gateway_id?: rstring
}

export class aws_vpn_connection implements Resource {
    config: aws_vpn_connection_config
    private _is_data: boolean = false
    private _name: string = "aws_vpn_connection"
    private _id: string;
    constructor(id: string, config: aws_vpn_connection_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_customer_gateway_configuration(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_gateway_configuration`)
    }
    get ref_customer_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.customer_gateway_id`)
    }
    get ref_routes(): Reference<_aws_vpn_connection__routes[]> {
        return new Reference(`${this._name}.${this._id}.routes`)
    }
    get ref_static_routes_only(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.static_routes_only`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_transit_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.transit_gateway_id`)
    }
    get ref_tunnel1_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel1_address`)
    }
    get ref_tunnel1_bgp_asn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel1_bgp_asn`)
    }
    get ref_tunnel1_bgp_holdtime(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.tunnel1_bgp_holdtime`)
    }
    get ref_tunnel1_cgw_inside_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel1_cgw_inside_address`)
    }
    get ref_tunnel1_inside_cidr(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel1_inside_cidr`)
    }
    get ref_tunnel1_preshared_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel1_preshared_key`)
    }
    get ref_tunnel1_vgw_inside_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel1_vgw_inside_address`)
    }
    get ref_tunnel2_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel2_address`)
    }
    get ref_tunnel2_bgp_asn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel2_bgp_asn`)
    }
    get ref_tunnel2_bgp_holdtime(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.tunnel2_bgp_holdtime`)
    }
    get ref_tunnel2_cgw_inside_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel2_cgw_inside_address`)
    }
    get ref_tunnel2_inside_cidr(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel2_inside_cidr`)
    }
    get ref_tunnel2_preshared_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel2_preshared_key`)
    }
    get ref_tunnel2_vgw_inside_address(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.tunnel2_vgw_inside_address`)
    }
    get ref_type(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.type`)
    }
    get ref_vgw_telemetry(): Reference<_aws_vpn_connection__vgw_telemetry[]> {
        return new Reference(`${this._name}.${this._id}.vgw_telemetry`)
    }
    get ref_vpn_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpn_gateway_id`)
    }
}

export interface aws_vpn_connection_route_config {
    destination_cidr_block: rstring
    vpn_connection_id: rstring
}

export class aws_vpn_connection_route implements Resource {
    config: aws_vpn_connection_route_config
    private _is_data: boolean = false
    private _name: string = "aws_vpn_connection_route"
    private _id: string;
    constructor(id: string, config: aws_vpn_connection_route_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_destination_cidr_block(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.destination_cidr_block`)
    }
    get ref_vpn_connection_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpn_connection_id`)
    }
}

export interface aws_vpn_gateway_config {
    amazon_side_asn?: rstring
    availability_zone?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class aws_vpn_gateway implements Resource {
    config: aws_vpn_gateway_config
    private _is_data: boolean = false
    private _name: string = "aws_vpn_gateway"
    private _id: string;
    constructor(id: string, config: aws_vpn_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_amazon_side_asn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.amazon_side_asn`)
    }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.availability_zone`)
    }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`${this._name}.${this._id}.tags`)
    }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
}

export interface aws_vpn_gateway_attachment_config {
    vpc_id: rstring
    vpn_gateway_id: rstring
}

export class aws_vpn_gateway_attachment implements Resource {
    config: aws_vpn_gateway_attachment_config
    private _is_data: boolean = false
    private _name: string = "aws_vpn_gateway_attachment"
    private _id: string;
    constructor(id: string, config: aws_vpn_gateway_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_vpc_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpc_id`)
    }
    get ref_vpn_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpn_gateway_id`)
    }
}

export interface aws_vpn_gateway_route_propagation_config {
    route_table_id: rstring
    vpn_gateway_id: rstring
}

export class aws_vpn_gateway_route_propagation implements Resource {
    config: aws_vpn_gateway_route_propagation_config
    private _is_data: boolean = false
    private _name: string = "aws_vpn_gateway_route_propagation"
    private _id: string;
    constructor(id: string, config: aws_vpn_gateway_route_propagation_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_route_table_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.route_table_id`)
    }
    get ref_vpn_gateway_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.vpn_gateway_id`)
    }
}

export interface __aws_waf_byte_match_set__byte_match_tuples__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_waf_byte_match_set__byte_match_tuples {
    field_to_match: __aws_waf_byte_match_set__byte_match_tuples__field_to_match[]
    positional_constraint: rstring
    target_string?: rstring
    text_transformation: rstring
}

export interface aws_waf_byte_match_set_config {
    byte_match_tuples?: _aws_waf_byte_match_set__byte_match_tuples[]
    name: rstring
}

export class aws_waf_byte_match_set implements Resource {
    config: aws_waf_byte_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_byte_match_set"
    private _id: string;
    constructor(id: string, config: aws_waf_byte_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_byte_match_tuples(): Reference<_aws_waf_byte_match_set__byte_match_tuples[]> {
        return new Reference(`${this._name}.${this._id}.byte_match_tuples`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_waf_geo_match_set__geo_match_constraint {
    type: rstring
    value: rstring
}

export interface aws_waf_geo_match_set_config {
    geo_match_constraint?: _aws_waf_geo_match_set__geo_match_constraint[]
    name: rstring
}

export class aws_waf_geo_match_set implements Resource {
    config: aws_waf_geo_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_geo_match_set"
    private _id: string;
    constructor(id: string, config: aws_waf_geo_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_geo_match_constraint(): Reference<_aws_waf_geo_match_set__geo_match_constraint[]> {
        return new Reference(`${this._name}.${this._id}.geo_match_constraint`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_waf_ipset__ip_set_descriptors {
    type: rstring
    value: rstring
}

export interface aws_waf_ipset_config {
    arn?: rstring
    ip_set_descriptors?: _aws_waf_ipset__ip_set_descriptors[]
    name: rstring
}

export class aws_waf_ipset implements Resource {
    config: aws_waf_ipset_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_ipset"
    private _id: string;
    constructor(id: string, config: aws_waf_ipset_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_ip_set_descriptors(): Reference<_aws_waf_ipset__ip_set_descriptors[]> {
        return new Reference(`${this._name}.${this._id}.ip_set_descriptors`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_waf_rate_based_rule__predicates {
    data_id: rstring
    negated: rboolean
    type: rstring
}

export interface aws_waf_rate_based_rule_config {
    metric_name: rstring
    name: rstring
    predicates?: _aws_waf_rate_based_rule__predicates[]
    rate_key: rstring
    rate_limit: rnumber
}

export class aws_waf_rate_based_rule implements Resource {
    config: aws_waf_rate_based_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_rate_based_rule"
    private _id: string;
    constructor(id: string, config: aws_waf_rate_based_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_metric_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_predicates(): Reference<_aws_waf_rate_based_rule__predicates[]> {
        return new Reference(`${this._name}.${this._id}.predicates`)
    }
    get ref_rate_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rate_key`)
    }
    get ref_rate_limit(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.rate_limit`)
    }
}

export interface __aws_waf_regex_match_set__regex_match_tuple__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_waf_regex_match_set__regex_match_tuple {
    field_to_match: __aws_waf_regex_match_set__regex_match_tuple__field_to_match[]
    regex_pattern_set_id: rstring
    text_transformation: rstring
}

export interface aws_waf_regex_match_set_config {
    name: rstring
    regex_match_tuple?: _aws_waf_regex_match_set__regex_match_tuple[]
}

export class aws_waf_regex_match_set implements Resource {
    config: aws_waf_regex_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_regex_match_set"
    private _id: string;
    constructor(id: string, config: aws_waf_regex_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_regex_match_tuple(): Reference<_aws_waf_regex_match_set__regex_match_tuple[]> {
        return new Reference(`${this._name}.${this._id}.regex_match_tuple`)
    }
}

export interface aws_waf_regex_pattern_set_config {
    name: rstring
    regex_pattern_strings?: rstring[]
}

export class aws_waf_regex_pattern_set implements Resource {
    config: aws_waf_regex_pattern_set_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_regex_pattern_set"
    private _id: string;
    constructor(id: string, config: aws_waf_regex_pattern_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_regex_pattern_strings(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.regex_pattern_strings`)
    }
}

export interface _aws_waf_rule__predicates {
    data_id: rstring
    negated: rboolean
    type: rstring
}

export interface aws_waf_rule_config {
    metric_name: rstring
    name: rstring
    predicates?: _aws_waf_rule__predicates[]
}

export class aws_waf_rule implements Resource {
    config: aws_waf_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_rule"
    private _id: string;
    constructor(id: string, config: aws_waf_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_metric_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_predicates(): Reference<_aws_waf_rule__predicates[]> {
        return new Reference(`${this._name}.${this._id}.predicates`)
    }
}

export interface __aws_waf_rule_group__activated_rule__action {
    type: rstring
}

export interface _aws_waf_rule_group__activated_rule {
    action: __aws_waf_rule_group__activated_rule__action[]
    priority: rnumber
    rule_id: rstring
    type?: rstring
}

export interface aws_waf_rule_group_config {
    activated_rule?: _aws_waf_rule_group__activated_rule[]
    metric_name: rstring
    name: rstring
}

export class aws_waf_rule_group implements Resource {
    config: aws_waf_rule_group_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_rule_group"
    private _id: string;
    constructor(id: string, config: aws_waf_rule_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_activated_rule(): Reference<_aws_waf_rule_group__activated_rule[]> {
        return new Reference(`${this._name}.${this._id}.activated_rule`)
    }
    get ref_metric_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface __aws_waf_size_constraint_set__size_constraints__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_waf_size_constraint_set__size_constraints {
    comparison_operator: rstring
    field_to_match: __aws_waf_size_constraint_set__size_constraints__field_to_match[]
    size: rnumber
    text_transformation: rstring
}

export interface aws_waf_size_constraint_set_config {
    name: rstring
    size_constraints?: _aws_waf_size_constraint_set__size_constraints[]
}

export class aws_waf_size_constraint_set implements Resource {
    config: aws_waf_size_constraint_set_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_size_constraint_set"
    private _id: string;
    constructor(id: string, config: aws_waf_size_constraint_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_size_constraints(): Reference<_aws_waf_size_constraint_set__size_constraints[]> {
        return new Reference(`${this._name}.${this._id}.size_constraints`)
    }
}

export interface __aws_waf_sql_injection_match_set__sql_injection_match_tuples__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_waf_sql_injection_match_set__sql_injection_match_tuples {
    field_to_match: __aws_waf_sql_injection_match_set__sql_injection_match_tuples__field_to_match[]
    text_transformation: rstring
}

export interface aws_waf_sql_injection_match_set_config {
    name: rstring
    sql_injection_match_tuples?: _aws_waf_sql_injection_match_set__sql_injection_match_tuples[]
}

export class aws_waf_sql_injection_match_set implements Resource {
    config: aws_waf_sql_injection_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_sql_injection_match_set"
    private _id: string;
    constructor(id: string, config: aws_waf_sql_injection_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_sql_injection_match_tuples(): Reference<_aws_waf_sql_injection_match_set__sql_injection_match_tuples[]> {
        return new Reference(`${this._name}.${this._id}.sql_injection_match_tuples`)
    }
}

export interface _aws_waf_web_acl__default_action {
    type: rstring
}

export interface __aws_waf_web_acl__logging_configuration__redacted_fields__field_to_match {
    data?: rstring
    type: rstring
}

export interface __aws_waf_web_acl__logging_configuration__redacted_fields {
    field_to_match: __aws_waf_web_acl__logging_configuration__redacted_fields__field_to_match[]
}

export interface _aws_waf_web_acl__logging_configuration {
    log_destination: rstring
    redacted_fields?: __aws_waf_web_acl__logging_configuration__redacted_fields[]
}

export interface __aws_waf_web_acl__rules__action {
    type: rstring
}

export interface __aws_waf_web_acl__rules__override_action {
    type: rstring
}

export interface _aws_waf_web_acl__rules {
    action?: __aws_waf_web_acl__rules__action[]
    override_action?: __aws_waf_web_acl__rules__override_action[]
    priority: rnumber
    rule_id: rstring
    type?: rstring
}

export interface aws_waf_web_acl_config {
    arn?: rstring
    default_action: _aws_waf_web_acl__default_action[]
    logging_configuration?: _aws_waf_web_acl__logging_configuration[]
    metric_name: rstring
    name: rstring
    rules?: _aws_waf_web_acl__rules[]
}

export class aws_waf_web_acl implements Resource {
    config: aws_waf_web_acl_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_web_acl"
    private _id: string;
    constructor(id: string, config: aws_waf_web_acl_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_default_action(): Reference<_aws_waf_web_acl__default_action[]> {
        return new Reference(`${this._name}.${this._id}.default_action`)
    }
    get ref_logging_configuration(): Reference<_aws_waf_web_acl__logging_configuration[]> {
        return new Reference(`${this._name}.${this._id}.logging_configuration`)
    }
    get ref_metric_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_rules(): Reference<_aws_waf_web_acl__rules[]> {
        return new Reference(`${this._name}.${this._id}.rules`)
    }
}

export interface __aws_waf_xss_match_set__xss_match_tuples__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_waf_xss_match_set__xss_match_tuples {
    field_to_match: __aws_waf_xss_match_set__xss_match_tuples__field_to_match[]
    text_transformation: rstring
}

export interface aws_waf_xss_match_set_config {
    name: rstring
    xss_match_tuples?: _aws_waf_xss_match_set__xss_match_tuples[]
}

export class aws_waf_xss_match_set implements Resource {
    config: aws_waf_xss_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_waf_xss_match_set"
    private _id: string;
    constructor(id: string, config: aws_waf_xss_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_xss_match_tuples(): Reference<_aws_waf_xss_match_set__xss_match_tuples[]> {
        return new Reference(`${this._name}.${this._id}.xss_match_tuples`)
    }
}

export interface __aws_wafregional_byte_match_set__byte_match_tuple__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_wafregional_byte_match_set__byte_match_tuple {
    field_to_match: __aws_wafregional_byte_match_set__byte_match_tuple__field_to_match[]
    positional_constraint: rstring
    target_string?: rstring
    text_transformation: rstring
}

export interface __aws_wafregional_byte_match_set__byte_match_tuples__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_wafregional_byte_match_set__byte_match_tuples {
    field_to_match: __aws_wafregional_byte_match_set__byte_match_tuples__field_to_match[]
    positional_constraint: rstring
    target_string?: rstring
    text_transformation: rstring
}

export interface aws_wafregional_byte_match_set_config {
    byte_match_tuple?: _aws_wafregional_byte_match_set__byte_match_tuple[]
    byte_match_tuples?: _aws_wafregional_byte_match_set__byte_match_tuples[]
    name: rstring
}

export class aws_wafregional_byte_match_set implements Resource {
    config: aws_wafregional_byte_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_byte_match_set"
    private _id: string;
    constructor(id: string, config: aws_wafregional_byte_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_byte_match_tuple(): Reference<_aws_wafregional_byte_match_set__byte_match_tuple[]> {
        return new Reference(`${this._name}.${this._id}.byte_match_tuple`)
    }
    get ref_byte_match_tuples(): Reference<_aws_wafregional_byte_match_set__byte_match_tuples[]> {
        return new Reference(`${this._name}.${this._id}.byte_match_tuples`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_wafregional_geo_match_set__geo_match_constraint {
    type: rstring
    value: rstring
}

export interface aws_wafregional_geo_match_set_config {
    geo_match_constraint?: _aws_wafregional_geo_match_set__geo_match_constraint[]
    name: rstring
}

export class aws_wafregional_geo_match_set implements Resource {
    config: aws_wafregional_geo_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_geo_match_set"
    private _id: string;
    constructor(id: string, config: aws_wafregional_geo_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_geo_match_constraint(): Reference<_aws_wafregional_geo_match_set__geo_match_constraint[]> {
        return new Reference(`${this._name}.${this._id}.geo_match_constraint`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_wafregional_ipset__ip_set_descriptor {
    type: rstring
    value: rstring
}

export interface aws_wafregional_ipset_config {
    arn?: rstring
    ip_set_descriptor?: _aws_wafregional_ipset__ip_set_descriptor[]
    name: rstring
}

export class aws_wafregional_ipset implements Resource {
    config: aws_wafregional_ipset_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_ipset"
    private _id: string;
    constructor(id: string, config: aws_wafregional_ipset_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_ip_set_descriptor(): Reference<_aws_wafregional_ipset__ip_set_descriptor[]> {
        return new Reference(`${this._name}.${this._id}.ip_set_descriptor`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface _aws_wafregional_rate_based_rule__predicate {
    data_id: rstring
    negated: rboolean
    type: rstring
}

export interface aws_wafregional_rate_based_rule_config {
    metric_name: rstring
    name: rstring
    predicate?: _aws_wafregional_rate_based_rule__predicate[]
    rate_key: rstring
    rate_limit: rnumber
}

export class aws_wafregional_rate_based_rule implements Resource {
    config: aws_wafregional_rate_based_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_rate_based_rule"
    private _id: string;
    constructor(id: string, config: aws_wafregional_rate_based_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_metric_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_predicate(): Reference<_aws_wafregional_rate_based_rule__predicate[]> {
        return new Reference(`${this._name}.${this._id}.predicate`)
    }
    get ref_rate_key(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.rate_key`)
    }
    get ref_rate_limit(): Reference<number> {
        return new Reference(`${this._name}.${this._id}.rate_limit`)
    }
}

export interface __aws_wafregional_regex_match_set__regex_match_tuple__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_wafregional_regex_match_set__regex_match_tuple {
    field_to_match: __aws_wafregional_regex_match_set__regex_match_tuple__field_to_match[]
    regex_pattern_set_id: rstring
    text_transformation: rstring
}

export interface aws_wafregional_regex_match_set_config {
    name: rstring
    regex_match_tuple?: _aws_wafregional_regex_match_set__regex_match_tuple[]
}

export class aws_wafregional_regex_match_set implements Resource {
    config: aws_wafregional_regex_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_regex_match_set"
    private _id: string;
    constructor(id: string, config: aws_wafregional_regex_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_regex_match_tuple(): Reference<_aws_wafregional_regex_match_set__regex_match_tuple[]> {
        return new Reference(`${this._name}.${this._id}.regex_match_tuple`)
    }
}

export interface aws_wafregional_regex_pattern_set_config {
    name: rstring
    regex_pattern_strings?: rstring[]
}

export class aws_wafregional_regex_pattern_set implements Resource {
    config: aws_wafregional_regex_pattern_set_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_regex_pattern_set"
    private _id: string;
    constructor(id: string, config: aws_wafregional_regex_pattern_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_regex_pattern_strings(): Reference<rstring[]> {
        return new Reference(`${this._name}.${this._id}.regex_pattern_strings`)
    }
}

export interface _aws_wafregional_rule__predicate {
    data_id: rstring
    negated: rboolean
    type: rstring
}

export interface aws_wafregional_rule_config {
    metric_name: rstring
    name: rstring
    predicate?: _aws_wafregional_rule__predicate[]
}

export class aws_wafregional_rule implements Resource {
    config: aws_wafregional_rule_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_rule"
    private _id: string;
    constructor(id: string, config: aws_wafregional_rule_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_metric_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_predicate(): Reference<_aws_wafregional_rule__predicate[]> {
        return new Reference(`${this._name}.${this._id}.predicate`)
    }
}

export interface __aws_wafregional_rule_group__activated_rule__action {
    type: rstring
}

export interface _aws_wafregional_rule_group__activated_rule {
    action: __aws_wafregional_rule_group__activated_rule__action[]
    priority: rnumber
    rule_id: rstring
    type?: rstring
}

export interface aws_wafregional_rule_group_config {
    activated_rule?: _aws_wafregional_rule_group__activated_rule[]
    metric_name: rstring
    name: rstring
}

export class aws_wafregional_rule_group implements Resource {
    config: aws_wafregional_rule_group_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_rule_group"
    private _id: string;
    constructor(id: string, config: aws_wafregional_rule_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_activated_rule(): Reference<_aws_wafregional_rule_group__activated_rule[]> {
        return new Reference(`${this._name}.${this._id}.activated_rule`)
    }
    get ref_metric_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
}

export interface __aws_wafregional_size_constraint_set__size_constraints__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_wafregional_size_constraint_set__size_constraints {
    comparison_operator: rstring
    field_to_match: __aws_wafregional_size_constraint_set__size_constraints__field_to_match[]
    size: rnumber
    text_transformation: rstring
}

export interface aws_wafregional_size_constraint_set_config {
    name: rstring
    size_constraints?: _aws_wafregional_size_constraint_set__size_constraints[]
}

export class aws_wafregional_size_constraint_set implements Resource {
    config: aws_wafregional_size_constraint_set_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_size_constraint_set"
    private _id: string;
    constructor(id: string, config: aws_wafregional_size_constraint_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_size_constraints(): Reference<_aws_wafregional_size_constraint_set__size_constraints[]> {
        return new Reference(`${this._name}.${this._id}.size_constraints`)
    }
}

export interface __aws_wafregional_sql_injection_match_set__sql_injection_match_tuple__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_wafregional_sql_injection_match_set__sql_injection_match_tuple {
    field_to_match: __aws_wafregional_sql_injection_match_set__sql_injection_match_tuple__field_to_match[]
    text_transformation: rstring
}

export interface aws_wafregional_sql_injection_match_set_config {
    name: rstring
    sql_injection_match_tuple?: _aws_wafregional_sql_injection_match_set__sql_injection_match_tuple[]
}

export class aws_wafregional_sql_injection_match_set implements Resource {
    config: aws_wafregional_sql_injection_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_sql_injection_match_set"
    private _id: string;
    constructor(id: string, config: aws_wafregional_sql_injection_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_sql_injection_match_tuple(): Reference<_aws_wafregional_sql_injection_match_set__sql_injection_match_tuple[]> {
        return new Reference(`${this._name}.${this._id}.sql_injection_match_tuple`)
    }
}

export interface _aws_wafregional_web_acl__default_action {
    type: rstring
}

export interface __aws_wafregional_web_acl__logging_configuration__redacted_fields__field_to_match {
    data?: rstring
    type: rstring
}

export interface __aws_wafregional_web_acl__logging_configuration__redacted_fields {
    field_to_match: __aws_wafregional_web_acl__logging_configuration__redacted_fields__field_to_match[]
}

export interface _aws_wafregional_web_acl__logging_configuration {
    log_destination: rstring
    redacted_fields?: __aws_wafregional_web_acl__logging_configuration__redacted_fields[]
}

export interface __aws_wafregional_web_acl__rule__action {
    type: rstring
}

export interface __aws_wafregional_web_acl__rule__override_action {
    type: rstring
}

export interface _aws_wafregional_web_acl__rule {
    action?: __aws_wafregional_web_acl__rule__action[]
    override_action?: __aws_wafregional_web_acl__rule__override_action[]
    priority: rnumber
    rule_id: rstring
    type?: rstring
}

export interface aws_wafregional_web_acl_config {
    arn?: rstring
    default_action: _aws_wafregional_web_acl__default_action[]
    logging_configuration?: _aws_wafregional_web_acl__logging_configuration[]
    metric_name: rstring
    name: rstring
    rule?: _aws_wafregional_web_acl__rule[]
}

export class aws_wafregional_web_acl implements Resource {
    config: aws_wafregional_web_acl_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_web_acl"
    private _id: string;
    constructor(id: string, config: aws_wafregional_web_acl_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_default_action(): Reference<_aws_wafregional_web_acl__default_action[]> {
        return new Reference(`${this._name}.${this._id}.default_action`)
    }
    get ref_logging_configuration(): Reference<_aws_wafregional_web_acl__logging_configuration[]> {
        return new Reference(`${this._name}.${this._id}.logging_configuration`)
    }
    get ref_metric_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.metric_name`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_rule(): Reference<_aws_wafregional_web_acl__rule[]> {
        return new Reference(`${this._name}.${this._id}.rule`)
    }
}

export interface aws_wafregional_web_acl_association_config {
    resource_arn: rstring
    web_acl_id: rstring
}

export class aws_wafregional_web_acl_association implements Resource {
    config: aws_wafregional_web_acl_association_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_web_acl_association"
    private _id: string;
    constructor(id: string, config: aws_wafregional_web_acl_association_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_resource_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.resource_arn`)
    }
    get ref_web_acl_id(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.web_acl_id`)
    }
}

export interface __aws_wafregional_xss_match_set__xss_match_tuple__field_to_match {
    data?: rstring
    type: rstring
}

export interface _aws_wafregional_xss_match_set__xss_match_tuple {
    field_to_match: __aws_wafregional_xss_match_set__xss_match_tuple__field_to_match[]
    text_transformation: rstring
}

export interface aws_wafregional_xss_match_set_config {
    name: rstring
    xss_match_tuple?: _aws_wafregional_xss_match_set__xss_match_tuple[]
}

export class aws_wafregional_xss_match_set implements Resource {
    config: aws_wafregional_xss_match_set_config
    private _is_data: boolean = false
    private _name: string = "aws_wafregional_xss_match_set"
    private _id: string;
    constructor(id: string, config: aws_wafregional_xss_match_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_xss_match_tuple(): Reference<_aws_wafregional_xss_match_set__xss_match_tuple[]> {
        return new Reference(`${this._name}.${this._id}.xss_match_tuple`)
    }
}

export interface _aws_worklink_fleet__identity_provider {
    saml_metadata: rstring
    type: rstring
}

export interface _aws_worklink_fleet__network {
    security_group_ids: rstring[]
    subnet_ids: rstring[]
    vpc_id: rstring
}

export interface aws_worklink_fleet_config {
    arn?: rstring
    audit_stream_arn?: rstring
    company_code?: rstring
    created_time?: rstring
    device_ca_certificate?: rstring
    display_name?: rstring
    identity_provider?: _aws_worklink_fleet__identity_provider[]
    last_updated_time?: rstring
    name: rstring
    network?: _aws_worklink_fleet__network[]
    optimize_for_end_user_location?: rboolean
}

export class aws_worklink_fleet implements Resource {
    config: aws_worklink_fleet_config
    private _is_data: boolean = false
    private _name: string = "aws_worklink_fleet"
    private _id: string;
    constructor(id: string, config: aws_worklink_fleet_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.arn`)
    }
    get ref_audit_stream_arn(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.audit_stream_arn`)
    }
    get ref_company_code(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.company_code`)
    }
    get ref_created_time(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.created_time`)
    }
    get ref_device_ca_certificate(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.device_ca_certificate`)
    }
    get ref_display_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.display_name`)
    }
    get ref_identity_provider(): Reference<_aws_worklink_fleet__identity_provider[]> {
        return new Reference(`${this._name}.${this._id}.identity_provider`)
    }
    get ref_last_updated_time(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.last_updated_time`)
    }
    get ref_name(): Reference<string> {
        return new Reference(`${this._name}.${this._id}.name`)
    }
    get ref_network(): Reference<_aws_worklink_fleet__network[]> {
        return new Reference(`${this._name}.${this._id}.network`)
    }
    get ref_optimize_for_end_user_location(): Reference<boolean> {
        return new Reference(`${this._name}.${this._id}.optimize_for_end_user_location`)
    }
}

export interface data_aws_acm_certificate_config {
    arn?: rstring
    domain: rstring
    most_recent?: rboolean
    statuses?: rstring[]
    types?: rstring[]
}

export class data_aws_acm_certificate implements Data {
    config: data_aws_acm_certificate_config
    private _is_data: boolean = true
    private _name: string = "data_aws_acm_certificate"
    private _id: string;
    constructor(id: string, config: data_aws_acm_certificate_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_domain(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.domain`)
  }
    get ref_most_recent(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.most_recent`)
  }
    get ref_statuses(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.statuses`)
  }
    get ref_types(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.types`)
  }
}

export interface __data_aws_acmpca_certificate_authority__revocation_configuration__crl_configuration {
    custom_cname?: rstring
    enabled?: rboolean
    expiration_in_days?: rnumber
    s3_bucket_name?: rstring
}

export interface _data_aws_acmpca_certificate_authority__revocation_configuration {
    crl_configuration?: __data_aws_acmpca_certificate_authority__revocation_configuration__crl_configuration[]
}

export interface data_aws_acmpca_certificate_authority_config {
    arn: rstring
    certificate?: rstring
    certificate_chain?: rstring
    certificate_signing_request?: rstring
    not_after?: rstring
    not_before?: rstring
    revocation_configuration?: _data_aws_acmpca_certificate_authority__revocation_configuration[]
    serial?: rstring
    status?: rstring
    tags?: {[propName: string]: rstring}
    type?: rstring
}

export class data_aws_acmpca_certificate_authority implements Data {
    config: data_aws_acmpca_certificate_authority_config
    private _is_data: boolean = true
    private _name: string = "data_aws_acmpca_certificate_authority"
    private _id: string;
    constructor(id: string, config: data_aws_acmpca_certificate_authority_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_certificate(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.certificate`)
  }
    get ref_certificate_chain(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.certificate_chain`)
  }
    get ref_certificate_signing_request(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.certificate_signing_request`)
  }
    get ref_not_after(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.not_after`)
  }
    get ref_not_before(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.not_before`)
  }
    get ref_revocation_configuration(): Reference<_data_aws_acmpca_certificate_authority__revocation_configuration[]> {
        return new Reference(`data.${this._name}.${this._id}.revocation_configuration`)
  }
    get ref_serial(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.serial`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.type`)
  }
}

export interface _data_aws_alb__access_logs {
    bucket?: rstring
    enabled?: rboolean
    prefix?: rstring
}

export interface _data_aws_alb__subnet_mapping {
    allocation_id?: rstring
    subnet_id: rstring
}

export interface data_aws_alb_config {
    access_logs?: _data_aws_alb__access_logs[]
    arn?: rstring
    arn_suffix?: rstring
    dns_name?: rstring
    enable_deletion_protection?: rboolean
    idle_timeout?: rnumber
    internal?: rboolean
    load_balancer_type?: rstring
    name?: rstring
    security_groups?: rstring[]
    subnet_mapping?: _data_aws_alb__subnet_mapping[]
    subnets?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
    zone_id?: rstring
}

export class data_aws_alb implements Data {
    config: data_aws_alb_config
    private _is_data: boolean = true
    private _name: string = "data_aws_alb"
    private _id: string;
    constructor(id: string, config: data_aws_alb_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_logs(): Reference<_data_aws_alb__access_logs[]> {
        return new Reference(`data.${this._name}.${this._id}.access_logs`)
  }
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_arn_suffix(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn_suffix`)
  }
    get ref_dns_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.dns_name`)
  }
    get ref_enable_deletion_protection(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.enable_deletion_protection`)
  }
    get ref_idle_timeout(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.idle_timeout`)
  }
    get ref_internal(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.internal`)
  }
    get ref_load_balancer_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.load_balancer_type`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_groups`)
  }
    get ref_subnet_mapping(): Reference<_data_aws_alb__subnet_mapping[]> {
        return new Reference(`data.${this._name}.${this._id}.subnet_mapping`)
  }
    get ref_subnets(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.subnets`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
    get ref_zone_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.zone_id`)
  }
}

export interface __data_aws_alb_listener__default_action__authenticate_cognito {
    authentication_request_extra_params?: {[propName: string]: rstring}
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    user_pool_arn?: rstring
    user_pool_client_id?: rstring
    user_pool_domain?: rstring
}

export interface __data_aws_alb_listener__default_action__authenticate_oidc {
    authentication_request_extra_params?: {[propName: string]: rstring}
    authorization_endpoint?: rstring
    client_id?: rstring
    client_secret?: rstring
    issuer?: rstring
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    token_endpoint?: rstring
    user_info_endpoint?: rstring
}

export interface __data_aws_alb_listener__default_action__fixed_response {
    content_type?: rstring
    message_body?: rstring
    status_code?: rstring
}

export interface __data_aws_alb_listener__default_action__redirect {
    host?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    query?: rstring
    status_code?: rstring
}

export interface _data_aws_alb_listener__default_action {
    authenticate_cognito?: __data_aws_alb_listener__default_action__authenticate_cognito[]
    authenticate_oidc?: __data_aws_alb_listener__default_action__authenticate_oidc[]
    fixed_response?: __data_aws_alb_listener__default_action__fixed_response[]
    order?: rnumber
    redirect?: __data_aws_alb_listener__default_action__redirect[]
    target_group_arn?: rstring
    type?: rstring
}

export interface data_aws_alb_listener_config {
    arn?: rstring
    certificate_arn?: rstring
    default_action?: _data_aws_alb_listener__default_action[]
    load_balancer_arn?: rstring
    port?: rnumber
    protocol?: rstring
    ssl_policy?: rstring
}

export class data_aws_alb_listener implements Data {
    config: data_aws_alb_listener_config
    private _is_data: boolean = true
    private _name: string = "data_aws_alb_listener"
    private _id: string;
    constructor(id: string, config: data_aws_alb_listener_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.certificate_arn`)
  }
    get ref_default_action(): Reference<_data_aws_alb_listener__default_action[]> {
        return new Reference(`data.${this._name}.${this._id}.default_action`)
  }
    get ref_load_balancer_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.load_balancer_arn`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_protocol(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.protocol`)
  }
    get ref_ssl_policy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ssl_policy`)
  }
}

export interface _data_aws_alb_target_group__health_check {
    healthy_threshold?: rnumber
    interval?: rnumber
    matcher?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    timeout?: rnumber
    unhealthy_threshold?: rnumber
}

export interface _data_aws_alb_target_group__stickiness {
    cookie_duration?: rnumber
    enabled?: rboolean
    type?: rstring
}

export interface data_aws_alb_target_group_config {
    arn?: rstring
    arn_suffix?: rstring
    deregistration_delay?: rnumber
    health_check?: _data_aws_alb_target_group__health_check[]
    name?: rstring
    port?: rnumber
    protocol?: rstring
    slow_start?: rnumber
    stickiness?: _data_aws_alb_target_group__stickiness[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_alb_target_group implements Data {
    config: data_aws_alb_target_group_config
    private _is_data: boolean = true
    private _name: string = "data_aws_alb_target_group"
    private _id: string;
    constructor(id: string, config: data_aws_alb_target_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_arn_suffix(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn_suffix`)
  }
    get ref_deregistration_delay(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.deregistration_delay`)
  }
    get ref_health_check(): Reference<_data_aws_alb_target_group__health_check[]> {
        return new Reference(`data.${this._name}.${this._id}.health_check`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_protocol(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.protocol`)
  }
    get ref_slow_start(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.slow_start`)
  }
    get ref_stickiness(): Reference<_data_aws_alb_target_group__stickiness[]> {
        return new Reference(`data.${this._name}.${this._id}.stickiness`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_ami__block_device_mappings {
    device_name?: rstring
    ebs?: {[propName: string]: rstring}
    no_device?: rstring
    virtual_name?: rstring
}

export interface _data_aws_ami__filter {
    name: rstring
    values: rstring[]
}

export interface _data_aws_ami__product_codes {
    product_code_id?: rstring
    product_code_type?: rstring
}

export interface data_aws_ami_config {
    architecture?: rstring
    block_device_mappings?: _data_aws_ami__block_device_mappings[]
    creation_date?: rstring
    description?: rstring
    executable_users?: rstring[]
    filter?: _data_aws_ami__filter[]
    hypervisor?: rstring
    image_id?: rstring
    image_location?: rstring
    image_owner_alias?: rstring
    image_type?: rstring
    kernel_id?: rstring
    most_recent?: rboolean
    name?: rstring
    name_regex?: rstring
    owner_id?: rstring
    owners?: rstring[]
    platform?: rstring
    product_codes?: _data_aws_ami__product_codes[]
    public?: rboolean
    ramdisk_id?: rstring
    root_device_name?: rstring
    root_device_type?: rstring
    root_snapshot_id?: rstring
    sriov_net_support?: rstring
    state?: rstring
    state_reason?: {[propName: string]: rstring}
    tags?: {[propName: string]: rstring}
    virtualization_type?: rstring
}

export class data_aws_ami implements Data {
    config: data_aws_ami_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ami"
    private _id: string;
    constructor(id: string, config: data_aws_ami_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_architecture(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.architecture`)
  }
    get ref_block_device_mappings(): Reference<_data_aws_ami__block_device_mappings[]> {
        return new Reference(`data.${this._name}.${this._id}.block_device_mappings`)
  }
    get ref_creation_date(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.creation_date`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_executable_users(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.executable_users`)
  }
    get ref_filter(): Reference<_data_aws_ami__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_hypervisor(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.hypervisor`)
  }
    get ref_image_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.image_id`)
  }
    get ref_image_location(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.image_location`)
  }
    get ref_image_owner_alias(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.image_owner_alias`)
  }
    get ref_image_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.image_type`)
  }
    get ref_kernel_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kernel_id`)
  }
    get ref_most_recent(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.most_recent`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_name_regex(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name_regex`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_owners(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.owners`)
  }
    get ref_platform(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.platform`)
  }
    get ref_product_codes(): Reference<_data_aws_ami__product_codes[]> {
        return new Reference(`data.${this._name}.${this._id}.product_codes`)
  }
    get ref_public(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.public`)
  }
    get ref_ramdisk_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ramdisk_id`)
  }
    get ref_root_device_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.root_device_name`)
  }
    get ref_root_device_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.root_device_type`)
  }
    get ref_root_snapshot_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.root_snapshot_id`)
  }
    get ref_sriov_net_support(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.sriov_net_support`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_state_reason(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.state_reason`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_virtualization_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.virtualization_type`)
  }
}

export interface _data_aws_ami_ids__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_ami_ids_config {
    executable_users?: rstring[]
    filter?: _data_aws_ami_ids__filter[]
    ids?: rstring[]
    name_regex?: rstring
    owners?: rstring[]
    sort_ascending?: rboolean
}

export class data_aws_ami_ids implements Data {
    config: data_aws_ami_ids_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ami_ids"
    private _id: string;
    constructor(id: string, config: data_aws_ami_ids_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_executable_users(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.executable_users`)
  }
    get ref_filter(): Reference<_data_aws_ami_ids__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_name_regex(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name_regex`)
  }
    get ref_owners(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.owners`)
  }
    get ref_sort_ascending(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.sort_ascending`)
  }
}

export interface data_aws_api_gateway_api_key_config {
    id: rstring
    name?: rstring
    value?: rstring
}

export class data_aws_api_gateway_api_key implements Data {
    config: data_aws_api_gateway_api_key_config
    private _is_data: boolean = true
    private _name: string = "data_aws_api_gateway_api_key"
    private _id: string;
    constructor(id: string, config: data_aws_api_gateway_api_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_value(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.value`)
  }
}

export interface data_aws_api_gateway_resource_config {
    parent_id?: rstring
    path: rstring
    path_part?: rstring
    rest_api_id: rstring
}

export class data_aws_api_gateway_resource implements Data {
    config: data_aws_api_gateway_resource_config
    private _is_data: boolean = true
    private _name: string = "data_aws_api_gateway_resource"
    private _id: string;
    constructor(id: string, config: data_aws_api_gateway_resource_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_parent_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.parent_id`)
  }
    get ref_path(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.path`)
  }
    get ref_path_part(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.path_part`)
  }
    get ref_rest_api_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.rest_api_id`)
  }
}

export interface data_aws_api_gateway_rest_api_config {
    name: rstring
    root_resource_id?: rstring
}

export class data_aws_api_gateway_rest_api implements Data {
    config: data_aws_api_gateway_rest_api_config
    private _is_data: boolean = true
    private _name: string = "data_aws_api_gateway_rest_api"
    private _id: string;
    constructor(id: string, config: data_aws_api_gateway_rest_api_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_root_resource_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.root_resource_id`)
  }
}

export interface data_aws_api_gateway_vpc_link_config {
    id?: rstring
    name: rstring
}

export class data_aws_api_gateway_vpc_link implements Data {
    config: data_aws_api_gateway_vpc_link_config
    private _is_data: boolean = true
    private _name: string = "data_aws_api_gateway_vpc_link"
    private _id: string;
    constructor(id: string, config: data_aws_api_gateway_vpc_link_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
}

export interface data_aws_arn_config {
    account?: rstring
    arn: rstring
    partition?: rstring
    region?: rstring
    resource?: rstring
    service?: rstring
}

export class data_aws_arn implements Data {
    config: data_aws_arn_config
    private _is_data: boolean = true
    private _name: string = "data_aws_arn"
    private _id: string;
    constructor(id: string, config: data_aws_arn_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.account`)
  }
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_partition(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.partition`)
  }
    get ref_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.region`)
  }
    get ref_resource(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.resource`)
  }
    get ref_service(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.service`)
  }
}

export interface data_aws_autoscaling_group_config {
    arn?: rstring
    availability_zones?: rstring[]
    default_cooldown?: rnumber
    desired_capacity?: rnumber
    health_check_grace_period?: rnumber
    health_check_type?: rstring
    launch_configuration?: rstring
    load_balancers?: rstring[]
    max_size?: rnumber
    min_size?: rnumber
    name: rstring
    new_instances_protected_from_scale_in?: rboolean
    placement_group?: rstring
    service_linked_role_arn?: rstring
    status?: rstring
    target_group_arns?: rstring[]
    termination_policies?: rstring[]
    vpc_zone_identifier?: rstring
}

export class data_aws_autoscaling_group implements Data {
    config: data_aws_autoscaling_group_config
    private _is_data: boolean = true
    private _name: string = "data_aws_autoscaling_group"
    private _id: string;
    constructor(id: string, config: data_aws_autoscaling_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.availability_zones`)
  }
    get ref_default_cooldown(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.default_cooldown`)
  }
    get ref_desired_capacity(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.desired_capacity`)
  }
    get ref_health_check_grace_period(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.health_check_grace_period`)
  }
    get ref_health_check_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.health_check_type`)
  }
    get ref_launch_configuration(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.launch_configuration`)
  }
    get ref_load_balancers(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.load_balancers`)
  }
    get ref_max_size(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.max_size`)
  }
    get ref_min_size(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.min_size`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_new_instances_protected_from_scale_in(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.new_instances_protected_from_scale_in`)
  }
    get ref_placement_group(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.placement_group`)
  }
    get ref_service_linked_role_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.service_linked_role_arn`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
    get ref_target_group_arns(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.target_group_arns`)
  }
    get ref_termination_policies(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.termination_policies`)
  }
    get ref_vpc_zone_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_zone_identifier`)
  }
}

export interface _data_aws_autoscaling_groups__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_autoscaling_groups_config {
    arns?: rstring[]
    filter?: _data_aws_autoscaling_groups__filter[]
    names?: rstring[]
}

export class data_aws_autoscaling_groups implements Data {
    config: data_aws_autoscaling_groups_config
    private _is_data: boolean = true
    private _name: string = "data_aws_autoscaling_groups"
    private _id: string;
    constructor(id: string, config: data_aws_autoscaling_groups_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arns(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.arns`)
  }
    get ref_filter(): Reference<_data_aws_autoscaling_groups__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_names(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.names`)
  }
}

export interface data_aws_availability_zone_config {
    name?: rstring
    name_suffix?: rstring
    region?: rstring
    state?: rstring
    zone_id?: rstring
}

export class data_aws_availability_zone implements Data {
    config: data_aws_availability_zone_config
    private _is_data: boolean = true
    private _name: string = "data_aws_availability_zone"
    private _id: string;
    constructor(id: string, config: data_aws_availability_zone_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_name_suffix(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name_suffix`)
  }
    get ref_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.region`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_zone_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.zone_id`)
  }
}

export interface data_aws_availability_zones_config {
    names?: rstring[]
    state?: rstring
    zone_ids?: rstring[]
}

export class data_aws_availability_zones implements Data {
    config: data_aws_availability_zones_config
    private _is_data: boolean = true
    private _name: string = "data_aws_availability_zones"
    private _id: string;
    constructor(id: string, config: data_aws_availability_zones_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_names(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.names`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_zone_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.zone_ids`)
  }
}

export interface data_aws_batch_compute_environment_config {
    arn?: rstring
    compute_environment_name: rstring
    ecs_cluster_arn?: rstring
    service_role?: rstring
    state?: rstring
    status?: rstring
    status_reason?: rstring
    type?: rstring
}

export class data_aws_batch_compute_environment implements Data {
    config: data_aws_batch_compute_environment_config
    private _is_data: boolean = true
    private _name: string = "data_aws_batch_compute_environment"
    private _id: string;
    constructor(id: string, config: data_aws_batch_compute_environment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_compute_environment_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.compute_environment_name`)
  }
    get ref_ecs_cluster_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ecs_cluster_arn`)
  }
    get ref_service_role(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.service_role`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
    get ref_status_reason(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status_reason`)
  }
    get ref_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.type`)
  }
}

export interface _data_aws_batch_job_queue__compute_environment_order {
    compute_environment?: rstring
    order?: rnumber
}

export interface data_aws_batch_job_queue_config {
    arn?: rstring
    compute_environment_order?: _data_aws_batch_job_queue__compute_environment_order[]
    name: rstring
    priority?: rnumber
    state?: rstring
    status?: rstring
    status_reason?: rstring
}

export class data_aws_batch_job_queue implements Data {
    config: data_aws_batch_job_queue_config
    private _is_data: boolean = true
    private _name: string = "data_aws_batch_job_queue"
    private _id: string;
    constructor(id: string, config: data_aws_batch_job_queue_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_compute_environment_order(): Reference<_data_aws_batch_job_queue__compute_environment_order[]> {
        return new Reference(`data.${this._name}.${this._id}.compute_environment_order`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_priority(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.priority`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
    get ref_status_reason(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status_reason`)
  }
}

export interface data_aws_billing_service_account_config {
    arn?: rstring
}

export class data_aws_billing_service_account implements Data {
    config: data_aws_billing_service_account_config
    private _is_data: boolean = true
    private _name: string = "data_aws_billing_service_account"
    private _id: string;
    constructor(id: string, config: data_aws_billing_service_account_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
}

export interface data_aws_caller_identity_config {
    account_id?: rstring
    arn?: rstring
    user_id?: rstring
}

export class data_aws_caller_identity implements Data {
    config: data_aws_caller_identity_config
    private _is_data: boolean = true
    private _name: string = "data_aws_caller_identity"
    private _id: string;
    constructor(id: string, config: data_aws_caller_identity_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.account_id`)
  }
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_user_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.user_id`)
  }
}

export interface data_aws_canonical_user_id_config {
    display_name?: rstring
}

export class data_aws_canonical_user_id implements Data {
    config: data_aws_canonical_user_id_config
    private _is_data: boolean = true
    private _name: string = "data_aws_canonical_user_id"
    private _id: string;
    constructor(id: string, config: data_aws_canonical_user_id_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_display_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.display_name`)
  }
}

export interface data_aws_cloudformation_export_config {
    exporting_stack_id?: rstring
    name: rstring
    value?: rstring
}

export class data_aws_cloudformation_export implements Data {
    config: data_aws_cloudformation_export_config
    private _is_data: boolean = true
    private _name: string = "data_aws_cloudformation_export"
    private _id: string;
    constructor(id: string, config: data_aws_cloudformation_export_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_exporting_stack_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.exporting_stack_id`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_value(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.value`)
  }
}

export interface data_aws_cloudformation_stack_config {
    capabilities?: rstring[]
    description?: rstring
    disable_rollback?: rboolean
    iam_role_arn?: rstring
    name: rstring
    notification_arns?: rstring[]
    outputs?: {[propName: string]: rstring}
    parameters?: {[propName: string]: rstring}
    tags?: {[propName: string]: rstring}
    template_body?: rstring
    timeout_in_minutes?: rnumber
}

export class data_aws_cloudformation_stack implements Data {
    config: data_aws_cloudformation_stack_config
    private _is_data: boolean = true
    private _name: string = "data_aws_cloudformation_stack"
    private _id: string;
    constructor(id: string, config: data_aws_cloudformation_stack_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_capabilities(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.capabilities`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_disable_rollback(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.disable_rollback`)
  }
    get ref_iam_role_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.iam_role_arn`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_notification_arns(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.notification_arns`)
  }
    get ref_outputs(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.outputs`)
  }
    get ref_parameters(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.parameters`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_template_body(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.template_body`)
  }
    get ref_timeout_in_minutes(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.timeout_in_minutes`)
  }
}

export interface _data_aws_cloudhsm_v2_cluster__cluster_certificates {
    aws_hardware_certificate?: rstring
    cluster_certificate?: rstring
    cluster_csr?: rstring
    hsm_certificate?: rstring
    manufacturer_hardware_certificate?: rstring
}

export interface data_aws_cloudhsm_v2_cluster_config {
    cluster_certificates?: _data_aws_cloudhsm_v2_cluster__cluster_certificates[]
    cluster_id: rstring
    cluster_state?: rstring
    security_group_id?: rstring
    subnet_ids?: rstring[]
    vpc_id?: rstring
}

export class data_aws_cloudhsm_v2_cluster implements Data {
    config: data_aws_cloudhsm_v2_cluster_config
    private _is_data: boolean = true
    private _name: string = "data_aws_cloudhsm_v2_cluster"
    private _id: string;
    constructor(id: string, config: data_aws_cloudhsm_v2_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cluster_certificates(): Reference<_data_aws_cloudhsm_v2_cluster__cluster_certificates[]> {
        return new Reference(`data.${this._name}.${this._id}.cluster_certificates`)
  }
    get ref_cluster_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_id`)
  }
    get ref_cluster_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_state`)
  }
    get ref_security_group_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.security_group_id`)
  }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.subnet_ids`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface data_aws_cloudtrail_service_account_config {
    arn?: rstring
    region?: rstring
}

export class data_aws_cloudtrail_service_account implements Data {
    config: data_aws_cloudtrail_service_account_config
    private _is_data: boolean = true
    private _name: string = "data_aws_cloudtrail_service_account"
    private _id: string;
    constructor(id: string, config: data_aws_cloudtrail_service_account_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.region`)
  }
}

export interface data_aws_cloudwatch_log_group_config {
    arn?: rstring
    creation_time?: rnumber
    name: rstring
}

export class data_aws_cloudwatch_log_group implements Data {
    config: data_aws_cloudwatch_log_group_config
    private _is_data: boolean = true
    private _name: string = "data_aws_cloudwatch_log_group"
    private _id: string;
    constructor(id: string, config: data_aws_cloudwatch_log_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_creation_time(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.creation_time`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
}

export interface data_aws_codecommit_repository_config {
    arn?: rstring
    clone_url_http?: rstring
    clone_url_ssh?: rstring
    repository_id?: rstring
    repository_name: rstring
}

export class data_aws_codecommit_repository implements Data {
    config: data_aws_codecommit_repository_config
    private _is_data: boolean = true
    private _name: string = "data_aws_codecommit_repository"
    private _id: string;
    constructor(id: string, config: data_aws_codecommit_repository_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_clone_url_http(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.clone_url_http`)
  }
    get ref_clone_url_ssh(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.clone_url_ssh`)
  }
    get ref_repository_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.repository_id`)
  }
    get ref_repository_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.repository_name`)
  }
}

export interface data_aws_cognito_user_pools_config {
    arns?: rstring[]
    ids?: rstring[]
    name: rstring
}

export class data_aws_cognito_user_pools implements Data {
    config: data_aws_cognito_user_pools_config
    private _is_data: boolean = true
    private _name: string = "data_aws_cognito_user_pools"
    private _id: string;
    constructor(id: string, config: data_aws_cognito_user_pools_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arns(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.arns`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
}

export interface data_aws_cur_report_definition_config {
    additional_artifacts?: rstring[]
    additional_schema_elements?: rstring[]
    compression?: rstring
    format?: rstring
    report_name: rstring
    s3_bucket?: rstring
    s3_prefix?: rstring
    s3_region?: rstring
    time_unit?: rstring
}

export class data_aws_cur_report_definition implements Data {
    config: data_aws_cur_report_definition_config
    private _is_data: boolean = true
    private _name: string = "data_aws_cur_report_definition"
    private _id: string;
    constructor(id: string, config: data_aws_cur_report_definition_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_additional_artifacts(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.additional_artifacts`)
  }
    get ref_additional_schema_elements(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.additional_schema_elements`)
  }
    get ref_compression(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.compression`)
  }
    get ref_format(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.format`)
  }
    get ref_report_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.report_name`)
  }
    get ref_s3_bucket(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.s3_bucket`)
  }
    get ref_s3_prefix(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.s3_prefix`)
  }
    get ref_s3_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.s3_region`)
  }
    get ref_time_unit(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.time_unit`)
  }
}

export interface data_aws_db_cluster_snapshot_config {
    allocated_storage?: rnumber
    availability_zones?: rstring[]
    db_cluster_identifier?: rstring
    db_cluster_snapshot_arn?: rstring
    db_cluster_snapshot_identifier?: rstring
    engine?: rstring
    engine_version?: rstring
    include_public?: rboolean
    include_shared?: rboolean
    kms_key_id?: rstring
    license_model?: rstring
    most_recent?: rboolean
    port?: rnumber
    snapshot_create_time?: rstring
    snapshot_type?: rstring
    source_db_cluster_snapshot_arn?: rstring
    status?: rstring
    storage_encrypted?: rboolean
    vpc_id?: rstring
}

export class data_aws_db_cluster_snapshot implements Data {
    config: data_aws_db_cluster_snapshot_config
    private _is_data: boolean = true
    private _name: string = "data_aws_db_cluster_snapshot"
    private _id: string;
    constructor(id: string, config: data_aws_db_cluster_snapshot_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocated_storage(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.allocated_storage`)
  }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.availability_zones`)
  }
    get ref_db_cluster_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_cluster_identifier`)
  }
    get ref_db_cluster_snapshot_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_cluster_snapshot_arn`)
  }
    get ref_db_cluster_snapshot_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_cluster_snapshot_identifier`)
  }
    get ref_engine(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine`)
  }
    get ref_engine_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine_version`)
  }
    get ref_include_public(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.include_public`)
  }
    get ref_include_shared(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.include_shared`)
  }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_id`)
  }
    get ref_license_model(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.license_model`)
  }
    get ref_most_recent(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.most_recent`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_snapshot_create_time(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_create_time`)
  }
    get ref_snapshot_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_type`)
  }
    get ref_source_db_cluster_snapshot_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.source_db_cluster_snapshot_arn`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.storage_encrypted`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface data_aws_db_event_categories_config {
    event_categories?: rstring[]
    source_type?: rstring
}

export class data_aws_db_event_categories implements Data {
    config: data_aws_db_event_categories_config
    private _is_data: boolean = true
    private _name: string = "data_aws_db_event_categories"
    private _id: string;
    constructor(id: string, config: data_aws_db_event_categories_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_event_categories(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.event_categories`)
  }
    get ref_source_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.source_type`)
  }
}

export interface data_aws_db_instance_config {
    address?: rstring
    allocated_storage?: rnumber
    auto_minor_version_upgrade?: rboolean
    availability_zone?: rstring
    backup_retention_period?: rnumber
    ca_cert_identifier?: rstring
    db_cluster_identifier?: rstring
    db_instance_arn?: rstring
    db_instance_class?: rstring
    db_instance_identifier: rstring
    db_instance_port?: rnumber
    db_name?: rstring
    db_parameter_groups?: rstring[]
    db_security_groups?: rstring[]
    db_subnet_group?: rstring
    enabled_cloudwatch_logs_exports?: rstring[]
    endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    hosted_zone_id?: rstring
    iops?: rnumber
    kms_key_id?: rstring
    license_model?: rstring
    master_username?: rstring
    monitoring_interval?: rnumber
    monitoring_role_arn?: rstring
    multi_az?: rboolean
    option_group_memberships?: rstring[]
    port?: rnumber
    preferred_backup_window?: rstring
    preferred_maintenance_window?: rstring
    publicly_accessible?: rboolean
    replicate_source_db?: rstring
    storage_encrypted?: rboolean
    storage_type?: rstring
    timezone?: rstring
    vpc_security_groups?: rstring[]
}

export class data_aws_db_instance implements Data {
    config: data_aws_db_instance_config
    private _is_data: boolean = true
    private _name: string = "data_aws_db_instance"
    private _id: string;
    constructor(id: string, config: data_aws_db_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_address(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.address`)
  }
    get ref_allocated_storage(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.allocated_storage`)
  }
    get ref_auto_minor_version_upgrade(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.auto_minor_version_upgrade`)
  }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone`)
  }
    get ref_backup_retention_period(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.backup_retention_period`)
  }
    get ref_ca_cert_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ca_cert_identifier`)
  }
    get ref_db_cluster_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_cluster_identifier`)
  }
    get ref_db_instance_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_instance_arn`)
  }
    get ref_db_instance_class(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_instance_class`)
  }
    get ref_db_instance_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_instance_identifier`)
  }
    get ref_db_instance_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.db_instance_port`)
  }
    get ref_db_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_name`)
  }
    get ref_db_parameter_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.db_parameter_groups`)
  }
    get ref_db_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.db_security_groups`)
  }
    get ref_db_subnet_group(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_subnet_group`)
  }
    get ref_enabled_cloudwatch_logs_exports(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.enabled_cloudwatch_logs_exports`)
  }
    get ref_endpoint(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.endpoint`)
  }
    get ref_engine(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine`)
  }
    get ref_engine_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine_version`)
  }
    get ref_hosted_zone_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.hosted_zone_id`)
  }
    get ref_iops(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.iops`)
  }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_id`)
  }
    get ref_license_model(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.license_model`)
  }
    get ref_master_username(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.master_username`)
  }
    get ref_monitoring_interval(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.monitoring_interval`)
  }
    get ref_monitoring_role_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.monitoring_role_arn`)
  }
    get ref_multi_az(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.multi_az`)
  }
    get ref_option_group_memberships(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.option_group_memberships`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_preferred_backup_window(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.preferred_backup_window`)
  }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.preferred_maintenance_window`)
  }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.publicly_accessible`)
  }
    get ref_replicate_source_db(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.replicate_source_db`)
  }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.storage_encrypted`)
  }
    get ref_storage_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.storage_type`)
  }
    get ref_timezone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.timezone`)
  }
    get ref_vpc_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.vpc_security_groups`)
  }
}

export interface data_aws_db_snapshot_config {
    allocated_storage?: rnumber
    availability_zone?: rstring
    db_instance_identifier?: rstring
    db_snapshot_arn?: rstring
    db_snapshot_identifier?: rstring
    encrypted?: rboolean
    engine?: rstring
    engine_version?: rstring
    include_public?: rboolean
    include_shared?: rboolean
    iops?: rnumber
    kms_key_id?: rstring
    license_model?: rstring
    most_recent?: rboolean
    option_group_name?: rstring
    port?: rnumber
    snapshot_create_time?: rstring
    snapshot_type?: rstring
    source_db_snapshot_identifier?: rstring
    source_region?: rstring
    status?: rstring
    storage_type?: rstring
    vpc_id?: rstring
}

export class data_aws_db_snapshot implements Data {
    config: data_aws_db_snapshot_config
    private _is_data: boolean = true
    private _name: string = "data_aws_db_snapshot"
    private _id: string;
    constructor(id: string, config: data_aws_db_snapshot_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocated_storage(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.allocated_storage`)
  }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone`)
  }
    get ref_db_instance_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_instance_identifier`)
  }
    get ref_db_snapshot_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_snapshot_arn`)
  }
    get ref_db_snapshot_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_snapshot_identifier`)
  }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.encrypted`)
  }
    get ref_engine(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine`)
  }
    get ref_engine_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine_version`)
  }
    get ref_include_public(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.include_public`)
  }
    get ref_include_shared(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.include_shared`)
  }
    get ref_iops(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.iops`)
  }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_id`)
  }
    get ref_license_model(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.license_model`)
  }
    get ref_most_recent(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.most_recent`)
  }
    get ref_option_group_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.option_group_name`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_snapshot_create_time(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_create_time`)
  }
    get ref_snapshot_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_type`)
  }
    get ref_source_db_snapshot_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.source_db_snapshot_identifier`)
  }
    get ref_source_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.source_region`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
    get ref_storage_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.storage_type`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface data_aws_dx_gateway_config {
    amazon_side_asn?: rstring
    name: rstring
}

export class data_aws_dx_gateway implements Data {
    config: data_aws_dx_gateway_config
    private _is_data: boolean = true
    private _name: string = "data_aws_dx_gateway"
    private _id: string;
    constructor(id: string, config: data_aws_dx_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_amazon_side_asn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.amazon_side_asn`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
}

export interface _data_aws_dynamodb_table__attribute {
    name?: rstring
    type?: rstring
}

export interface _data_aws_dynamodb_table__global_secondary_index {
    hash_key?: rstring
    name?: rstring
    non_key_attributes?: rstring[]
    projection_type?: rstring
    range_key?: rstring
    read_capacity?: rnumber
    write_capacity?: rnumber
}

export interface _data_aws_dynamodb_table__local_secondary_index {
    name?: rstring
    non_key_attributes?: rstring[]
    projection_type?: rstring
    range_key?: rstring
}

export interface _data_aws_dynamodb_table__point_in_time_recovery {
    enabled?: rboolean
}

export interface _data_aws_dynamodb_table__server_side_encryption {
    enabled?: rboolean
}

export interface _data_aws_dynamodb_table__ttl {
    attribute_name?: rstring
    enabled?: rboolean
}

export interface data_aws_dynamodb_table_config {
    arn?: rstring
    attribute?: _data_aws_dynamodb_table__attribute[]
    billing_mode?: rstring
    global_secondary_index?: _data_aws_dynamodb_table__global_secondary_index[]
    hash_key?: rstring
    local_secondary_index?: _data_aws_dynamodb_table__local_secondary_index[]
    name: rstring
    point_in_time_recovery?: _data_aws_dynamodb_table__point_in_time_recovery[]
    range_key?: rstring
    read_capacity?: rnumber
    server_side_encryption?: _data_aws_dynamodb_table__server_side_encryption[]
    stream_arn?: rstring
    stream_enabled?: rboolean
    stream_label?: rstring
    stream_view_type?: rstring
    tags?: {[propName: string]: rstring}
    ttl?: _data_aws_dynamodb_table__ttl[]
    write_capacity?: rnumber
}

export class data_aws_dynamodb_table implements Data {
    config: data_aws_dynamodb_table_config
    private _is_data: boolean = true
    private _name: string = "data_aws_dynamodb_table"
    private _id: string;
    constructor(id: string, config: data_aws_dynamodb_table_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_attribute(): Reference<_data_aws_dynamodb_table__attribute[]> {
        return new Reference(`data.${this._name}.${this._id}.attribute`)
  }
    get ref_billing_mode(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.billing_mode`)
  }
    get ref_global_secondary_index(): Reference<_data_aws_dynamodb_table__global_secondary_index[]> {
        return new Reference(`data.${this._name}.${this._id}.global_secondary_index`)
  }
    get ref_hash_key(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.hash_key`)
  }
    get ref_local_secondary_index(): Reference<_data_aws_dynamodb_table__local_secondary_index[]> {
        return new Reference(`data.${this._name}.${this._id}.local_secondary_index`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_point_in_time_recovery(): Reference<_data_aws_dynamodb_table__point_in_time_recovery[]> {
        return new Reference(`data.${this._name}.${this._id}.point_in_time_recovery`)
  }
    get ref_range_key(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.range_key`)
  }
    get ref_read_capacity(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.read_capacity`)
  }
    get ref_server_side_encryption(): Reference<_data_aws_dynamodb_table__server_side_encryption[]> {
        return new Reference(`data.${this._name}.${this._id}.server_side_encryption`)
  }
    get ref_stream_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.stream_arn`)
  }
    get ref_stream_enabled(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.stream_enabled`)
  }
    get ref_stream_label(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.stream_label`)
  }
    get ref_stream_view_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.stream_view_type`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_ttl(): Reference<_data_aws_dynamodb_table__ttl[]> {
        return new Reference(`data.${this._name}.${this._id}.ttl`)
  }
    get ref_write_capacity(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.write_capacity`)
  }
}

export interface _data_aws_ebs_snapshot__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_ebs_snapshot_config {
    data_encryption_key_id?: rstring
    description?: rstring
    encrypted?: rboolean
    filter?: _data_aws_ebs_snapshot__filter[]
    kms_key_id?: rstring
    most_recent?: rboolean
    owner_alias?: rstring
    owner_id?: rstring
    owners?: rstring[]
    restorable_by_user_ids?: rstring[]
    snapshot_id?: rstring
    snapshot_ids?: rstring[]
    state?: rstring
    tags?: {[propName: string]: rstring}
    volume_id?: rstring
    volume_size?: rnumber
}

export class data_aws_ebs_snapshot implements Data {
    config: data_aws_ebs_snapshot_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ebs_snapshot"
    private _id: string;
    constructor(id: string, config: data_aws_ebs_snapshot_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_data_encryption_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.data_encryption_key_id`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.encrypted`)
  }
    get ref_filter(): Reference<_data_aws_ebs_snapshot__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_id`)
  }
    get ref_most_recent(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.most_recent`)
  }
    get ref_owner_alias(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_alias`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_owners(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.owners`)
  }
    get ref_restorable_by_user_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.restorable_by_user_ids`)
  }
    get ref_snapshot_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_id`)
  }
    get ref_snapshot_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_ids`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_volume_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.volume_id`)
  }
    get ref_volume_size(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.volume_size`)
  }
}

export interface _data_aws_ebs_snapshot_ids__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_ebs_snapshot_ids_config {
    filter?: _data_aws_ebs_snapshot_ids__filter[]
    ids?: rstring[]
    owners?: rstring[]
    restorable_by_user_ids?: rstring[]
}

export class data_aws_ebs_snapshot_ids implements Data {
    config: data_aws_ebs_snapshot_ids_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ebs_snapshot_ids"
    private _id: string;
    constructor(id: string, config: data_aws_ebs_snapshot_ids_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_filter(): Reference<_data_aws_ebs_snapshot_ids__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_owners(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.owners`)
  }
    get ref_restorable_by_user_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.restorable_by_user_ids`)
  }
}

export interface _data_aws_ebs_volume__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_ebs_volume_config {
    arn?: rstring
    availability_zone?: rstring
    encrypted?: rboolean
    filter?: _data_aws_ebs_volume__filter[]
    iops?: rnumber
    kms_key_id?: rstring
    most_recent?: rboolean
    size?: rnumber
    snapshot_id?: rstring
    tags?: {[propName: string]: rstring}
    volume_id?: rstring
    volume_type?: rstring
}

export class data_aws_ebs_volume implements Data {
    config: data_aws_ebs_volume_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ebs_volume"
    private _id: string;
    constructor(id: string, config: data_aws_ebs_volume_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone`)
  }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.encrypted`)
  }
    get ref_filter(): Reference<_data_aws_ebs_volume__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_iops(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.iops`)
  }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_id`)
  }
    get ref_most_recent(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.most_recent`)
  }
    get ref_size(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.size`)
  }
    get ref_snapshot_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_id`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_volume_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.volume_id`)
  }
    get ref_volume_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.volume_type`)
  }
}

export interface _data_aws_ec2_transit_gateway__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_ec2_transit_gateway_config {
    amazon_side_asn?: rnumber
    arn?: rstring
    association_default_route_table_id?: rstring
    auto_accept_shared_attachments?: rstring
    default_route_table_association?: rstring
    default_route_table_propagation?: rstring
    description?: rstring
    dns_support?: rstring
    filter?: _data_aws_ec2_transit_gateway__filter[]
    id?: rstring
    owner_id?: rstring
    propagation_default_route_table_id?: rstring
    tags?: {[propName: string]: rstring}
    vpn_ecmp_support?: rstring
}

export class data_aws_ec2_transit_gateway implements Data {
    config: data_aws_ec2_transit_gateway_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ec2_transit_gateway"
    private _id: string;
    constructor(id: string, config: data_aws_ec2_transit_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_amazon_side_asn(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.amazon_side_asn`)
  }
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_association_default_route_table_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.association_default_route_table_id`)
  }
    get ref_auto_accept_shared_attachments(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.auto_accept_shared_attachments`)
  }
    get ref_default_route_table_association(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.default_route_table_association`)
  }
    get ref_default_route_table_propagation(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.default_route_table_propagation`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_dns_support(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.dns_support`)
  }
    get ref_filter(): Reference<_data_aws_ec2_transit_gateway__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_propagation_default_route_table_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.propagation_default_route_table_id`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpn_ecmp_support(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpn_ecmp_support`)
  }
}

export interface _data_aws_ec2_transit_gateway_route_table__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_ec2_transit_gateway_route_table_config {
    default_association_route_table?: rboolean
    default_propagation_route_table?: rboolean
    filter?: _data_aws_ec2_transit_gateway_route_table__filter[]
    id?: rstring
    tags?: {[propName: string]: rstring}
    transit_gateway_id?: rstring
}

export class data_aws_ec2_transit_gateway_route_table implements Data {
    config: data_aws_ec2_transit_gateway_route_table_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ec2_transit_gateway_route_table"
    private _id: string;
    constructor(id: string, config: data_aws_ec2_transit_gateway_route_table_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_default_association_route_table(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.default_association_route_table`)
  }
    get ref_default_propagation_route_table(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.default_propagation_route_table`)
  }
    get ref_filter(): Reference<_data_aws_ec2_transit_gateway_route_table__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_transit_gateway_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.transit_gateway_id`)
  }
}

export interface _data_aws_ec2_transit_gateway_vpc_attachment__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_ec2_transit_gateway_vpc_attachment_config {
    dns_support?: rstring
    filter?: _data_aws_ec2_transit_gateway_vpc_attachment__filter[]
    id?: rstring
    ipv6_support?: rstring
    subnet_ids?: rstring[]
    tags?: {[propName: string]: rstring}
    transit_gateway_id?: rstring
    vpc_id?: rstring
    vpc_owner_id?: rstring
}

export class data_aws_ec2_transit_gateway_vpc_attachment implements Data {
    config: data_aws_ec2_transit_gateway_vpc_attachment_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ec2_transit_gateway_vpc_attachment"
    private _id: string;
    constructor(id: string, config: data_aws_ec2_transit_gateway_vpc_attachment_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dns_support(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.dns_support`)
  }
    get ref_filter(): Reference<_data_aws_ec2_transit_gateway_vpc_attachment__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_ipv6_support(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ipv6_support`)
  }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.subnet_ids`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_transit_gateway_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.transit_gateway_id`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
    get ref_vpc_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_owner_id`)
  }
}

export interface data_aws_ecr_repository_config {
    arn?: rstring
    name: rstring
    registry_id?: rstring
    repository_url?: rstring
    tags?: {[propName: string]: rstring}
}

export class data_aws_ecr_repository implements Data {
    config: data_aws_ecr_repository_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ecr_repository"
    private _id: string;
    constructor(id: string, config: data_aws_ecr_repository_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_registry_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.registry_id`)
  }
    get ref_repository_url(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.repository_url`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface data_aws_ecs_cluster_config {
    arn?: rstring
    cluster_name: rstring
    pending_tasks_count?: rnumber
    registered_container_instances_count?: rnumber
    running_tasks_count?: rnumber
    status?: rstring
}

export class data_aws_ecs_cluster implements Data {
    config: data_aws_ecs_cluster_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ecs_cluster"
    private _id: string;
    constructor(id: string, config: data_aws_ecs_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_cluster_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_name`)
  }
    get ref_pending_tasks_count(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.pending_tasks_count`)
  }
    get ref_registered_container_instances_count(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.registered_container_instances_count`)
  }
    get ref_running_tasks_count(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.running_tasks_count`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
}

export interface data_aws_ecs_container_definition_config {
    container_name: rstring
    cpu?: rnumber
    disable_networking?: rboolean
    docker_labels?: {[propName: string]: rstring}
    environment?: {[propName: string]: rstring}
    image?: rstring
    image_digest?: rstring
    memory?: rnumber
    memory_reservation?: rnumber
    task_definition: rstring
}

export class data_aws_ecs_container_definition implements Data {
    config: data_aws_ecs_container_definition_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ecs_container_definition"
    private _id: string;
    constructor(id: string, config: data_aws_ecs_container_definition_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_container_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.container_name`)
  }
    get ref_cpu(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.cpu`)
  }
    get ref_disable_networking(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.disable_networking`)
  }
    get ref_docker_labels(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.docker_labels`)
  }
    get ref_environment(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.environment`)
  }
    get ref_image(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.image`)
  }
    get ref_image_digest(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.image_digest`)
  }
    get ref_memory(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.memory`)
  }
    get ref_memory_reservation(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.memory_reservation`)
  }
    get ref_task_definition(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.task_definition`)
  }
}

export interface data_aws_ecs_service_config {
    arn?: rstring
    cluster_arn: rstring
    desired_count?: rnumber
    launch_type?: rstring
    scheduling_strategy?: rstring
    service_name: rstring
    task_definition?: rstring
}

export class data_aws_ecs_service implements Data {
    config: data_aws_ecs_service_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ecs_service"
    private _id: string;
    constructor(id: string, config: data_aws_ecs_service_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_cluster_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_arn`)
  }
    get ref_desired_count(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.desired_count`)
  }
    get ref_launch_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.launch_type`)
  }
    get ref_scheduling_strategy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.scheduling_strategy`)
  }
    get ref_service_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.service_name`)
  }
    get ref_task_definition(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.task_definition`)
  }
}

export interface data_aws_ecs_task_definition_config {
    family?: rstring
    network_mode?: rstring
    revision?: rnumber
    status?: rstring
    task_definition: rstring
    task_role_arn?: rstring
}

export class data_aws_ecs_task_definition implements Data {
    config: data_aws_ecs_task_definition_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ecs_task_definition"
    private _id: string;
    constructor(id: string, config: data_aws_ecs_task_definition_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_family(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.family`)
  }
    get ref_network_mode(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.network_mode`)
  }
    get ref_revision(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.revision`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
    get ref_task_definition(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.task_definition`)
  }
    get ref_task_role_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.task_role_arn`)
  }
}

export interface data_aws_efs_file_system_config {
    arn?: rstring
    creation_token?: rstring
    dns_name?: rstring
    encrypted?: rboolean
    file_system_id?: rstring
    kms_key_id?: rstring
    performance_mode?: rstring
    tags?: {[propName: string]: rstring}
}

export class data_aws_efs_file_system implements Data {
    config: data_aws_efs_file_system_config
    private _is_data: boolean = true
    private _name: string = "data_aws_efs_file_system"
    private _id: string;
    constructor(id: string, config: data_aws_efs_file_system_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_creation_token(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.creation_token`)
  }
    get ref_dns_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.dns_name`)
  }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.encrypted`)
  }
    get ref_file_system_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.file_system_id`)
  }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_id`)
  }
    get ref_performance_mode(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.performance_mode`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface data_aws_efs_mount_target_config {
    dns_name?: rstring
    file_system_arn?: rstring
    file_system_id?: rstring
    ip_address?: rstring
    mount_target_id: rstring
    network_interface_id?: rstring
    security_groups?: rstring[]
    subnet_id?: rstring
}

export class data_aws_efs_mount_target implements Data {
    config: data_aws_efs_mount_target_config
    private _is_data: boolean = true
    private _name: string = "data_aws_efs_mount_target"
    private _id: string;
    constructor(id: string, config: data_aws_efs_mount_target_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dns_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.dns_name`)
  }
    get ref_file_system_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.file_system_arn`)
  }
    get ref_file_system_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.file_system_id`)
  }
    get ref_ip_address(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ip_address`)
  }
    get ref_mount_target_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.mount_target_id`)
  }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.network_interface_id`)
  }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_groups`)
  }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.subnet_id`)
  }
}

export interface _data_aws_eip__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_eip_config {
    association_id?: rstring
    domain?: rstring
    filter?: _data_aws_eip__filter[]
    id?: rstring
    instance_id?: rstring
    network_interface_id?: rstring
    network_interface_owner_id?: rstring
    private_ip?: rstring
    public_ip?: rstring
    public_ipv4_pool?: rstring
    tags?: {[propName: string]: rstring}
}

export class data_aws_eip implements Data {
    config: data_aws_eip_config
    private _is_data: boolean = true
    private _name: string = "data_aws_eip"
    private _id: string;
    constructor(id: string, config: data_aws_eip_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_association_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.association_id`)
  }
    get ref_domain(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.domain`)
  }
    get ref_filter(): Reference<_data_aws_eip__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_instance_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.instance_id`)
  }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.network_interface_id`)
  }
    get ref_network_interface_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.network_interface_owner_id`)
  }
    get ref_private_ip(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.private_ip`)
  }
    get ref_public_ip(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.public_ip`)
  }
    get ref_public_ipv4_pool(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.public_ipv4_pool`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface _data_aws_eks_cluster__certificate_authority {
    data?: rstring
}

export interface _data_aws_eks_cluster__vpc_config {
    security_group_ids?: rstring[]
    subnet_ids?: rstring[]
    vpc_id?: rstring
}

export interface data_aws_eks_cluster_config {
    arn?: rstring
    certificate_authority?: _data_aws_eks_cluster__certificate_authority[]
    created_at?: rstring
    endpoint?: rstring
    name: rstring
    platform_version?: rstring
    role_arn?: rstring
    version?: rstring
    vpc_config?: _data_aws_eks_cluster__vpc_config[]
}

export class data_aws_eks_cluster implements Data {
    config: data_aws_eks_cluster_config
    private _is_data: boolean = true
    private _name: string = "data_aws_eks_cluster"
    private _id: string;
    constructor(id: string, config: data_aws_eks_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_certificate_authority(): Reference<_data_aws_eks_cluster__certificate_authority[]> {
        return new Reference(`data.${this._name}.${this._id}.certificate_authority`)
  }
    get ref_created_at(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.created_at`)
  }
    get ref_endpoint(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.endpoint`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_platform_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.platform_version`)
  }
    get ref_role_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.role_arn`)
  }
    get ref_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.version`)
  }
    get ref_vpc_config(): Reference<_data_aws_eks_cluster__vpc_config[]> {
        return new Reference(`data.${this._name}.${this._id}.vpc_config`)
  }
}

export interface data_aws_eks_cluster_auth_config {
    name: rstring
    token?: rstring
}

export class data_aws_eks_cluster_auth implements Data {
    config: data_aws_eks_cluster_auth_config
    private _is_data: boolean = true
    private _name: string = "data_aws_eks_cluster_auth"
    private _id: string;
    constructor(id: string, config: data_aws_eks_cluster_auth_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_token(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.token`)
  }
}

export interface _data_aws_elastic_beanstalk_application__appversion_lifecycle {
    delete_source_from_s3?: rboolean
    max_age_in_days?: rnumber
    max_count?: rnumber
    service_role?: rstring
}

export interface data_aws_elastic_beanstalk_application_config {
    appversion_lifecycle?: _data_aws_elastic_beanstalk_application__appversion_lifecycle[]
    arn?: rstring
    description?: rstring
    name: rstring
}

export class data_aws_elastic_beanstalk_application implements Data {
    config: data_aws_elastic_beanstalk_application_config
    private _is_data: boolean = true
    private _name: string = "data_aws_elastic_beanstalk_application"
    private _id: string;
    constructor(id: string, config: data_aws_elastic_beanstalk_application_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_appversion_lifecycle(): Reference<_data_aws_elastic_beanstalk_application__appversion_lifecycle[]> {
        return new Reference(`data.${this._name}.${this._id}.appversion_lifecycle`)
  }
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
}

export interface data_aws_elastic_beanstalk_hosted_zone_config {
    region?: rstring
}

export class data_aws_elastic_beanstalk_hosted_zone implements Data {
    config: data_aws_elastic_beanstalk_hosted_zone_config
    private _is_data: boolean = true
    private _name: string = "data_aws_elastic_beanstalk_hosted_zone"
    private _id: string;
    constructor(id: string, config: data_aws_elastic_beanstalk_hosted_zone_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.region`)
  }
}

export interface data_aws_elastic_beanstalk_solution_stack_config {
    most_recent?: rboolean
    name?: rstring
    name_regex: rstring
}

export class data_aws_elastic_beanstalk_solution_stack implements Data {
    config: data_aws_elastic_beanstalk_solution_stack_config
    private _is_data: boolean = true
    private _name: string = "data_aws_elastic_beanstalk_solution_stack"
    private _id: string;
    constructor(id: string, config: data_aws_elastic_beanstalk_solution_stack_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_most_recent(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.most_recent`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_name_regex(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name_regex`)
  }
}

export interface _data_aws_elasticache_cluster__cache_nodes {
    address?: rstring
    availability_zone?: rstring
    id?: rstring
    port?: rnumber
}

export interface data_aws_elasticache_cluster_config {
    arn?: rstring
    availability_zone?: rstring
    cache_nodes?: _data_aws_elasticache_cluster__cache_nodes[]
    cluster_address?: rstring
    cluster_id: rstring
    configuration_endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    maintenance_window?: rstring
    node_type?: rstring
    notification_topic_arn?: rstring
    num_cache_nodes?: rnumber
    parameter_group_name?: rstring
    port?: rnumber
    replication_group_id?: rstring
    security_group_ids?: rstring[]
    security_group_names?: rstring[]
    snapshot_retention_limit?: rnumber
    snapshot_window?: rstring
    subnet_group_name?: rstring
    tags?: {[propName: string]: rstring}
}

export class data_aws_elasticache_cluster implements Data {
    config: data_aws_elasticache_cluster_config
    private _is_data: boolean = true
    private _name: string = "data_aws_elasticache_cluster"
    private _id: string;
    constructor(id: string, config: data_aws_elasticache_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone`)
  }
    get ref_cache_nodes(): Reference<_data_aws_elasticache_cluster__cache_nodes[]> {
        return new Reference(`data.${this._name}.${this._id}.cache_nodes`)
  }
    get ref_cluster_address(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_address`)
  }
    get ref_cluster_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_id`)
  }
    get ref_configuration_endpoint(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.configuration_endpoint`)
  }
    get ref_engine(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine`)
  }
    get ref_engine_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine_version`)
  }
    get ref_maintenance_window(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.maintenance_window`)
  }
    get ref_node_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.node_type`)
  }
    get ref_notification_topic_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.notification_topic_arn`)
  }
    get ref_num_cache_nodes(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.num_cache_nodes`)
  }
    get ref_parameter_group_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.parameter_group_name`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_replication_group_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.replication_group_id`)
  }
    get ref_security_group_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_group_ids`)
  }
    get ref_security_group_names(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_group_names`)
  }
    get ref_snapshot_retention_limit(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_retention_limit`)
  }
    get ref_snapshot_window(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_window`)
  }
    get ref_subnet_group_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.subnet_group_name`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface data_aws_elasticache_replication_group_config {
    auth_token_enabled?: rboolean
    automatic_failover_enabled?: rboolean
    configuration_endpoint_address?: rstring
    member_clusters?: rstring[]
    node_type?: rstring
    number_cache_clusters?: rnumber
    port?: rnumber
    primary_endpoint_address?: rstring
    replication_group_description?: rstring
    replication_group_id: rstring
    snapshot_retention_limit?: rnumber
    snapshot_window?: rstring
}

export class data_aws_elasticache_replication_group implements Data {
    config: data_aws_elasticache_replication_group_config
    private _is_data: boolean = true
    private _name: string = "data_aws_elasticache_replication_group"
    private _id: string;
    constructor(id: string, config: data_aws_elasticache_replication_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_auth_token_enabled(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.auth_token_enabled`)
  }
    get ref_automatic_failover_enabled(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.automatic_failover_enabled`)
  }
    get ref_configuration_endpoint_address(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.configuration_endpoint_address`)
  }
    get ref_member_clusters(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.member_clusters`)
  }
    get ref_node_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.node_type`)
  }
    get ref_number_cache_clusters(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.number_cache_clusters`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_primary_endpoint_address(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.primary_endpoint_address`)
  }
    get ref_replication_group_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.replication_group_description`)
  }
    get ref_replication_group_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.replication_group_id`)
  }
    get ref_snapshot_retention_limit(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_retention_limit`)
  }
    get ref_snapshot_window(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.snapshot_window`)
  }
}

export interface _data_aws_elb__access_logs {
    bucket?: rstring
    bucket_prefix?: rstring
    enabled?: rboolean
    interval?: rnumber
}

export interface _data_aws_elb__health_check {
    healthy_threshold?: rnumber
    interval?: rnumber
    target?: rstring
    timeout?: rnumber
    unhealthy_threshold?: rnumber
}

export interface _data_aws_elb__listener {
    instance_port?: rnumber
    instance_protocol?: rstring
    lb_port?: rnumber
    lb_protocol?: rstring
    ssl_certificate_id?: rstring
}

export interface data_aws_elb_config {
    access_logs?: _data_aws_elb__access_logs[]
    availability_zones?: rstring[]
    connection_draining?: rboolean
    connection_draining_timeout?: rnumber
    cross_zone_load_balancing?: rboolean
    dns_name?: rstring
    health_check?: _data_aws_elb__health_check[]
    idle_timeout?: rnumber
    instances?: rstring[]
    internal?: rboolean
    listener?: _data_aws_elb__listener[]
    name: rstring
    security_groups?: rstring[]
    source_security_group?: rstring
    source_security_group_id?: rstring
    subnets?: rstring[]
    tags?: {[propName: string]: rstring}
    zone_id?: rstring
}

export class data_aws_elb implements Data {
    config: data_aws_elb_config
    private _is_data: boolean = true
    private _name: string = "data_aws_elb"
    private _id: string;
    constructor(id: string, config: data_aws_elb_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_logs(): Reference<_data_aws_elb__access_logs[]> {
        return new Reference(`data.${this._name}.${this._id}.access_logs`)
  }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.availability_zones`)
  }
    get ref_connection_draining(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.connection_draining`)
  }
    get ref_connection_draining_timeout(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.connection_draining_timeout`)
  }
    get ref_cross_zone_load_balancing(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.cross_zone_load_balancing`)
  }
    get ref_dns_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.dns_name`)
  }
    get ref_health_check(): Reference<_data_aws_elb__health_check[]> {
        return new Reference(`data.${this._name}.${this._id}.health_check`)
  }
    get ref_idle_timeout(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.idle_timeout`)
  }
    get ref_instances(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.instances`)
  }
    get ref_internal(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.internal`)
  }
    get ref_listener(): Reference<_data_aws_elb__listener[]> {
        return new Reference(`data.${this._name}.${this._id}.listener`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_groups`)
  }
    get ref_source_security_group(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.source_security_group`)
  }
    get ref_source_security_group_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.source_security_group_id`)
  }
    get ref_subnets(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.subnets`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_zone_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.zone_id`)
  }
}

export interface data_aws_elb_hosted_zone_id_config {
    region?: rstring
}

export class data_aws_elb_hosted_zone_id implements Data {
    config: data_aws_elb_hosted_zone_id_config
    private _is_data: boolean = true
    private _name: string = "data_aws_elb_hosted_zone_id"
    private _id: string;
    constructor(id: string, config: data_aws_elb_hosted_zone_id_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.region`)
  }
}

export interface data_aws_elb_service_account_config {
    arn?: rstring
    region?: rstring
}

export class data_aws_elb_service_account implements Data {
    config: data_aws_elb_service_account_config
    private _is_data: boolean = true
    private _name: string = "data_aws_elb_service_account"
    private _id: string;
    constructor(id: string, config: data_aws_elb_service_account_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.region`)
  }
}

export interface _data_aws_glue_script__dag_edge {
    source: rstring
    target: rstring
    target_parameter?: rstring
}

export interface __data_aws_glue_script__dag_node__args {
    name: rstring
    param?: rboolean
    value: rstring
}

export interface _data_aws_glue_script__dag_node {
    args: __data_aws_glue_script__dag_node__args[]
    id: rstring
    line_number?: rnumber
    node_type: rstring
}

export interface data_aws_glue_script_config {
    dag_edge: _data_aws_glue_script__dag_edge[]
    dag_node: _data_aws_glue_script__dag_node[]
    language?: rstring
    python_script?: rstring
    scala_code?: rstring
}

export class data_aws_glue_script implements Data {
    config: data_aws_glue_script_config
    private _is_data: boolean = true
    private _name: string = "data_aws_glue_script"
    private _id: string;
    constructor(id: string, config: data_aws_glue_script_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dag_edge(): Reference<_data_aws_glue_script__dag_edge[]> {
        return new Reference(`data.${this._name}.${this._id}.dag_edge`)
  }
    get ref_dag_node(): Reference<_data_aws_glue_script__dag_node[]> {
        return new Reference(`data.${this._name}.${this._id}.dag_node`)
  }
    get ref_language(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.language`)
  }
    get ref_python_script(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.python_script`)
  }
    get ref_scala_code(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.scala_code`)
  }
}

export interface data_aws_iam_account_alias_config {
    account_alias?: rstring
}

export class data_aws_iam_account_alias implements Data {
    config: data_aws_iam_account_alias_config
    private _is_data: boolean = true
    private _name: string = "data_aws_iam_account_alias"
    private _id: string;
    constructor(id: string, config: data_aws_iam_account_alias_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_account_alias(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.account_alias`)
  }
}

export interface data_aws_iam_group_config {
    arn?: rstring
    group_id?: rstring
    group_name: rstring
    path?: rstring
}

export class data_aws_iam_group implements Data {
    config: data_aws_iam_group_config
    private _is_data: boolean = true
    private _name: string = "data_aws_iam_group"
    private _id: string;
    constructor(id: string, config: data_aws_iam_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_group_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.group_id`)
  }
    get ref_group_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.group_name`)
  }
    get ref_path(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.path`)
  }
}

export interface data_aws_iam_instance_profile_config {
    arn?: rstring
    create_date?: rstring
    name: rstring
    path?: rstring
    role_arn?: rstring
    role_id?: rstring
    role_name?: rstring
}

export class data_aws_iam_instance_profile implements Data {
    config: data_aws_iam_instance_profile_config
    private _is_data: boolean = true
    private _name: string = "data_aws_iam_instance_profile"
    private _id: string;
    constructor(id: string, config: data_aws_iam_instance_profile_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_create_date(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.create_date`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_path(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.path`)
  }
    get ref_role_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.role_arn`)
  }
    get ref_role_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.role_id`)
  }
    get ref_role_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.role_name`)
  }
}

export interface data_aws_iam_policy_config {
    arn: rstring
    description?: rstring
    name?: rstring
    path?: rstring
    policy?: rstring
}

export class data_aws_iam_policy implements Data {
    config: data_aws_iam_policy_config
    private _is_data: boolean = true
    private _name: string = "data_aws_iam_policy"
    private _id: string;
    constructor(id: string, config: data_aws_iam_policy_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_path(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.path`)
  }
    get ref_policy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.policy`)
  }
}

export interface __data_aws_iam_policy_document__statement__condition {
    test: rstring
    values: rstring[]
    variable: rstring
}

export interface __data_aws_iam_policy_document__statement__not_principals {
    identifiers: rstring[]
    type: rstring
}

export interface __data_aws_iam_policy_document__statement__principals {
    identifiers: rstring[]
    type: rstring
}

export interface _data_aws_iam_policy_document__statement {
    actions?: rstring[]
    condition?: __data_aws_iam_policy_document__statement__condition[]
    effect?: rstring
    not_actions?: rstring[]
    not_principals?: __data_aws_iam_policy_document__statement__not_principals[]
    not_resources?: rstring[]
    principals?: __data_aws_iam_policy_document__statement__principals[]
    resources?: rstring[]
    sid?: rstring
}

export interface data_aws_iam_policy_document_config {
    json?: rstring
    override_json?: rstring
    policy_id?: rstring
    source_json?: rstring
    statement?: _data_aws_iam_policy_document__statement[]
    version?: rstring
}

export class data_aws_iam_policy_document implements Data {
    config: data_aws_iam_policy_document_config
    private _is_data: boolean = true
    private _name: string = "data_aws_iam_policy_document"
    private _id: string;
    constructor(id: string, config: data_aws_iam_policy_document_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_json(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.json`)
  }
    get ref_override_json(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.override_json`)
  }
    get ref_policy_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.policy_id`)
  }
    get ref_source_json(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.source_json`)
  }
    get ref_statement(): Reference<_data_aws_iam_policy_document__statement[]> {
        return new Reference(`data.${this._name}.${this._id}.statement`)
  }
    get ref_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.version`)
  }
}

export interface data_aws_iam_role_config {
    arn?: rstring
    assume_role_policy?: rstring
    assume_role_policy_document?: rstring
    create_date?: rstring
    description?: rstring
    max_session_duration?: rnumber
    name?: rstring
    path?: rstring
    permissions_boundary?: rstring
    role_id?: rstring
    role_name?: rstring
    unique_id?: rstring
}

export class data_aws_iam_role implements Data {
    config: data_aws_iam_role_config
    private _is_data: boolean = true
    private _name: string = "data_aws_iam_role"
    private _id: string;
    constructor(id: string, config: data_aws_iam_role_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_assume_role_policy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.assume_role_policy`)
  }
    get ref_assume_role_policy_document(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.assume_role_policy_document`)
  }
    get ref_create_date(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.create_date`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_max_session_duration(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.max_session_duration`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_path(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.path`)
  }
    get ref_permissions_boundary(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.permissions_boundary`)
  }
    get ref_role_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.role_id`)
  }
    get ref_role_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.role_name`)
  }
    get ref_unique_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.unique_id`)
  }
}

export interface data_aws_iam_server_certificate_config {
    arn?: rstring
    certificate_body?: rstring
    certificate_chain?: rstring
    expiration_date?: rstring
    latest?: rboolean
    name?: rstring
    name_prefix?: rstring
    path?: rstring
    path_prefix?: rstring
    upload_date?: rstring
}

export class data_aws_iam_server_certificate implements Data {
    config: data_aws_iam_server_certificate_config
    private _is_data: boolean = true
    private _name: string = "data_aws_iam_server_certificate"
    private _id: string;
    constructor(id: string, config: data_aws_iam_server_certificate_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_certificate_body(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.certificate_body`)
  }
    get ref_certificate_chain(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.certificate_chain`)
  }
    get ref_expiration_date(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.expiration_date`)
  }
    get ref_latest(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.latest`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_name_prefix(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name_prefix`)
  }
    get ref_path(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.path`)
  }
    get ref_path_prefix(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.path_prefix`)
  }
    get ref_upload_date(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.upload_date`)
  }
}

export interface data_aws_iam_user_config {
    arn?: rstring
    path?: rstring
    permissions_boundary?: rstring
    user_id?: rstring
    user_name: rstring
}

export class data_aws_iam_user implements Data {
    config: data_aws_iam_user_config
    private _is_data: boolean = true
    private _name: string = "data_aws_iam_user"
    private _id: string;
    constructor(id: string, config: data_aws_iam_user_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_path(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.path`)
  }
    get ref_permissions_boundary(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.permissions_boundary`)
  }
    get ref_user_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.user_id`)
  }
    get ref_user_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.user_name`)
  }
}

export interface data_aws_inspector_rules_packages_config {
    arns?: rstring[]
}

export class data_aws_inspector_rules_packages implements Data {
    config: data_aws_inspector_rules_packages_config
    private _is_data: boolean = true
    private _name: string = "data_aws_inspector_rules_packages"
    private _id: string;
    constructor(id: string, config: data_aws_inspector_rules_packages_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arns(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.arns`)
  }
}

export interface _data_aws_instance__credit_specification {
    cpu_credits?: rstring
}

export interface _data_aws_instance__ebs_block_device {
    delete_on_termination?: rboolean
    device_name?: rstring
    encrypted?: rboolean
    iops?: rnumber
    snapshot_id?: rstring
    volume_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _data_aws_instance__ephemeral_block_device {
    device_name: rstring
    no_device?: rboolean
    virtual_name?: rstring
}

export interface _data_aws_instance__filter {
    name: rstring
    values: rstring[]
}

export interface _data_aws_instance__root_block_device {
    delete_on_termination?: rboolean
    iops?: rnumber
    volume_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface data_aws_instance_config {
    ami?: rstring
    arn?: rstring
    associate_public_ip_address?: rboolean
    availability_zone?: rstring
    credit_specification?: _data_aws_instance__credit_specification[]
    disable_api_termination?: rboolean
    ebs_block_device?: _data_aws_instance__ebs_block_device[]
    ebs_optimized?: rboolean
    ephemeral_block_device?: _data_aws_instance__ephemeral_block_device[]
    filter?: _data_aws_instance__filter[]
    get_password_data?: rboolean
    host_id?: rstring
    iam_instance_profile?: rstring
    instance_id?: rstring
    instance_state?: rstring
    instance_tags?: {[propName: string]: rstring}
    instance_type?: rstring
    key_name?: rstring
    monitoring?: rboolean
    network_interface_id?: rstring
    password_data?: rstring
    placement_group?: rstring
    private_dns?: rstring
    private_ip?: rstring
    public_dns?: rstring
    public_ip?: rstring
    root_block_device?: _data_aws_instance__root_block_device[]
    security_groups?: rstring[]
    source_dest_check?: rboolean
    subnet_id?: rstring
    tags?: {[propName: string]: rstring}
    tenancy?: rstring
    user_data?: rstring
    vpc_security_group_ids?: rstring[]
}

export class data_aws_instance implements Data {
    config: data_aws_instance_config
    private _is_data: boolean = true
    private _name: string = "data_aws_instance"
    private _id: string;
    constructor(id: string, config: data_aws_instance_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_ami(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ami`)
  }
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_associate_public_ip_address(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.associate_public_ip_address`)
  }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone`)
  }
    get ref_credit_specification(): Reference<_data_aws_instance__credit_specification[]> {
        return new Reference(`data.${this._name}.${this._id}.credit_specification`)
  }
    get ref_disable_api_termination(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.disable_api_termination`)
  }
    get ref_ebs_block_device(): Reference<_data_aws_instance__ebs_block_device[]> {
        return new Reference(`data.${this._name}.${this._id}.ebs_block_device`)
  }
    get ref_ebs_optimized(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.ebs_optimized`)
  }
    get ref_ephemeral_block_device(): Reference<_data_aws_instance__ephemeral_block_device[]> {
        return new Reference(`data.${this._name}.${this._id}.ephemeral_block_device`)
  }
    get ref_filter(): Reference<_data_aws_instance__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_get_password_data(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.get_password_data`)
  }
    get ref_host_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.host_id`)
  }
    get ref_iam_instance_profile(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.iam_instance_profile`)
  }
    get ref_instance_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.instance_id`)
  }
    get ref_instance_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.instance_state`)
  }
    get ref_instance_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.instance_tags`)
  }
    get ref_instance_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.instance_type`)
  }
    get ref_key_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.key_name`)
  }
    get ref_monitoring(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.monitoring`)
  }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.network_interface_id`)
  }
    get ref_password_data(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.password_data`)
  }
    get ref_placement_group(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.placement_group`)
  }
    get ref_private_dns(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.private_dns`)
  }
    get ref_private_ip(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.private_ip`)
  }
    get ref_public_dns(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.public_dns`)
  }
    get ref_public_ip(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.public_ip`)
  }
    get ref_root_block_device(): Reference<_data_aws_instance__root_block_device[]> {
        return new Reference(`data.${this._name}.${this._id}.root_block_device`)
  }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_groups`)
  }
    get ref_source_dest_check(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.source_dest_check`)
  }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.subnet_id`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_tenancy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.tenancy`)
  }
    get ref_user_data(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.user_data`)
  }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.vpc_security_group_ids`)
  }
}

export interface _data_aws_instances__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_instances_config {
    filter?: _data_aws_instances__filter[]
    ids?: rstring[]
    instance_state_names?: rstring[]
    instance_tags?: {[propName: string]: rstring}
    private_ips?: rstring[]
    public_ips?: rstring[]
}

export class data_aws_instances implements Data {
    config: data_aws_instances_config
    private _is_data: boolean = true
    private _name: string = "data_aws_instances"
    private _id: string;
    constructor(id: string, config: data_aws_instances_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_filter(): Reference<_data_aws_instances__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_instance_state_names(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.instance_state_names`)
  }
    get ref_instance_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.instance_tags`)
  }
    get ref_private_ips(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.private_ips`)
  }
    get ref_public_ips(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.public_ips`)
  }
}

export interface _data_aws_internet_gateway__attachments {
    state?: rstring
    vpc_id?: rstring
}

export interface _data_aws_internet_gateway__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_internet_gateway_config {
    attachments?: _data_aws_internet_gateway__attachments[]
    filter?: _data_aws_internet_gateway__filter[]
    internet_gateway_id?: rstring
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
}

export class data_aws_internet_gateway implements Data {
    config: data_aws_internet_gateway_config
    private _is_data: boolean = true
    private _name: string = "data_aws_internet_gateway"
    private _id: string;
    constructor(id: string, config: data_aws_internet_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_attachments(): Reference<_data_aws_internet_gateway__attachments[]> {
        return new Reference(`data.${this._name}.${this._id}.attachments`)
  }
    get ref_filter(): Reference<_data_aws_internet_gateway__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_internet_gateway_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.internet_gateway_id`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface data_aws_iot_endpoint_config {
    endpoint_address?: rstring
    endpoint_type?: rstring
}

export class data_aws_iot_endpoint implements Data {
    config: data_aws_iot_endpoint_config
    private _is_data: boolean = true
    private _name: string = "data_aws_iot_endpoint"
    private _id: string;
    constructor(id: string, config: data_aws_iot_endpoint_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_endpoint_address(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.endpoint_address`)
  }
    get ref_endpoint_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.endpoint_type`)
  }
}

export interface data_aws_ip_ranges_config {
    cidr_blocks?: rstring[]
    create_date?: rstring
    ipv6_cidr_blocks?: rstring[]
    regions?: rstring[]
    services: rstring[]
    sync_token?: rnumber
    url?: rstring
}

export class data_aws_ip_ranges implements Data {
    config: data_aws_ip_ranges_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ip_ranges"
    private _id: string;
    constructor(id: string, config: data_aws_ip_ranges_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cidr_blocks(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.cidr_blocks`)
  }
    get ref_create_date(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.create_date`)
  }
    get ref_ipv6_cidr_blocks(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ipv6_cidr_blocks`)
  }
    get ref_regions(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.regions`)
  }
    get ref_services(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.services`)
  }
    get ref_sync_token(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.sync_token`)
  }
    get ref_url(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.url`)
  }
}

export interface data_aws_kinesis_stream_config {
    arn?: rstring
    closed_shards?: rstring[]
    creation_timestamp?: rnumber
    name: rstring
    open_shards?: rstring[]
    retention_period?: rnumber
    shard_level_metrics?: rstring[]
    status?: rstring
    tags?: {[propName: string]: rstring}
}

export class data_aws_kinesis_stream implements Data {
    config: data_aws_kinesis_stream_config
    private _is_data: boolean = true
    private _name: string = "data_aws_kinesis_stream"
    private _id: string;
    constructor(id: string, config: data_aws_kinesis_stream_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_closed_shards(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.closed_shards`)
  }
    get ref_creation_timestamp(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.creation_timestamp`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_open_shards(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.open_shards`)
  }
    get ref_retention_period(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.retention_period`)
  }
    get ref_shard_level_metrics(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.shard_level_metrics`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface data_aws_kms_alias_config {
    arn?: rstring
    name: rstring
    target_key_arn?: rstring
    target_key_id?: rstring
}

export class data_aws_kms_alias implements Data {
    config: data_aws_kms_alias_config
    private _is_data: boolean = true
    private _name: string = "data_aws_kms_alias"
    private _id: string;
    constructor(id: string, config: data_aws_kms_alias_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_target_key_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.target_key_arn`)
  }
    get ref_target_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.target_key_id`)
  }
}

export interface data_aws_kms_ciphertext_config {
    ciphertext_blob?: rstring
    context?: {[propName: string]: rstring}
    key_id: rstring
    plaintext: rstring
}

export class data_aws_kms_ciphertext implements Data {
    config: data_aws_kms_ciphertext_config
    private _is_data: boolean = true
    private _name: string = "data_aws_kms_ciphertext"
    private _id: string;
    constructor(id: string, config: data_aws_kms_ciphertext_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_ciphertext_blob(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ciphertext_blob`)
  }
    get ref_context(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.context`)
  }
    get ref_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.key_id`)
  }
    get ref_plaintext(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.plaintext`)
  }
}

export interface data_aws_kms_key_config {
    arn?: rstring
    aws_account_id?: rstring
    creation_date?: rstring
    deletion_date?: rstring
    description?: rstring
    enabled?: rboolean
    expiration_model?: rstring
    grant_tokens?: rstring[]
    key_id: rstring
    key_manager?: rstring
    key_state?: rstring
    key_usage?: rstring
    origin?: rstring
    valid_to?: rstring
}

export class data_aws_kms_key implements Data {
    config: data_aws_kms_key_config
    private _is_data: boolean = true
    private _name: string = "data_aws_kms_key"
    private _id: string;
    constructor(id: string, config: data_aws_kms_key_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_aws_account_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.aws_account_id`)
  }
    get ref_creation_date(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.creation_date`)
  }
    get ref_deletion_date(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.deletion_date`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_enabled(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.enabled`)
  }
    get ref_expiration_model(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.expiration_model`)
  }
    get ref_grant_tokens(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.grant_tokens`)
  }
    get ref_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.key_id`)
  }
    get ref_key_manager(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.key_manager`)
  }
    get ref_key_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.key_state`)
  }
    get ref_key_usage(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.key_usage`)
  }
    get ref_origin(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.origin`)
  }
    get ref_valid_to(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.valid_to`)
  }
}

export interface _data_aws_kms_secret__secret {
    context?: {[propName: string]: rstring}
    grant_tokens?: rstring[]
    name: rstring
    payload: rstring
}

export interface data_aws_kms_secret_config {
    __has_dynamic_attributes?: rstring
    secret: _data_aws_kms_secret__secret[]
}

export class data_aws_kms_secret implements Data {
    config: data_aws_kms_secret_config
    private _is_data: boolean = true
    private _name: string = "data_aws_kms_secret"
    private _id: string;
    constructor(id: string, config: data_aws_kms_secret_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref___has_dynamic_attributes(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.__has_dynamic_attributes`)
  }
    get ref_secret(): Reference<_data_aws_kms_secret__secret[]> {
        return new Reference(`data.${this._name}.${this._id}.secret`)
  }
}

export interface _data_aws_kms_secrets__secret {
    context?: {[propName: string]: rstring}
    grant_tokens?: rstring[]
    name: rstring
    payload: rstring
}

export interface data_aws_kms_secrets_config {
    plaintext?: {[propName: string]: rstring}
    secret: _data_aws_kms_secrets__secret[]
}

export class data_aws_kms_secrets implements Data {
    config: data_aws_kms_secrets_config
    private _is_data: boolean = true
    private _name: string = "data_aws_kms_secrets"
    private _id: string;
    constructor(id: string, config: data_aws_kms_secrets_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_plaintext(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.plaintext`)
  }
    get ref_secret(): Reference<_data_aws_kms_secrets__secret[]> {
        return new Reference(`data.${this._name}.${this._id}.secret`)
  }
}

export interface _data_aws_lambda_function__dead_letter_config {
    target_arn?: rstring
}

export interface _data_aws_lambda_function__environment {
    variables?: {[propName: string]: rstring}
}

export interface _data_aws_lambda_function__tracing_config {
    mode?: rstring
}

export interface _data_aws_lambda_function__vpc_config {
    security_group_ids?: rstring[]
    subnet_ids?: rstring[]
    vpc_id?: rstring
}

export interface data_aws_lambda_function_config {
    arn?: rstring
    dead_letter_config?: _data_aws_lambda_function__dead_letter_config[]
    description?: rstring
    environment?: _data_aws_lambda_function__environment[]
    function_name: rstring
    handler?: rstring
    invoke_arn?: rstring
    kms_key_arn?: rstring
    last_modified?: rstring
    layers?: rstring[]
    memory_size?: rnumber
    qualified_arn?: rstring
    qualifier?: rstring
    reserved_concurrent_executions?: rnumber
    role?: rstring
    runtime?: rstring
    source_code_hash?: rstring
    source_code_size?: rnumber
    timeout?: rnumber
    tracing_config?: _data_aws_lambda_function__tracing_config[]
    version?: rstring
    vpc_config?: _data_aws_lambda_function__vpc_config[]
}

export class data_aws_lambda_function implements Data {
    config: data_aws_lambda_function_config
    private _is_data: boolean = true
    private _name: string = "data_aws_lambda_function"
    private _id: string;
    constructor(id: string, config: data_aws_lambda_function_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_dead_letter_config(): Reference<_data_aws_lambda_function__dead_letter_config[]> {
        return new Reference(`data.${this._name}.${this._id}.dead_letter_config`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_environment(): Reference<_data_aws_lambda_function__environment[]> {
        return new Reference(`data.${this._name}.${this._id}.environment`)
  }
    get ref_function_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.function_name`)
  }
    get ref_handler(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.handler`)
  }
    get ref_invoke_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.invoke_arn`)
  }
    get ref_kms_key_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_arn`)
  }
    get ref_last_modified(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.last_modified`)
  }
    get ref_layers(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.layers`)
  }
    get ref_memory_size(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.memory_size`)
  }
    get ref_qualified_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.qualified_arn`)
  }
    get ref_qualifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.qualifier`)
  }
    get ref_reserved_concurrent_executions(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.reserved_concurrent_executions`)
  }
    get ref_role(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.role`)
  }
    get ref_runtime(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.runtime`)
  }
    get ref_source_code_hash(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.source_code_hash`)
  }
    get ref_source_code_size(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.source_code_size`)
  }
    get ref_timeout(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.timeout`)
  }
    get ref_tracing_config(): Reference<_data_aws_lambda_function__tracing_config[]> {
        return new Reference(`data.${this._name}.${this._id}.tracing_config`)
  }
    get ref_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.version`)
  }
    get ref_vpc_config(): Reference<_data_aws_lambda_function__vpc_config[]> {
        return new Reference(`data.${this._name}.${this._id}.vpc_config`)
  }
}

export interface data_aws_lambda_invocation_config {
    function_name: rstring
    input: rstring
    qualifier?: rstring
    result?: rstring
    result_map?: {[propName: string]: rstring}
}

export class data_aws_lambda_invocation implements Data {
    config: data_aws_lambda_invocation_config
    private _is_data: boolean = true
    private _name: string = "data_aws_lambda_invocation"
    private _id: string;
    constructor(id: string, config: data_aws_lambda_invocation_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_function_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.function_name`)
  }
    get ref_input(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.input`)
  }
    get ref_qualifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.qualifier`)
  }
    get ref_result(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.result`)
  }
    get ref_result_map(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.result_map`)
  }
}

export interface _data_aws_launch_configuration__ebs_block_device {
    delete_on_termination?: rboolean
    device_name?: rstring
    encrypted?: rboolean
    iops?: rnumber
    snapshot_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _data_aws_launch_configuration__ephemeral_block_device {
    device_name?: rstring
    virtual_name?: rstring
}

export interface _data_aws_launch_configuration__root_block_device {
    delete_on_termination?: rboolean
    iops?: rnumber
    volume_size?: rnumber
    volume_type?: rstring
}

export interface data_aws_launch_configuration_config {
    associate_public_ip_address?: rboolean
    ebs_block_device?: _data_aws_launch_configuration__ebs_block_device[]
    ebs_optimized?: rboolean
    enable_monitoring?: rboolean
    ephemeral_block_device?: _data_aws_launch_configuration__ephemeral_block_device[]
    iam_instance_profile?: rstring
    image_id?: rstring
    instance_type?: rstring
    key_name?: rstring
    name: rstring
    placement_tenancy?: rstring
    root_block_device?: _data_aws_launch_configuration__root_block_device[]
    security_groups?: rstring[]
    spot_price?: rstring
    user_data?: rstring
    vpc_classic_link_id?: rstring
    vpc_classic_link_security_groups?: rstring[]
}

export class data_aws_launch_configuration implements Data {
    config: data_aws_launch_configuration_config
    private _is_data: boolean = true
    private _name: string = "data_aws_launch_configuration"
    private _id: string;
    constructor(id: string, config: data_aws_launch_configuration_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_associate_public_ip_address(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.associate_public_ip_address`)
  }
    get ref_ebs_block_device(): Reference<_data_aws_launch_configuration__ebs_block_device[]> {
        return new Reference(`data.${this._name}.${this._id}.ebs_block_device`)
  }
    get ref_ebs_optimized(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.ebs_optimized`)
  }
    get ref_enable_monitoring(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.enable_monitoring`)
  }
    get ref_ephemeral_block_device(): Reference<_data_aws_launch_configuration__ephemeral_block_device[]> {
        return new Reference(`data.${this._name}.${this._id}.ephemeral_block_device`)
  }
    get ref_iam_instance_profile(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.iam_instance_profile`)
  }
    get ref_image_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.image_id`)
  }
    get ref_instance_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.instance_type`)
  }
    get ref_key_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.key_name`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_placement_tenancy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.placement_tenancy`)
  }
    get ref_root_block_device(): Reference<_data_aws_launch_configuration__root_block_device[]> {
        return new Reference(`data.${this._name}.${this._id}.root_block_device`)
  }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_groups`)
  }
    get ref_spot_price(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.spot_price`)
  }
    get ref_user_data(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.user_data`)
  }
    get ref_vpc_classic_link_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_classic_link_id`)
  }
    get ref_vpc_classic_link_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.vpc_classic_link_security_groups`)
  }
}

export interface __data_aws_launch_template__block_device_mappings__ebs {
    delete_on_termination?: rstring
    encrypted?: rstring
    iops?: rnumber
    kms_key_id?: rstring
    snapshot_id?: rstring
    volume_size?: rnumber
    volume_type?: rstring
}

export interface _data_aws_launch_template__block_device_mappings {
    device_name?: rstring
    ebs?: __data_aws_launch_template__block_device_mappings__ebs[]
    no_device?: rstring
    virtual_name?: rstring
}

export interface _data_aws_launch_template__credit_specification {
    cpu_credits?: rstring
}

export interface _data_aws_launch_template__elastic_gpu_specifications {
    type: rstring
}

export interface _data_aws_launch_template__iam_instance_profile {
    arn?: rstring
    name?: rstring
}

export interface __data_aws_launch_template__instance_market_options__spot_options {
    block_duration_minutes?: rnumber
    instance_interruption_behavior?: rstring
    max_price?: rstring
    spot_instance_type?: rstring
    valid_until?: rstring
}

export interface _data_aws_launch_template__instance_market_options {
    market_type?: rstring
    spot_options?: __data_aws_launch_template__instance_market_options__spot_options[]
}

export interface _data_aws_launch_template__monitoring {
    enabled?: rboolean
}

export interface _data_aws_launch_template__network_interfaces {
    associate_public_ip_address?: rboolean
    delete_on_termination?: rboolean
    description?: rstring
    device_index?: rnumber
    ipv4_address_count?: rnumber
    ipv4_addresses?: rstring[]
    ipv6_address_count?: rnumber
    ipv6_addresses?: rstring[]
    network_interface_id?: rstring
    private_ip_address?: rstring
    security_groups?: rstring[]
    subnet_id?: rstring
}

export interface _data_aws_launch_template__placement {
    affinity?: rstring
    availability_zone?: rstring
    group_name?: rstring
    host_id?: rstring
    spread_domain?: rstring
    tenancy?: rstring
}

export interface _data_aws_launch_template__tag_specifications {
    resource_type?: rstring
    tags?: {[propName: string]: rstring}
}

export interface data_aws_launch_template_config {
    arn?: rstring
    block_device_mappings?: _data_aws_launch_template__block_device_mappings[]
    credit_specification?: _data_aws_launch_template__credit_specification[]
    default_version?: rnumber
    description?: rstring
    disable_api_termination?: rboolean
    ebs_optimized?: rstring
    elastic_gpu_specifications?: _data_aws_launch_template__elastic_gpu_specifications[]
    iam_instance_profile?: _data_aws_launch_template__iam_instance_profile[]
    image_id?: rstring
    instance_initiated_shutdown_behavior?: rstring
    instance_market_options?: _data_aws_launch_template__instance_market_options[]
    instance_type?: rstring
    kernel_id?: rstring
    key_name?: rstring
    latest_version?: rnumber
    monitoring?: _data_aws_launch_template__monitoring[]
    name: rstring
    network_interfaces?: _data_aws_launch_template__network_interfaces[]
    placement?: _data_aws_launch_template__placement[]
    ram_disk_id?: rstring
    security_group_names?: rstring[]
    tag_specifications?: _data_aws_launch_template__tag_specifications[]
    tags?: {[propName: string]: rstring}
    user_data?: rstring
    vpc_security_group_ids?: rstring[]
}

export class data_aws_launch_template implements Data {
    config: data_aws_launch_template_config
    private _is_data: boolean = true
    private _name: string = "data_aws_launch_template"
    private _id: string;
    constructor(id: string, config: data_aws_launch_template_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_block_device_mappings(): Reference<_data_aws_launch_template__block_device_mappings[]> {
        return new Reference(`data.${this._name}.${this._id}.block_device_mappings`)
  }
    get ref_credit_specification(): Reference<_data_aws_launch_template__credit_specification[]> {
        return new Reference(`data.${this._name}.${this._id}.credit_specification`)
  }
    get ref_default_version(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.default_version`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_disable_api_termination(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.disable_api_termination`)
  }
    get ref_ebs_optimized(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ebs_optimized`)
  }
    get ref_elastic_gpu_specifications(): Reference<_data_aws_launch_template__elastic_gpu_specifications[]> {
        return new Reference(`data.${this._name}.${this._id}.elastic_gpu_specifications`)
  }
    get ref_iam_instance_profile(): Reference<_data_aws_launch_template__iam_instance_profile[]> {
        return new Reference(`data.${this._name}.${this._id}.iam_instance_profile`)
  }
    get ref_image_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.image_id`)
  }
    get ref_instance_initiated_shutdown_behavior(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.instance_initiated_shutdown_behavior`)
  }
    get ref_instance_market_options(): Reference<_data_aws_launch_template__instance_market_options[]> {
        return new Reference(`data.${this._name}.${this._id}.instance_market_options`)
  }
    get ref_instance_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.instance_type`)
  }
    get ref_kernel_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kernel_id`)
  }
    get ref_key_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.key_name`)
  }
    get ref_latest_version(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.latest_version`)
  }
    get ref_monitoring(): Reference<_data_aws_launch_template__monitoring[]> {
        return new Reference(`data.${this._name}.${this._id}.monitoring`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_network_interfaces(): Reference<_data_aws_launch_template__network_interfaces[]> {
        return new Reference(`data.${this._name}.${this._id}.network_interfaces`)
  }
    get ref_placement(): Reference<_data_aws_launch_template__placement[]> {
        return new Reference(`data.${this._name}.${this._id}.placement`)
  }
    get ref_ram_disk_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ram_disk_id`)
  }
    get ref_security_group_names(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_group_names`)
  }
    get ref_tag_specifications(): Reference<_data_aws_launch_template__tag_specifications[]> {
        return new Reference(`data.${this._name}.${this._id}.tag_specifications`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_user_data(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.user_data`)
  }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.vpc_security_group_ids`)
  }
}

export interface _data_aws_lb__access_logs {
    bucket?: rstring
    enabled?: rboolean
    prefix?: rstring
}

export interface _data_aws_lb__subnet_mapping {
    allocation_id?: rstring
    subnet_id: rstring
}

export interface data_aws_lb_config {
    access_logs?: _data_aws_lb__access_logs[]
    arn?: rstring
    arn_suffix?: rstring
    dns_name?: rstring
    enable_deletion_protection?: rboolean
    idle_timeout?: rnumber
    internal?: rboolean
    load_balancer_type?: rstring
    name?: rstring
    security_groups?: rstring[]
    subnet_mapping?: _data_aws_lb__subnet_mapping[]
    subnets?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
    zone_id?: rstring
}

export class data_aws_lb implements Data {
    config: data_aws_lb_config
    private _is_data: boolean = true
    private _name: string = "data_aws_lb"
    private _id: string;
    constructor(id: string, config: data_aws_lb_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_access_logs(): Reference<_data_aws_lb__access_logs[]> {
        return new Reference(`data.${this._name}.${this._id}.access_logs`)
  }
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_arn_suffix(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn_suffix`)
  }
    get ref_dns_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.dns_name`)
  }
    get ref_enable_deletion_protection(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.enable_deletion_protection`)
  }
    get ref_idle_timeout(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.idle_timeout`)
  }
    get ref_internal(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.internal`)
  }
    get ref_load_balancer_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.load_balancer_type`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_groups`)
  }
    get ref_subnet_mapping(): Reference<_data_aws_lb__subnet_mapping[]> {
        return new Reference(`data.${this._name}.${this._id}.subnet_mapping`)
  }
    get ref_subnets(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.subnets`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
    get ref_zone_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.zone_id`)
  }
}

export interface __data_aws_lb_listener__default_action__authenticate_cognito {
    authentication_request_extra_params?: {[propName: string]: rstring}
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    user_pool_arn?: rstring
    user_pool_client_id?: rstring
    user_pool_domain?: rstring
}

export interface __data_aws_lb_listener__default_action__authenticate_oidc {
    authentication_request_extra_params?: {[propName: string]: rstring}
    authorization_endpoint?: rstring
    client_id?: rstring
    client_secret?: rstring
    issuer?: rstring
    on_unauthenticated_request?: rstring
    scope?: rstring
    session_cookie_name?: rstring
    session_timeout?: rnumber
    token_endpoint?: rstring
    user_info_endpoint?: rstring
}

export interface __data_aws_lb_listener__default_action__fixed_response {
    content_type?: rstring
    message_body?: rstring
    status_code?: rstring
}

export interface __data_aws_lb_listener__default_action__redirect {
    host?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    query?: rstring
    status_code?: rstring
}

export interface _data_aws_lb_listener__default_action {
    authenticate_cognito?: __data_aws_lb_listener__default_action__authenticate_cognito[]
    authenticate_oidc?: __data_aws_lb_listener__default_action__authenticate_oidc[]
    fixed_response?: __data_aws_lb_listener__default_action__fixed_response[]
    order?: rnumber
    redirect?: __data_aws_lb_listener__default_action__redirect[]
    target_group_arn?: rstring
    type?: rstring
}

export interface data_aws_lb_listener_config {
    arn?: rstring
    certificate_arn?: rstring
    default_action?: _data_aws_lb_listener__default_action[]
    load_balancer_arn?: rstring
    port?: rnumber
    protocol?: rstring
    ssl_policy?: rstring
}

export class data_aws_lb_listener implements Data {
    config: data_aws_lb_listener_config
    private _is_data: boolean = true
    private _name: string = "data_aws_lb_listener"
    private _id: string;
    constructor(id: string, config: data_aws_lb_listener_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_certificate_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.certificate_arn`)
  }
    get ref_default_action(): Reference<_data_aws_lb_listener__default_action[]> {
        return new Reference(`data.${this._name}.${this._id}.default_action`)
  }
    get ref_load_balancer_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.load_balancer_arn`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_protocol(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.protocol`)
  }
    get ref_ssl_policy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ssl_policy`)
  }
}

export interface _data_aws_lb_target_group__health_check {
    healthy_threshold?: rnumber
    interval?: rnumber
    matcher?: rstring
    path?: rstring
    port?: rstring
    protocol?: rstring
    timeout?: rnumber
    unhealthy_threshold?: rnumber
}

export interface _data_aws_lb_target_group__stickiness {
    cookie_duration?: rnumber
    enabled?: rboolean
    type?: rstring
}

export interface data_aws_lb_target_group_config {
    arn?: rstring
    arn_suffix?: rstring
    deregistration_delay?: rnumber
    health_check?: _data_aws_lb_target_group__health_check[]
    name?: rstring
    port?: rnumber
    protocol?: rstring
    slow_start?: rnumber
    stickiness?: _data_aws_lb_target_group__stickiness[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_lb_target_group implements Data {
    config: data_aws_lb_target_group_config
    private _is_data: boolean = true
    private _name: string = "data_aws_lb_target_group"
    private _id: string;
    constructor(id: string, config: data_aws_lb_target_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_arn_suffix(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn_suffix`)
  }
    get ref_deregistration_delay(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.deregistration_delay`)
  }
    get ref_health_check(): Reference<_data_aws_lb_target_group__health_check[]> {
        return new Reference(`data.${this._name}.${this._id}.health_check`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_protocol(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.protocol`)
  }
    get ref_slow_start(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.slow_start`)
  }
    get ref_stickiness(): Reference<_data_aws_lb_target_group__stickiness[]> {
        return new Reference(`data.${this._name}.${this._id}.stickiness`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_mq_broker__configuration {
    id?: rstring
    revision?: rnumber
}

export interface _data_aws_mq_broker__instances {
    console_url?: rstring
    endpoints?: rstring[]
    ip_address?: rstring
}

export interface _data_aws_mq_broker__logs {
    audit?: rboolean
    general?: rboolean
}

export interface _data_aws_mq_broker__maintenance_window_start_time {
    day_of_week?: rstring
    time_of_day?: rstring
    time_zone?: rstring
}

export interface _data_aws_mq_broker__user {
    console_access?: rboolean
    groups?: rstring[]
    username: rstring
}

export interface data_aws_mq_broker_config {
    arn?: rstring
    auto_minor_version_upgrade?: rboolean
    broker_id?: rstring
    broker_name?: rstring
    configuration?: _data_aws_mq_broker__configuration[]
    deployment_mode?: rstring
    engine_type?: rstring
    engine_version?: rstring
    host_instance_type?: rstring
    instances?: _data_aws_mq_broker__instances[]
    logs?: _data_aws_mq_broker__logs[]
    maintenance_window_start_time?: _data_aws_mq_broker__maintenance_window_start_time[]
    publicly_accessible?: rboolean
    security_groups?: rstring[]
    subnet_ids?: rstring[]
    tags?: {[propName: string]: rstring}
    user?: _data_aws_mq_broker__user[]
}

export class data_aws_mq_broker implements Data {
    config: data_aws_mq_broker_config
    private _is_data: boolean = true
    private _name: string = "data_aws_mq_broker"
    private _id: string;
    constructor(id: string, config: data_aws_mq_broker_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_auto_minor_version_upgrade(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.auto_minor_version_upgrade`)
  }
    get ref_broker_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.broker_id`)
  }
    get ref_broker_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.broker_name`)
  }
    get ref_configuration(): Reference<_data_aws_mq_broker__configuration[]> {
        return new Reference(`data.${this._name}.${this._id}.configuration`)
  }
    get ref_deployment_mode(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.deployment_mode`)
  }
    get ref_engine_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine_type`)
  }
    get ref_engine_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine_version`)
  }
    get ref_host_instance_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.host_instance_type`)
  }
    get ref_instances(): Reference<_data_aws_mq_broker__instances[]> {
        return new Reference(`data.${this._name}.${this._id}.instances`)
  }
    get ref_logs(): Reference<_data_aws_mq_broker__logs[]> {
        return new Reference(`data.${this._name}.${this._id}.logs`)
  }
    get ref_maintenance_window_start_time(): Reference<_data_aws_mq_broker__maintenance_window_start_time[]> {
        return new Reference(`data.${this._name}.${this._id}.maintenance_window_start_time`)
  }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.publicly_accessible`)
  }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_groups`)
  }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.subnet_ids`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_user(): Reference<_data_aws_mq_broker__user[]> {
        return new Reference(`data.${this._name}.${this._id}.user`)
  }
}

export interface _data_aws_nat_gateway__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_nat_gateway_config {
    allocation_id?: rstring
    filter?: _data_aws_nat_gateway__filter[]
    id?: rstring
    network_interface_id?: rstring
    private_ip?: rstring
    public_ip?: rstring
    state?: rstring
    subnet_id?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_nat_gateway implements Data {
    config: data_aws_nat_gateway_config
    private _is_data: boolean = true
    private _name: string = "data_aws_nat_gateway"
    private _id: string;
    constructor(id: string, config: data_aws_nat_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allocation_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.allocation_id`)
  }
    get ref_filter(): Reference<_data_aws_nat_gateway__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.network_interface_id`)
  }
    get ref_private_ip(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.private_ip`)
  }
    get ref_public_ip(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.public_ip`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.subnet_id`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_network_acls__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_network_acls_config {
    filter?: _data_aws_network_acls__filter[]
    ids?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_network_acls implements Data {
    config: data_aws_network_acls_config
    private _is_data: boolean = true
    private _name: string = "data_aws_network_acls"
    private _id: string;
    constructor(id: string, config: data_aws_network_acls_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_filter(): Reference<_data_aws_network_acls__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_network_interface__association {
    allocation_id?: rstring
    association_id?: rstring
    ip_owner_id?: rstring
    public_dns_name?: rstring
    public_ip?: rstring
}

export interface _data_aws_network_interface__attachment {
    attachment_id?: rstring
    device_index?: rnumber
    instance_id?: rstring
    instance_owner_id?: rstring
}

export interface _data_aws_network_interface__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_network_interface_config {
    association?: _data_aws_network_interface__association[]
    attachment?: _data_aws_network_interface__attachment[]
    availability_zone?: rstring
    description?: rstring
    filter?: _data_aws_network_interface__filter[]
    id?: rstring
    interface_type?: rstring
    ipv6_addresses?: rstring[]
    mac_address?: rstring
    owner_id?: rstring
    private_dns_name?: rstring
    private_ip?: rstring
    private_ips?: rstring[]
    requester_id?: rstring
    security_groups?: rstring[]
    subnet_id?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_network_interface implements Data {
    config: data_aws_network_interface_config
    private _is_data: boolean = true
    private _name: string = "data_aws_network_interface"
    private _id: string;
    constructor(id: string, config: data_aws_network_interface_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_association(): Reference<_data_aws_network_interface__association[]> {
        return new Reference(`data.${this._name}.${this._id}.association`)
  }
    get ref_attachment(): Reference<_data_aws_network_interface__attachment[]> {
        return new Reference(`data.${this._name}.${this._id}.attachment`)
  }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_filter(): Reference<_data_aws_network_interface__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_interface_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.interface_type`)
  }
    get ref_ipv6_addresses(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ipv6_addresses`)
  }
    get ref_mac_address(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.mac_address`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_private_dns_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.private_dns_name`)
  }
    get ref_private_ip(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.private_ip`)
  }
    get ref_private_ips(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.private_ips`)
  }
    get ref_requester_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.requester_id`)
  }
    get ref_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_groups`)
  }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.subnet_id`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_network_interfaces__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_network_interfaces_config {
    filter?: _data_aws_network_interfaces__filter[]
    ids?: rstring[]
    tags?: {[propName: string]: rstring}
}

export class data_aws_network_interfaces implements Data {
    config: data_aws_network_interfaces_config
    private _is_data: boolean = true
    private _name: string = "data_aws_network_interfaces"
    private _id: string;
    constructor(id: string, config: data_aws_network_interfaces_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_filter(): Reference<_data_aws_network_interfaces__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface data_aws_partition_config {
    partition?: rstring
}

export class data_aws_partition implements Data {
    config: data_aws_partition_config
    private _is_data: boolean = true
    private _name: string = "data_aws_partition"
    private _id: string;
    constructor(id: string, config: data_aws_partition_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_partition(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.partition`)
  }
}

export interface data_aws_prefix_list_config {
    cidr_blocks?: rstring[]
    name?: rstring
    prefix_list_id?: rstring
}

export class data_aws_prefix_list implements Data {
    config: data_aws_prefix_list_config
    private _is_data: boolean = true
    private _name: string = "data_aws_prefix_list"
    private _id: string;
    constructor(id: string, config: data_aws_prefix_list_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cidr_blocks(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.cidr_blocks`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_prefix_list_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.prefix_list_id`)
  }
}

export interface _data_aws_pricing_product__filters {
    field: rstring
    value: rstring
}

export interface data_aws_pricing_product_config {
    filters: _data_aws_pricing_product__filters[]
    result?: rstring
    service_code: rstring
}

export class data_aws_pricing_product implements Data {
    config: data_aws_pricing_product_config
    private _is_data: boolean = true
    private _name: string = "data_aws_pricing_product"
    private _id: string;
    constructor(id: string, config: data_aws_pricing_product_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_filters(): Reference<_data_aws_pricing_product__filters[]> {
        return new Reference(`data.${this._name}.${this._id}.filters`)
  }
    get ref_result(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.result`)
  }
    get ref_service_code(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.service_code`)
  }
}

export interface data_aws_rds_cluster_config {
    arn?: rstring
    availability_zones?: rstring[]
    backup_retention_period?: rnumber
    cluster_identifier: rstring
    cluster_members?: rstring[]
    cluster_resource_id?: rstring
    database_name?: rstring
    db_cluster_parameter_group_name?: rstring
    db_subnet_group_name?: rstring
    enabled_cloudwatch_logs_exports?: rstring[]
    endpoint?: rstring
    engine?: rstring
    engine_version?: rstring
    final_snapshot_identifier?: rstring
    iam_database_authentication_enabled?: rboolean
    iam_roles?: rstring[]
    kms_key_id?: rstring
    master_username?: rstring
    port?: rnumber
    preferred_backup_window?: rstring
    preferred_maintenance_window?: rstring
    reader_endpoint?: rstring
    replication_source_identifier?: rstring
    storage_encrypted?: rboolean
    tags?: {[propName: string]: rstring}
    vpc_security_group_ids?: rstring[]
}

export class data_aws_rds_cluster implements Data {
    config: data_aws_rds_cluster_config
    private _is_data: boolean = true
    private _name: string = "data_aws_rds_cluster"
    private _id: string;
    constructor(id: string, config: data_aws_rds_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.availability_zones`)
  }
    get ref_backup_retention_period(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.backup_retention_period`)
  }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_identifier`)
  }
    get ref_cluster_members(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.cluster_members`)
  }
    get ref_cluster_resource_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_resource_id`)
  }
    get ref_database_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.database_name`)
  }
    get ref_db_cluster_parameter_group_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_cluster_parameter_group_name`)
  }
    get ref_db_subnet_group_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.db_subnet_group_name`)
  }
    get ref_enabled_cloudwatch_logs_exports(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.enabled_cloudwatch_logs_exports`)
  }
    get ref_endpoint(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.endpoint`)
  }
    get ref_engine(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine`)
  }
    get ref_engine_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.engine_version`)
  }
    get ref_final_snapshot_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.final_snapshot_identifier`)
  }
    get ref_iam_database_authentication_enabled(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.iam_database_authentication_enabled`)
  }
    get ref_iam_roles(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.iam_roles`)
  }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_id`)
  }
    get ref_master_username(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.master_username`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_preferred_backup_window(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.preferred_backup_window`)
  }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.preferred_maintenance_window`)
  }
    get ref_reader_endpoint(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.reader_endpoint`)
  }
    get ref_replication_source_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.replication_source_identifier`)
  }
    get ref_storage_encrypted(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.storage_encrypted`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.vpc_security_group_ids`)
  }
}

export interface data_aws_redshift_cluster_config {
    allow_version_upgrade?: rboolean
    automated_snapshot_retention_period?: rnumber
    availability_zone?: rstring
    bucket_name?: rstring
    cluster_identifier: rstring
    cluster_parameter_group_name?: rstring
    cluster_public_key?: rstring
    cluster_revision_number?: rstring
    cluster_security_groups?: rstring[]
    cluster_subnet_group_name?: rstring
    cluster_type?: rstring
    cluster_version?: rstring
    database_name?: rstring
    elastic_ip?: rstring
    enable_logging?: rboolean
    encrypted?: rboolean
    endpoint?: rstring
    enhanced_vpc_routing?: rboolean
    iam_roles?: rstring[]
    kms_key_id?: rstring
    master_username?: rstring
    node_type?: rstring
    number_of_nodes?: rnumber
    port?: rnumber
    preferred_maintenance_window?: rstring
    publicly_accessible?: rboolean
    s3_key_prefix?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
    vpc_security_group_ids?: rstring[]
}

export class data_aws_redshift_cluster implements Data {
    config: data_aws_redshift_cluster_config
    private _is_data: boolean = true
    private _name: string = "data_aws_redshift_cluster"
    private _id: string;
    constructor(id: string, config: data_aws_redshift_cluster_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_allow_version_upgrade(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.allow_version_upgrade`)
  }
    get ref_automated_snapshot_retention_period(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.automated_snapshot_retention_period`)
  }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone`)
  }
    get ref_bucket_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.bucket_name`)
  }
    get ref_cluster_identifier(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_identifier`)
  }
    get ref_cluster_parameter_group_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_parameter_group_name`)
  }
    get ref_cluster_public_key(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_public_key`)
  }
    get ref_cluster_revision_number(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_revision_number`)
  }
    get ref_cluster_security_groups(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.cluster_security_groups`)
  }
    get ref_cluster_subnet_group_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_subnet_group_name`)
  }
    get ref_cluster_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_type`)
  }
    get ref_cluster_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cluster_version`)
  }
    get ref_database_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.database_name`)
  }
    get ref_elastic_ip(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.elastic_ip`)
  }
    get ref_enable_logging(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.enable_logging`)
  }
    get ref_encrypted(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.encrypted`)
  }
    get ref_endpoint(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.endpoint`)
  }
    get ref_enhanced_vpc_routing(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.enhanced_vpc_routing`)
  }
    get ref_iam_roles(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.iam_roles`)
  }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_id`)
  }
    get ref_master_username(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.master_username`)
  }
    get ref_node_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.node_type`)
  }
    get ref_number_of_nodes(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.number_of_nodes`)
  }
    get ref_port(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.port`)
  }
    get ref_preferred_maintenance_window(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.preferred_maintenance_window`)
  }
    get ref_publicly_accessible(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.publicly_accessible`)
  }
    get ref_s3_key_prefix(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.s3_key_prefix`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
    get ref_vpc_security_group_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.vpc_security_group_ids`)
  }
}

export interface data_aws_redshift_service_account_config {
    arn?: rstring
    region?: rstring
}

export class data_aws_redshift_service_account implements Data {
    config: data_aws_redshift_service_account_config
    private _is_data: boolean = true
    private _name: string = "data_aws_redshift_service_account"
    private _id: string;
    constructor(id: string, config: data_aws_redshift_service_account_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.region`)
  }
}

export interface data_aws_region_config {
    current?: rboolean
    description?: rstring
    endpoint?: rstring
    name?: rstring
}

export class data_aws_region implements Data {
    config: data_aws_region_config
    private _is_data: boolean = true
    private _name: string = "data_aws_region"
    private _id: string;
    constructor(id: string, config: data_aws_region_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_current(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.current`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_endpoint(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.endpoint`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
}

export interface data_aws_route_config {
    destination_cidr_block?: rstring
    destination_ipv6_cidr_block?: rstring
    egress_only_gateway_id?: rstring
    gateway_id?: rstring
    instance_id?: rstring
    nat_gateway_id?: rstring
    network_interface_id?: rstring
    route_table_id: rstring
    transit_gateway_id?: rstring
    vpc_peering_connection_id?: rstring
}

export class data_aws_route implements Data {
    config: data_aws_route_config
    private _is_data: boolean = true
    private _name: string = "data_aws_route"
    private _id: string;
    constructor(id: string, config: data_aws_route_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_destination_cidr_block(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.destination_cidr_block`)
  }
    get ref_destination_ipv6_cidr_block(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.destination_ipv6_cidr_block`)
  }
    get ref_egress_only_gateway_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.egress_only_gateway_id`)
  }
    get ref_gateway_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.gateway_id`)
  }
    get ref_instance_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.instance_id`)
  }
    get ref_nat_gateway_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.nat_gateway_id`)
  }
    get ref_network_interface_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.network_interface_id`)
  }
    get ref_route_table_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.route_table_id`)
  }
    get ref_transit_gateway_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.transit_gateway_id`)
  }
    get ref_vpc_peering_connection_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_peering_connection_id`)
  }
}

export interface data_aws_route53_delegation_set_config {
    caller_reference?: rstring
    id: rstring
    name_servers?: rstring[]
}

export class data_aws_route53_delegation_set implements Data {
    config: data_aws_route53_delegation_set_config
    private _is_data: boolean = true
    private _name: string = "data_aws_route53_delegation_set"
    private _id: string;
    constructor(id: string, config: data_aws_route53_delegation_set_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_caller_reference(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.caller_reference`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_name_servers(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.name_servers`)
  }
}

export interface data_aws_route53_zone_config {
    caller_reference?: rstring
    comment?: rstring
    name?: rstring
    name_servers?: rstring[]
    private_zone?: rboolean
    resource_record_set_count?: rnumber
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
    zone_id?: rstring
}

export class data_aws_route53_zone implements Data {
    config: data_aws_route53_zone_config
    private _is_data: boolean = true
    private _name: string = "data_aws_route53_zone"
    private _id: string;
    constructor(id: string, config: data_aws_route53_zone_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_caller_reference(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.caller_reference`)
  }
    get ref_comment(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.comment`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_name_servers(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.name_servers`)
  }
    get ref_private_zone(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.private_zone`)
  }
    get ref_resource_record_set_count(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.resource_record_set_count`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
    get ref_zone_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.zone_id`)
  }
}

export interface _data_aws_route_table__associations {
    main?: rboolean
    route_table_association_id?: rstring
    route_table_id?: rstring
    subnet_id?: rstring
}

export interface _data_aws_route_table__filter {
    name: rstring
    values: rstring[]
}

export interface _data_aws_route_table__routes {
    cidr_block?: rstring
    egress_only_gateway_id?: rstring
    gateway_id?: rstring
    instance_id?: rstring
    ipv6_cidr_block?: rstring
    nat_gateway_id?: rstring
    network_interface_id?: rstring
    transit_gateway_id?: rstring
    vpc_peering_connection_id?: rstring
}

export interface data_aws_route_table_config {
    associations?: _data_aws_route_table__associations[]
    filter?: _data_aws_route_table__filter[]
    owner_id?: rstring
    route_table_id?: rstring
    routes?: _data_aws_route_table__routes[]
    subnet_id?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_route_table implements Data {
    config: data_aws_route_table_config
    private _is_data: boolean = true
    private _name: string = "data_aws_route_table"
    private _id: string;
    constructor(id: string, config: data_aws_route_table_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_associations(): Reference<_data_aws_route_table__associations[]> {
        return new Reference(`data.${this._name}.${this._id}.associations`)
  }
    get ref_filter(): Reference<_data_aws_route_table__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_route_table_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.route_table_id`)
  }
    get ref_routes(): Reference<_data_aws_route_table__routes[]> {
        return new Reference(`data.${this._name}.${this._id}.routes`)
  }
    get ref_subnet_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.subnet_id`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_route_tables__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_route_tables_config {
    filter?: _data_aws_route_tables__filter[]
    ids?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_route_tables implements Data {
    config: data_aws_route_tables_config
    private _is_data: boolean = true
    private _name: string = "data_aws_route_tables"
    private _id: string;
    constructor(id: string, config: data_aws_route_tables_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_filter(): Reference<_data_aws_route_tables__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface data_aws_s3_bucket_config {
    arn?: rstring
    bucket: rstring
    bucket_domain_name?: rstring
    hosted_zone_id?: rstring
    region?: rstring
    website_domain?: rstring
    website_endpoint?: rstring
}

export class data_aws_s3_bucket implements Data {
    config: data_aws_s3_bucket_config
    private _is_data: boolean = true
    private _name: string = "data_aws_s3_bucket"
    private _id: string;
    constructor(id: string, config: data_aws_s3_bucket_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_bucket(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.bucket`)
  }
    get ref_bucket_domain_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.bucket_domain_name`)
  }
    get ref_hosted_zone_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.hosted_zone_id`)
  }
    get ref_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.region`)
  }
    get ref_website_domain(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.website_domain`)
  }
    get ref_website_endpoint(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.website_endpoint`)
  }
}

export interface data_aws_s3_bucket_object_config {
    body?: rstring
    bucket: rstring
    cache_control?: rstring
    content_disposition?: rstring
    content_encoding?: rstring
    content_language?: rstring
    content_length?: rnumber
    content_type?: rstring
    etag?: rstring
    expiration?: rstring
    expires?: rstring
    key: rstring
    last_modified?: rstring
    metadata?: {[propName: string]: rstring}
    range?: rstring
    server_side_encryption?: rstring
    sse_kms_key_id?: rstring
    storage_class?: rstring
    tags?: {[propName: string]: rstring}
    version_id?: rstring
    website_redirect_location?: rstring
}

export class data_aws_s3_bucket_object implements Data {
    config: data_aws_s3_bucket_object_config
    private _is_data: boolean = true
    private _name: string = "data_aws_s3_bucket_object"
    private _id: string;
    constructor(id: string, config: data_aws_s3_bucket_object_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_body(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.body`)
  }
    get ref_bucket(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.bucket`)
  }
    get ref_cache_control(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cache_control`)
  }
    get ref_content_disposition(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.content_disposition`)
  }
    get ref_content_encoding(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.content_encoding`)
  }
    get ref_content_language(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.content_language`)
  }
    get ref_content_length(): Reference<number> {
        return new Reference(`data.${this._name}.${this._id}.content_length`)
  }
    get ref_content_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.content_type`)
  }
    get ref_etag(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.etag`)
  }
    get ref_expiration(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.expiration`)
  }
    get ref_expires(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.expires`)
  }
    get ref_key(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.key`)
  }
    get ref_last_modified(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.last_modified`)
  }
    get ref_metadata(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.metadata`)
  }
    get ref_range(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.range`)
  }
    get ref_server_side_encryption(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.server_side_encryption`)
  }
    get ref_sse_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.sse_kms_key_id`)
  }
    get ref_storage_class(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.storage_class`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_version_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.version_id`)
  }
    get ref_website_redirect_location(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.website_redirect_location`)
  }
}

export interface _data_aws_secretsmanager_secret__rotation_rules {
    automatically_after_days?: rnumber
}

export interface data_aws_secretsmanager_secret_config {
    arn?: rstring
    description?: rstring
    kms_key_id?: rstring
    name?: rstring
    policy?: rstring
    rotation_enabled?: rboolean
    rotation_lambda_arn?: rstring
    rotation_rules?: _data_aws_secretsmanager_secret__rotation_rules[]
    tags?: {[propName: string]: rstring}
}

export class data_aws_secretsmanager_secret implements Data {
    config: data_aws_secretsmanager_secret_config
    private _is_data: boolean = true
    private _name: string = "data_aws_secretsmanager_secret"
    private _id: string;
    constructor(id: string, config: data_aws_secretsmanager_secret_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_kms_key_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.kms_key_id`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_policy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.policy`)
  }
    get ref_rotation_enabled(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.rotation_enabled`)
  }
    get ref_rotation_lambda_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.rotation_lambda_arn`)
  }
    get ref_rotation_rules(): Reference<_data_aws_secretsmanager_secret__rotation_rules[]> {
        return new Reference(`data.${this._name}.${this._id}.rotation_rules`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface data_aws_secretsmanager_secret_version_config {
    arn?: rstring
    secret_binary?: rstring
    secret_id: rstring
    secret_string?: rstring
    version_id?: rstring
    version_stage?: rstring
    version_stages?: rstring[]
}

export class data_aws_secretsmanager_secret_version implements Data {
    config: data_aws_secretsmanager_secret_version_config
    private _is_data: boolean = true
    private _name: string = "data_aws_secretsmanager_secret_version"
    private _id: string;
    constructor(id: string, config: data_aws_secretsmanager_secret_version_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_secret_binary(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.secret_binary`)
  }
    get ref_secret_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.secret_id`)
  }
    get ref_secret_string(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.secret_string`)
  }
    get ref_version_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.version_id`)
  }
    get ref_version_stage(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.version_stage`)
  }
    get ref_version_stages(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.version_stages`)
  }
}

export interface _data_aws_security_group__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_security_group_config {
    arn?: rstring
    description?: rstring
    filter?: _data_aws_security_group__filter[]
    id?: rstring
    name?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_security_group implements Data {
    config: data_aws_security_group_config
    private _is_data: boolean = true
    private _name: string = "data_aws_security_group"
    private _id: string;
    constructor(id: string, config: data_aws_security_group_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_filter(): Reference<_data_aws_security_group__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_security_groups__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_security_groups_config {
    filter?: _data_aws_security_groups__filter[]
    ids?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_ids?: rstring[]
}

export class data_aws_security_groups implements Data {
    config: data_aws_security_groups_config
    private _is_data: boolean = true
    private _name: string = "data_aws_security_groups"
    private _id: string;
    constructor(id: string, config: data_aws_security_groups_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_filter(): Reference<_data_aws_security_groups__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.vpc_ids`)
  }
}

export interface data_aws_sns_topic_config {
    arn?: rstring
    name: rstring
}

export class data_aws_sns_topic implements Data {
    config: data_aws_sns_topic_config
    private _is_data: boolean = true
    private _name: string = "data_aws_sns_topic"
    private _id: string;
    constructor(id: string, config: data_aws_sns_topic_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
}

export interface data_aws_sqs_queue_config {
    arn?: rstring
    name: rstring
    url?: rstring
}

export class data_aws_sqs_queue implements Data {
    config: data_aws_sqs_queue_config
    private _is_data: boolean = true
    private _name: string = "data_aws_sqs_queue"
    private _id: string;
    constructor(id: string, config: data_aws_sqs_queue_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_url(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.url`)
  }
}

export interface data_aws_ssm_document_config {
    arn?: rstring
    content?: rstring
    document_format?: rstring
    document_type?: rstring
    document_version?: rstring
    name: rstring
}

export class data_aws_ssm_document implements Data {
    config: data_aws_ssm_document_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ssm_document"
    private _id: string;
    constructor(id: string, config: data_aws_ssm_document_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_content(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.content`)
  }
    get ref_document_format(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.document_format`)
  }
    get ref_document_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.document_type`)
  }
    get ref_document_version(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.document_version`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
}

export interface data_aws_ssm_parameter_config {
    arn?: rstring
    name: rstring
    type?: rstring
    value?: rstring
    with_decryption?: rboolean
}

export class data_aws_ssm_parameter implements Data {
    config: data_aws_ssm_parameter_config
    private _is_data: boolean = true
    private _name: string = "data_aws_ssm_parameter"
    private _id: string;
    constructor(id: string, config: data_aws_ssm_parameter_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.type`)
  }
    get ref_value(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.value`)
  }
    get ref_with_decryption(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.with_decryption`)
  }
}

export interface data_aws_storagegateway_local_disk_config {
    disk_id?: rstring
    disk_node?: rstring
    disk_path?: rstring
    gateway_arn: rstring
}

export class data_aws_storagegateway_local_disk implements Data {
    config: data_aws_storagegateway_local_disk_config
    private _is_data: boolean = true
    private _name: string = "data_aws_storagegateway_local_disk"
    private _id: string;
    constructor(id: string, config: data_aws_storagegateway_local_disk_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_disk_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.disk_id`)
  }
    get ref_disk_node(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.disk_node`)
  }
    get ref_disk_path(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.disk_path`)
  }
    get ref_gateway_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.gateway_arn`)
  }
}

export interface _data_aws_subnet__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_subnet_config {
    arn?: rstring
    assign_ipv6_address_on_creation?: rboolean
    availability_zone?: rstring
    availability_zone_id?: rstring
    cidr_block?: rstring
    default_for_az?: rboolean
    filter?: _data_aws_subnet__filter[]
    id?: rstring
    ipv6_cidr_block?: rstring
    ipv6_cidr_block_association_id?: rstring
    map_public_ip_on_launch?: rboolean
    owner_id?: rstring
    state?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_subnet implements Data {
    config: data_aws_subnet_config
    private _is_data: boolean = true
    private _name: string = "data_aws_subnet"
    private _id: string;
    constructor(id: string, config: data_aws_subnet_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_assign_ipv6_address_on_creation(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.assign_ipv6_address_on_creation`)
  }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone`)
  }
    get ref_availability_zone_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone_id`)
  }
    get ref_cidr_block(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cidr_block`)
  }
    get ref_default_for_az(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.default_for_az`)
  }
    get ref_filter(): Reference<_data_aws_subnet__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_ipv6_cidr_block(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ipv6_cidr_block`)
  }
    get ref_ipv6_cidr_block_association_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ipv6_cidr_block_association_id`)
  }
    get ref_map_public_ip_on_launch(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.map_public_ip_on_launch`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_subnet_ids__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_subnet_ids_config {
    filter?: _data_aws_subnet_ids__filter[]
    ids?: rstring[]
    tags?: {[propName: string]: rstring}
    vpc_id: rstring
}

export class data_aws_subnet_ids implements Data {
    config: data_aws_subnet_ids_config
    private _is_data: boolean = true
    private _name: string = "data_aws_subnet_ids"
    private _id: string;
    constructor(id: string, config: data_aws_subnet_ids_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_filter(): Reference<_data_aws_subnet_ids__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_vpc__cidr_block_associations {
    association_id?: rstring
    cidr_block?: rstring
    state?: rstring
}

export interface _data_aws_vpc__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_vpc_config {
    arn?: rstring
    cidr_block?: rstring
    cidr_block_associations?: _data_aws_vpc__cidr_block_associations[]
    default?: rboolean
    dhcp_options_id?: rstring
    enable_dns_hostnames?: rboolean
    enable_dns_support?: rboolean
    filter?: _data_aws_vpc__filter[]
    id?: rstring
    instance_tenancy?: rstring
    ipv6_association_id?: rstring
    ipv6_cidr_block?: rstring
    main_route_table_id?: rstring
    owner_id?: rstring
    state?: rstring
    tags?: {[propName: string]: rstring}
}

export class data_aws_vpc implements Data {
    config: data_aws_vpc_config
    private _is_data: boolean = true
    private _name: string = "data_aws_vpc"
    private _id: string;
    constructor(id: string, config: data_aws_vpc_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_arn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.arn`)
  }
    get ref_cidr_block(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cidr_block`)
  }
    get ref_cidr_block_associations(): Reference<_data_aws_vpc__cidr_block_associations[]> {
        return new Reference(`data.${this._name}.${this._id}.cidr_block_associations`)
  }
    get ref_default(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.default`)
  }
    get ref_dhcp_options_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.dhcp_options_id`)
  }
    get ref_enable_dns_hostnames(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.enable_dns_hostnames`)
  }
    get ref_enable_dns_support(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.enable_dns_support`)
  }
    get ref_filter(): Reference<_data_aws_vpc__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_instance_tenancy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.instance_tenancy`)
  }
    get ref_ipv6_association_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ipv6_association_id`)
  }
    get ref_ipv6_cidr_block(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.ipv6_cidr_block`)
  }
    get ref_main_route_table_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.main_route_table_id`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface _data_aws_vpc_dhcp_options__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_vpc_dhcp_options_config {
    dhcp_options_id?: rstring
    domain_name?: rstring
    domain_name_servers?: rstring[]
    filter?: _data_aws_vpc_dhcp_options__filter[]
    netbios_name_servers?: rstring[]
    netbios_node_type?: rstring
    ntp_servers?: rstring[]
    owner_id?: rstring
    tags?: {[propName: string]: rstring}
}

export class data_aws_vpc_dhcp_options implements Data {
    config: data_aws_vpc_dhcp_options_config
    private _is_data: boolean = true
    private _name: string = "data_aws_vpc_dhcp_options"
    private _id: string;
    constructor(id: string, config: data_aws_vpc_dhcp_options_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_dhcp_options_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.dhcp_options_id`)
  }
    get ref_domain_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.domain_name`)
  }
    get ref_domain_name_servers(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.domain_name_servers`)
  }
    get ref_filter(): Reference<_data_aws_vpc_dhcp_options__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_netbios_name_servers(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.netbios_name_servers`)
  }
    get ref_netbios_node_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.netbios_node_type`)
  }
    get ref_ntp_servers(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ntp_servers`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface _data_aws_vpc_endpoint__dns_entry {
    dns_name?: rstring
    hosted_zone_id?: rstring
}

export interface data_aws_vpc_endpoint_config {
    cidr_blocks?: rstring[]
    dns_entry?: _data_aws_vpc_endpoint__dns_entry[]
    id?: rstring
    network_interface_ids?: rstring[]
    policy?: rstring
    prefix_list_id?: rstring
    private_dns_enabled?: rboolean
    route_table_ids?: rstring[]
    security_group_ids?: rstring[]
    service_name?: rstring
    state?: rstring
    subnet_ids?: rstring[]
    vpc_endpoint_type?: rstring
    vpc_id?: rstring
}

export class data_aws_vpc_endpoint implements Data {
    config: data_aws_vpc_endpoint_config
    private _is_data: boolean = true
    private _name: string = "data_aws_vpc_endpoint"
    private _id: string;
    constructor(id: string, config: data_aws_vpc_endpoint_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_cidr_blocks(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.cidr_blocks`)
  }
    get ref_dns_entry(): Reference<_data_aws_vpc_endpoint__dns_entry[]> {
        return new Reference(`data.${this._name}.${this._id}.dns_entry`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_network_interface_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.network_interface_ids`)
  }
    get ref_policy(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.policy`)
  }
    get ref_prefix_list_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.prefix_list_id`)
  }
    get ref_private_dns_enabled(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.private_dns_enabled`)
  }
    get ref_route_table_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.route_table_ids`)
  }
    get ref_security_group_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.security_group_ids`)
  }
    get ref_service_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.service_name`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_subnet_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.subnet_ids`)
  }
    get ref_vpc_endpoint_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_endpoint_type`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface data_aws_vpc_endpoint_service_config {
    acceptance_required?: rboolean
    availability_zones?: rstring[]
    base_endpoint_dns_names?: rstring[]
    owner?: rstring
    private_dns_name?: rstring
    service?: rstring
    service_name?: rstring
    service_type?: rstring
    vpc_endpoint_policy_supported?: rboolean
}

export class data_aws_vpc_endpoint_service implements Data {
    config: data_aws_vpc_endpoint_service_config
    private _is_data: boolean = true
    private _name: string = "data_aws_vpc_endpoint_service"
    private _id: string;
    constructor(id: string, config: data_aws_vpc_endpoint_service_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_acceptance_required(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.acceptance_required`)
  }
    get ref_availability_zones(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.availability_zones`)
  }
    get ref_base_endpoint_dns_names(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.base_endpoint_dns_names`)
  }
    get ref_owner(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner`)
  }
    get ref_private_dns_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.private_dns_name`)
  }
    get ref_service(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.service`)
  }
    get ref_service_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.service_name`)
  }
    get ref_service_type(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.service_type`)
  }
    get ref_vpc_endpoint_policy_supported(): Reference<boolean> {
        return new Reference(`data.${this._name}.${this._id}.vpc_endpoint_policy_supported`)
  }
}

export interface _data_aws_vpc_peering_connection__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_vpc_peering_connection_config {
    accepter?: {[propName: string]: rstring}
    cidr_block?: rstring
    filter?: _data_aws_vpc_peering_connection__filter[]
    id?: rstring
    owner_id?: rstring
    peer_cidr_block?: rstring
    peer_owner_id?: rstring
    peer_region?: rstring
    peer_vpc_id?: rstring
    region?: rstring
    requester?: {[propName: string]: rstring}
    status?: rstring
    tags?: {[propName: string]: rstring}
    vpc_id?: rstring
}

export class data_aws_vpc_peering_connection implements Data {
    config: data_aws_vpc_peering_connection_config
    private _is_data: boolean = true
    private _name: string = "data_aws_vpc_peering_connection"
    private _id: string;
    constructor(id: string, config: data_aws_vpc_peering_connection_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_accepter(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.accepter`)
  }
    get ref_cidr_block(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.cidr_block`)
  }
    get ref_filter(): Reference<_data_aws_vpc_peering_connection__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner_id`)
  }
    get ref_peer_cidr_block(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.peer_cidr_block`)
  }
    get ref_peer_owner_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.peer_owner_id`)
  }
    get ref_peer_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.peer_region`)
  }
    get ref_peer_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.peer_vpc_id`)
  }
    get ref_region(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.region`)
  }
    get ref_requester(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.requester`)
  }
    get ref_status(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.status`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
    get ref_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.vpc_id`)
  }
}

export interface _data_aws_vpcs__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_vpcs_config {
    filter?: _data_aws_vpcs__filter[]
    ids?: rstring[]
    tags?: {[propName: string]: rstring}
}

export class data_aws_vpcs implements Data {
    config: data_aws_vpcs_config
    private _is_data: boolean = true
    private _name: string = "data_aws_vpcs"
    private _id: string;
    constructor(id: string, config: data_aws_vpcs_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_filter(): Reference<_data_aws_vpcs__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_ids(): Reference<rstring[]> {
        return new Reference(`data.${this._name}.${this._id}.ids`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface _data_aws_vpn_gateway__filter {
    name: rstring
    values: rstring[]
}

export interface data_aws_vpn_gateway_config {
    amazon_side_asn?: rstring
    attached_vpc_id?: rstring
    availability_zone?: rstring
    filter?: _data_aws_vpn_gateway__filter[]
    id?: rstring
    state?: rstring
    tags?: {[propName: string]: rstring}
}

export class data_aws_vpn_gateway implements Data {
    config: data_aws_vpn_gateway_config
    private _is_data: boolean = true
    private _name: string = "data_aws_vpn_gateway"
    private _id: string;
    constructor(id: string, config: data_aws_vpn_gateway_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_amazon_side_asn(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.amazon_side_asn`)
  }
    get ref_attached_vpc_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.attached_vpc_id`)
  }
    get ref_availability_zone(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.availability_zone`)
  }
    get ref_filter(): Reference<_data_aws_vpn_gateway__filter[]> {
        return new Reference(`data.${this._name}.${this._id}.filter`)
  }
    get ref_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.id`)
  }
    get ref_state(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.state`)
  }
    get ref_tags(): Reference<{[propName: string]: rstring}> {
        return new Reference(`data.${this._name}.${this._id}.tags`)
  }
}

export interface _data_aws_workspaces_bundle__compute_type {
    name?: rstring
}

export interface _data_aws_workspaces_bundle__root_storage {
    capacity?: rstring
}

export interface _data_aws_workspaces_bundle__user_storage {
    capacity?: rstring
}

export interface data_aws_workspaces_bundle_config {
    bundle_id: rstring
    compute_type?: _data_aws_workspaces_bundle__compute_type[]
    description?: rstring
    name?: rstring
    owner?: rstring
    root_storage?: _data_aws_workspaces_bundle__root_storage[]
    user_storage?: _data_aws_workspaces_bundle__user_storage[]
}

export class data_aws_workspaces_bundle implements Data {
    config: data_aws_workspaces_bundle_config
    private _is_data: boolean = true
    private _name: string = "data_aws_workspaces_bundle"
    private _id: string;
    constructor(id: string, config: data_aws_workspaces_bundle_config) {
        this._id = id;
        this.config = config;
    }
    getID(): string {
      return this._id;
    }
    getName(): string {
      return this._name;
    }
    toJSON() {
      return {
          [this._name]: [
            {
              [this._id]: [this.config]
            }
          ]
      };
    }
    
    get ref_bundle_id(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.bundle_id`)
  }
    get ref_compute_type(): Reference<_data_aws_workspaces_bundle__compute_type[]> {
        return new Reference(`data.${this._name}.${this._id}.compute_type`)
  }
    get ref_description(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.description`)
  }
    get ref_name(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.name`)
  }
    get ref_owner(): Reference<string> {
        return new Reference(`data.${this._name}.${this._id}.owner`)
  }
    get ref_root_storage(): Reference<_data_aws_workspaces_bundle__root_storage[]> {
        return new Reference(`data.${this._name}.${this._id}.root_storage`)
  }
    get ref_user_storage(): Reference<_data_aws_workspaces_bundle__user_storage[]> {
        return new Reference(`data.${this._name}.${this._id}.user_storage`)
  }
}

